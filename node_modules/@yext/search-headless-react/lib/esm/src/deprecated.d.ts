import { SearchActions } from './useSearchActions';
import { StateSelector } from './useSearchState';
import { SearchUtilities } from './useSearchUtilities';
import { PropsWithChildren } from 'react';
import { HeadlessConfig } from '@yext/search-headless';
declare type Props = HeadlessConfig & {
    verticalKey?: string;
    sessionTrackingEnabled?: boolean;
};
/**
 * @deprecated AnswersHeadlessContext has been deprecated and replaced by SearchHeadlessContext
 */
export declare const AnswersHeadlessContext: import("react").Context<import("@yext/search-headless").SearchHeadless>;
/**
 * @deprecated AnswersActions has been deprecated and replaced by SearchActions
 */
export declare type AnswersActions = SearchActions;
/**
 * @deprecated AnswersUtilities has been deprecated and replaced by SearchUtilities
 */
export declare type AnswersUtilities = SearchUtilities;
/**
 * @deprecated useAnswersActions has been deprecated and replaced by useSearchActions
 */
export declare function useAnswersActions(): SearchActions;
/**
 * @deprecated useAnswersState has been deprecated and replaced by useSearchState
 */
export declare function useAnswersState<T>(stateSelector: StateSelector<T>): T;
/**
 * @deprecated useAnswersUtilities has been deprecated and replaced by useSearchUtilities
 */
export declare function useAnswersUtilities(): SearchUtilities;
/**
 * @deprecated AnswersHeadlessProvider has been deprecated and replaced by SearchHeadlessProvider
 */
export declare function AnswersHeadlessProvider(props: PropsWithChildren<Props>): JSX.Element;
export {};
//# sourceMappingURL=deprecated.d.ts.map