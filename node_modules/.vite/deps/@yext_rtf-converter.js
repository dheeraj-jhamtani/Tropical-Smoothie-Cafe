import {
  __commonJS
} from "./chunk-MB5FDF5C.js";

// node_modules/@yext/rtf-converter/lib/rtf-converter.min.js
var require_rtf_converter_min = __commonJS({
  "node_modules/@yext/rtf-converter/lib/rtf-converter.min.js"(exports, module) {
    !function(e, r) {
      "object" == typeof exports && "undefined" != typeof module ? module.exports = r() : "function" == typeof define && define.amd ? define(r) : (e = e || self).RtfConverter = r();
    }(exports, function() {
      "use strict";
      "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self && self;
      var e, r, t = (function(e2, r2) {
        e2.exports = function() {
          var e3 = { Aacute: "\xC1", aacute: "\xE1", Abreve: "\u0102", abreve: "\u0103", ac: "\u223E", acd: "\u223F", acE: "\u223E\u0333", Acirc: "\xC2", acirc: "\xE2", acute: "\xB4", Acy: "\u0410", acy: "\u0430", AElig: "\xC6", aelig: "\xE6", af: "\u2061", Afr: "\u{1D504}", afr: "\u{1D51E}", Agrave: "\xC0", agrave: "\xE0", alefsym: "\u2135", aleph: "\u2135", Alpha: "\u0391", alpha: "\u03B1", Amacr: "\u0100", amacr: "\u0101", amalg: "\u2A3F", amp: "&", AMP: "&", andand: "\u2A55", And: "\u2A53", and: "\u2227", andd: "\u2A5C", andslope: "\u2A58", andv: "\u2A5A", ang: "\u2220", ange: "\u29A4", angle: "\u2220", angmsdaa: "\u29A8", angmsdab: "\u29A9", angmsdac: "\u29AA", angmsdad: "\u29AB", angmsdae: "\u29AC", angmsdaf: "\u29AD", angmsdag: "\u29AE", angmsdah: "\u29AF", angmsd: "\u2221", angrt: "\u221F", angrtvb: "\u22BE", angrtvbd: "\u299D", angsph: "\u2222", angst: "\xC5", angzarr: "\u237C", Aogon: "\u0104", aogon: "\u0105", Aopf: "\u{1D538}", aopf: "\u{1D552}", apacir: "\u2A6F", ap: "\u2248", apE: "\u2A70", ape: "\u224A", apid: "\u224B", apos: "'", ApplyFunction: "\u2061", approx: "\u2248", approxeq: "\u224A", Aring: "\xC5", aring: "\xE5", Ascr: "\u{1D49C}", ascr: "\u{1D4B6}", Assign: "\u2254", ast: "*", asymp: "\u2248", asympeq: "\u224D", Atilde: "\xC3", atilde: "\xE3", Auml: "\xC4", auml: "\xE4", awconint: "\u2233", awint: "\u2A11", backcong: "\u224C", backepsilon: "\u03F6", backprime: "\u2035", backsim: "\u223D", backsimeq: "\u22CD", Backslash: "\u2216", Barv: "\u2AE7", barvee: "\u22BD", barwed: "\u2305", Barwed: "\u2306", barwedge: "\u2305", bbrk: "\u23B5", bbrktbrk: "\u23B6", bcong: "\u224C", Bcy: "\u0411", bcy: "\u0431", bdquo: "\u201E", becaus: "\u2235", because: "\u2235", Because: "\u2235", bemptyv: "\u29B0", bepsi: "\u03F6", bernou: "\u212C", Bernoullis: "\u212C", Beta: "\u0392", beta: "\u03B2", beth: "\u2136", between: "\u226C", Bfr: "\u{1D505}", bfr: "\u{1D51F}", bigcap: "\u22C2", bigcirc: "\u25EF", bigcup: "\u22C3", bigodot: "\u2A00", bigoplus: "\u2A01", bigotimes: "\u2A02", bigsqcup: "\u2A06", bigstar: "\u2605", bigtriangledown: "\u25BD", bigtriangleup: "\u25B3", biguplus: "\u2A04", bigvee: "\u22C1", bigwedge: "\u22C0", bkarow: "\u290D", blacklozenge: "\u29EB", blacksquare: "\u25AA", blacktriangle: "\u25B4", blacktriangledown: "\u25BE", blacktriangleleft: "\u25C2", blacktriangleright: "\u25B8", blank: "\u2423", blk12: "\u2592", blk14: "\u2591", blk34: "\u2593", block: "\u2588", bne: "=\u20E5", bnequiv: "\u2261\u20E5", bNot: "\u2AED", bnot: "\u2310", Bopf: "\u{1D539}", bopf: "\u{1D553}", bot: "\u22A5", bottom: "\u22A5", bowtie: "\u22C8", boxbox: "\u29C9", boxdl: "\u2510", boxdL: "\u2555", boxDl: "\u2556", boxDL: "\u2557", boxdr: "\u250C", boxdR: "\u2552", boxDr: "\u2553", boxDR: "\u2554", boxh: "\u2500", boxH: "\u2550", boxhd: "\u252C", boxHd: "\u2564", boxhD: "\u2565", boxHD: "\u2566", boxhu: "\u2534", boxHu: "\u2567", boxhU: "\u2568", boxHU: "\u2569", boxminus: "\u229F", boxplus: "\u229E", boxtimes: "\u22A0", boxul: "\u2518", boxuL: "\u255B", boxUl: "\u255C", boxUL: "\u255D", boxur: "\u2514", boxuR: "\u2558", boxUr: "\u2559", boxUR: "\u255A", boxv: "\u2502", boxV: "\u2551", boxvh: "\u253C", boxvH: "\u256A", boxVh: "\u256B", boxVH: "\u256C", boxvl: "\u2524", boxvL: "\u2561", boxVl: "\u2562", boxVL: "\u2563", boxvr: "\u251C", boxvR: "\u255E", boxVr: "\u255F", boxVR: "\u2560", bprime: "\u2035", breve: "\u02D8", Breve: "\u02D8", brvbar: "\xA6", bscr: "\u{1D4B7}", Bscr: "\u212C", bsemi: "\u204F", bsim: "\u223D", bsime: "\u22CD", bsolb: "\u29C5", bsol: "\\", bsolhsub: "\u27C8", bull: "\u2022", bullet: "\u2022", bump: "\u224E", bumpE: "\u2AAE", bumpe: "\u224F", Bumpeq: "\u224E", bumpeq: "\u224F", Cacute: "\u0106", cacute: "\u0107", capand: "\u2A44", capbrcup: "\u2A49", capcap: "\u2A4B", cap: "\u2229", Cap: "\u22D2", capcup: "\u2A47", capdot: "\u2A40", CapitalDifferentialD: "\u2145", caps: "\u2229\uFE00", caret: "\u2041", caron: "\u02C7", Cayleys: "\u212D", ccaps: "\u2A4D", Ccaron: "\u010C", ccaron: "\u010D", Ccedil: "\xC7", ccedil: "\xE7", Ccirc: "\u0108", ccirc: "\u0109", Cconint: "\u2230", ccups: "\u2A4C", ccupssm: "\u2A50", Cdot: "\u010A", cdot: "\u010B", cedil: "\xB8", Cedilla: "\xB8", cemptyv: "\u29B2", cent: "\xA2", centerdot: "\xB7", CenterDot: "\xB7", cfr: "\u{1D520}", Cfr: "\u212D", CHcy: "\u0427", chcy: "\u0447", check: "\u2713", checkmark: "\u2713", Chi: "\u03A7", chi: "\u03C7", circ: "\u02C6", circeq: "\u2257", circlearrowleft: "\u21BA", circlearrowright: "\u21BB", circledast: "\u229B", circledcirc: "\u229A", circleddash: "\u229D", CircleDot: "\u2299", circledR: "\xAE", circledS: "\u24C8", CircleMinus: "\u2296", CirclePlus: "\u2295", CircleTimes: "\u2297", cir: "\u25CB", cirE: "\u29C3", cire: "\u2257", cirfnint: "\u2A10", cirmid: "\u2AEF", cirscir: "\u29C2", ClockwiseContourIntegral: "\u2232", CloseCurlyDoubleQuote: "\u201D", CloseCurlyQuote: "\u2019", clubs: "\u2663", clubsuit: "\u2663", colon: ":", Colon: "\u2237", Colone: "\u2A74", colone: "\u2254", coloneq: "\u2254", comma: ",", commat: "@", comp: "\u2201", compfn: "\u2218", complement: "\u2201", complexes: "\u2102", cong: "\u2245", congdot: "\u2A6D", Congruent: "\u2261", conint: "\u222E", Conint: "\u222F", ContourIntegral: "\u222E", copf: "\u{1D554}", Copf: "\u2102", coprod: "\u2210", Coproduct: "\u2210", copy: "\xA9", COPY: "\xA9", copysr: "\u2117", CounterClockwiseContourIntegral: "\u2233", crarr: "\u21B5", cross: "\u2717", Cross: "\u2A2F", Cscr: "\u{1D49E}", cscr: "\u{1D4B8}", csub: "\u2ACF", csube: "\u2AD1", csup: "\u2AD0", csupe: "\u2AD2", ctdot: "\u22EF", cudarrl: "\u2938", cudarrr: "\u2935", cuepr: "\u22DE", cuesc: "\u22DF", cularr: "\u21B6", cularrp: "\u293D", cupbrcap: "\u2A48", cupcap: "\u2A46", CupCap: "\u224D", cup: "\u222A", Cup: "\u22D3", cupcup: "\u2A4A", cupdot: "\u228D", cupor: "\u2A45", cups: "\u222A\uFE00", curarr: "\u21B7", curarrm: "\u293C", curlyeqprec: "\u22DE", curlyeqsucc: "\u22DF", curlyvee: "\u22CE", curlywedge: "\u22CF", curren: "\xA4", curvearrowleft: "\u21B6", curvearrowright: "\u21B7", cuvee: "\u22CE", cuwed: "\u22CF", cwconint: "\u2232", cwint: "\u2231", cylcty: "\u232D", dagger: "\u2020", Dagger: "\u2021", daleth: "\u2138", darr: "\u2193", Darr: "\u21A1", dArr: "\u21D3", dash: "\u2010", Dashv: "\u2AE4", dashv: "\u22A3", dbkarow: "\u290F", dblac: "\u02DD", Dcaron: "\u010E", dcaron: "\u010F", Dcy: "\u0414", dcy: "\u0434", ddagger: "\u2021", ddarr: "\u21CA", DD: "\u2145", dd: "\u2146", DDotrahd: "\u2911", ddotseq: "\u2A77", deg: "\xB0", Del: "\u2207", Delta: "\u0394", delta: "\u03B4", demptyv: "\u29B1", dfisht: "\u297F", Dfr: "\u{1D507}", dfr: "\u{1D521}", dHar: "\u2965", dharl: "\u21C3", dharr: "\u21C2", DiacriticalAcute: "\xB4", DiacriticalDot: "\u02D9", DiacriticalDoubleAcute: "\u02DD", DiacriticalGrave: "`", DiacriticalTilde: "\u02DC", diam: "\u22C4", diamond: "\u22C4", Diamond: "\u22C4", diamondsuit: "\u2666", diams: "\u2666", die: "\xA8", DifferentialD: "\u2146", digamma: "\u03DD", disin: "\u22F2", div: "\xF7", divide: "\xF7", divideontimes: "\u22C7", divonx: "\u22C7", DJcy: "\u0402", djcy: "\u0452", dlcorn: "\u231E", dlcrop: "\u230D", dollar: "$", Dopf: "\u{1D53B}", dopf: "\u{1D555}", Dot: "\xA8", dot: "\u02D9", DotDot: "\u20DC", doteq: "\u2250", doteqdot: "\u2251", DotEqual: "\u2250", dotminus: "\u2238", dotplus: "\u2214", dotsquare: "\u22A1", doublebarwedge: "\u2306", DoubleContourIntegral: "\u222F", DoubleDot: "\xA8", DoubleDownArrow: "\u21D3", DoubleLeftArrow: "\u21D0", DoubleLeftRightArrow: "\u21D4", DoubleLeftTee: "\u2AE4", DoubleLongLeftArrow: "\u27F8", DoubleLongLeftRightArrow: "\u27FA", DoubleLongRightArrow: "\u27F9", DoubleRightArrow: "\u21D2", DoubleRightTee: "\u22A8", DoubleUpArrow: "\u21D1", DoubleUpDownArrow: "\u21D5", DoubleVerticalBar: "\u2225", DownArrowBar: "\u2913", downarrow: "\u2193", DownArrow: "\u2193", Downarrow: "\u21D3", DownArrowUpArrow: "\u21F5", DownBreve: "\u0311", downdownarrows: "\u21CA", downharpoonleft: "\u21C3", downharpoonright: "\u21C2", DownLeftRightVector: "\u2950", DownLeftTeeVector: "\u295E", DownLeftVectorBar: "\u2956", DownLeftVector: "\u21BD", DownRightTeeVector: "\u295F", DownRightVectorBar: "\u2957", DownRightVector: "\u21C1", DownTeeArrow: "\u21A7", DownTee: "\u22A4", drbkarow: "\u2910", drcorn: "\u231F", drcrop: "\u230C", Dscr: "\u{1D49F}", dscr: "\u{1D4B9}", DScy: "\u0405", dscy: "\u0455", dsol: "\u29F6", Dstrok: "\u0110", dstrok: "\u0111", dtdot: "\u22F1", dtri: "\u25BF", dtrif: "\u25BE", duarr: "\u21F5", duhar: "\u296F", dwangle: "\u29A6", DZcy: "\u040F", dzcy: "\u045F", dzigrarr: "\u27FF", Eacute: "\xC9", eacute: "\xE9", easter: "\u2A6E", Ecaron: "\u011A", ecaron: "\u011B", Ecirc: "\xCA", ecirc: "\xEA", ecir: "\u2256", ecolon: "\u2255", Ecy: "\u042D", ecy: "\u044D", eDDot: "\u2A77", Edot: "\u0116", edot: "\u0117", eDot: "\u2251", ee: "\u2147", efDot: "\u2252", Efr: "\u{1D508}", efr: "\u{1D522}", eg: "\u2A9A", Egrave: "\xC8", egrave: "\xE8", egs: "\u2A96", egsdot: "\u2A98", el: "\u2A99", Element: "\u2208", elinters: "\u23E7", ell: "\u2113", els: "\u2A95", elsdot: "\u2A97", Emacr: "\u0112", emacr: "\u0113", empty: "\u2205", emptyset: "\u2205", EmptySmallSquare: "\u25FB", emptyv: "\u2205", EmptyVerySmallSquare: "\u25AB", emsp13: "\u2004", emsp14: "\u2005", emsp: "\u2003", ENG: "\u014A", eng: "\u014B", ensp: "\u2002", Eogon: "\u0118", eogon: "\u0119", Eopf: "\u{1D53C}", eopf: "\u{1D556}", epar: "\u22D5", eparsl: "\u29E3", eplus: "\u2A71", epsi: "\u03B5", Epsilon: "\u0395", epsilon: "\u03B5", epsiv: "\u03F5", eqcirc: "\u2256", eqcolon: "\u2255", eqsim: "\u2242", eqslantgtr: "\u2A96", eqslantless: "\u2A95", Equal: "\u2A75", equals: "=", EqualTilde: "\u2242", equest: "\u225F", Equilibrium: "\u21CC", equiv: "\u2261", equivDD: "\u2A78", eqvparsl: "\u29E5", erarr: "\u2971", erDot: "\u2253", escr: "\u212F", Escr: "\u2130", esdot: "\u2250", Esim: "\u2A73", esim: "\u2242", Eta: "\u0397", eta: "\u03B7", ETH: "\xD0", eth: "\xF0", Euml: "\xCB", euml: "\xEB", euro: "\u20AC", excl: "!", exist: "\u2203", Exists: "\u2203", expectation: "\u2130", exponentiale: "\u2147", ExponentialE: "\u2147", fallingdotseq: "\u2252", Fcy: "\u0424", fcy: "\u0444", female: "\u2640", ffilig: "\uFB03", fflig: "\uFB00", ffllig: "\uFB04", Ffr: "\u{1D509}", ffr: "\u{1D523}", filig: "\uFB01", FilledSmallSquare: "\u25FC", FilledVerySmallSquare: "\u25AA", fjlig: "fj", flat: "\u266D", fllig: "\uFB02", fltns: "\u25B1", fnof: "\u0192", Fopf: "\u{1D53D}", fopf: "\u{1D557}", forall: "\u2200", ForAll: "\u2200", fork: "\u22D4", forkv: "\u2AD9", Fouriertrf: "\u2131", fpartint: "\u2A0D", frac12: "\xBD", frac13: "\u2153", frac14: "\xBC", frac15: "\u2155", frac16: "\u2159", frac18: "\u215B", frac23: "\u2154", frac25: "\u2156", frac34: "\xBE", frac35: "\u2157", frac38: "\u215C", frac45: "\u2158", frac56: "\u215A", frac58: "\u215D", frac78: "\u215E", frasl: "\u2044", frown: "\u2322", fscr: "\u{1D4BB}", Fscr: "\u2131", gacute: "\u01F5", Gamma: "\u0393", gamma: "\u03B3", Gammad: "\u03DC", gammad: "\u03DD", gap: "\u2A86", Gbreve: "\u011E", gbreve: "\u011F", Gcedil: "\u0122", Gcirc: "\u011C", gcirc: "\u011D", Gcy: "\u0413", gcy: "\u0433", Gdot: "\u0120", gdot: "\u0121", ge: "\u2265", gE: "\u2267", gEl: "\u2A8C", gel: "\u22DB", geq: "\u2265", geqq: "\u2267", geqslant: "\u2A7E", gescc: "\u2AA9", ges: "\u2A7E", gesdot: "\u2A80", gesdoto: "\u2A82", gesdotol: "\u2A84", gesl: "\u22DB\uFE00", gesles: "\u2A94", Gfr: "\u{1D50A}", gfr: "\u{1D524}", gg: "\u226B", Gg: "\u22D9", ggg: "\u22D9", gimel: "\u2137", GJcy: "\u0403", gjcy: "\u0453", gla: "\u2AA5", gl: "\u2277", glE: "\u2A92", glj: "\u2AA4", gnap: "\u2A8A", gnapprox: "\u2A8A", gne: "\u2A88", gnE: "\u2269", gneq: "\u2A88", gneqq: "\u2269", gnsim: "\u22E7", Gopf: "\u{1D53E}", gopf: "\u{1D558}", grave: "`", GreaterEqual: "\u2265", GreaterEqualLess: "\u22DB", GreaterFullEqual: "\u2267", GreaterGreater: "\u2AA2", GreaterLess: "\u2277", GreaterSlantEqual: "\u2A7E", GreaterTilde: "\u2273", Gscr: "\u{1D4A2}", gscr: "\u210A", gsim: "\u2273", gsime: "\u2A8E", gsiml: "\u2A90", gtcc: "\u2AA7", gtcir: "\u2A7A", gt: ">", GT: ">", Gt: "\u226B", gtdot: "\u22D7", gtlPar: "\u2995", gtquest: "\u2A7C", gtrapprox: "\u2A86", gtrarr: "\u2978", gtrdot: "\u22D7", gtreqless: "\u22DB", gtreqqless: "\u2A8C", gtrless: "\u2277", gtrsim: "\u2273", gvertneqq: "\u2269\uFE00", gvnE: "\u2269\uFE00", Hacek: "\u02C7", hairsp: "\u200A", half: "\xBD", hamilt: "\u210B", HARDcy: "\u042A", hardcy: "\u044A", harrcir: "\u2948", harr: "\u2194", hArr: "\u21D4", harrw: "\u21AD", Hat: "^", hbar: "\u210F", Hcirc: "\u0124", hcirc: "\u0125", hearts: "\u2665", heartsuit: "\u2665", hellip: "\u2026", hercon: "\u22B9", hfr: "\u{1D525}", Hfr: "\u210C", HilbertSpace: "\u210B", hksearow: "\u2925", hkswarow: "\u2926", hoarr: "\u21FF", homtht: "\u223B", hookleftarrow: "\u21A9", hookrightarrow: "\u21AA", hopf: "\u{1D559}", Hopf: "\u210D", horbar: "\u2015", HorizontalLine: "\u2500", hscr: "\u{1D4BD}", Hscr: "\u210B", hslash: "\u210F", Hstrok: "\u0126", hstrok: "\u0127", HumpDownHump: "\u224E", HumpEqual: "\u224F", hybull: "\u2043", hyphen: "\u2010", Iacute: "\xCD", iacute: "\xED", ic: "\u2063", Icirc: "\xCE", icirc: "\xEE", Icy: "\u0418", icy: "\u0438", Idot: "\u0130", IEcy: "\u0415", iecy: "\u0435", iexcl: "\xA1", iff: "\u21D4", ifr: "\u{1D526}", Ifr: "\u2111", Igrave: "\xCC", igrave: "\xEC", ii: "\u2148", iiiint: "\u2A0C", iiint: "\u222D", iinfin: "\u29DC", iiota: "\u2129", IJlig: "\u0132", ijlig: "\u0133", Imacr: "\u012A", imacr: "\u012B", image: "\u2111", ImaginaryI: "\u2148", imagline: "\u2110", imagpart: "\u2111", imath: "\u0131", Im: "\u2111", imof: "\u22B7", imped: "\u01B5", Implies: "\u21D2", incare: "\u2105", in: "\u2208", infin: "\u221E", infintie: "\u29DD", inodot: "\u0131", intcal: "\u22BA", int: "\u222B", Int: "\u222C", integers: "\u2124", Integral: "\u222B", intercal: "\u22BA", Intersection: "\u22C2", intlarhk: "\u2A17", intprod: "\u2A3C", InvisibleComma: "\u2063", InvisibleTimes: "\u2062", IOcy: "\u0401", iocy: "\u0451", Iogon: "\u012E", iogon: "\u012F", Iopf: "\u{1D540}", iopf: "\u{1D55A}", Iota: "\u0399", iota: "\u03B9", iprod: "\u2A3C", iquest: "\xBF", iscr: "\u{1D4BE}", Iscr: "\u2110", isin: "\u2208", isindot: "\u22F5", isinE: "\u22F9", isins: "\u22F4", isinsv: "\u22F3", isinv: "\u2208", it: "\u2062", Itilde: "\u0128", itilde: "\u0129", Iukcy: "\u0406", iukcy: "\u0456", Iuml: "\xCF", iuml: "\xEF", Jcirc: "\u0134", jcirc: "\u0135", Jcy: "\u0419", jcy: "\u0439", Jfr: "\u{1D50D}", jfr: "\u{1D527}", jmath: "\u0237", Jopf: "\u{1D541}", jopf: "\u{1D55B}", Jscr: "\u{1D4A5}", jscr: "\u{1D4BF}", Jsercy: "\u0408", jsercy: "\u0458", Jukcy: "\u0404", jukcy: "\u0454", Kappa: "\u039A", kappa: "\u03BA", kappav: "\u03F0", Kcedil: "\u0136", kcedil: "\u0137", Kcy: "\u041A", kcy: "\u043A", Kfr: "\u{1D50E}", kfr: "\u{1D528}", kgreen: "\u0138", KHcy: "\u0425", khcy: "\u0445", KJcy: "\u040C", kjcy: "\u045C", Kopf: "\u{1D542}", kopf: "\u{1D55C}", Kscr: "\u{1D4A6}", kscr: "\u{1D4C0}", lAarr: "\u21DA", Lacute: "\u0139", lacute: "\u013A", laemptyv: "\u29B4", lagran: "\u2112", Lambda: "\u039B", lambda: "\u03BB", lang: "\u27E8", Lang: "\u27EA", langd: "\u2991", langle: "\u27E8", lap: "\u2A85", Laplacetrf: "\u2112", laquo: "\xAB", larrb: "\u21E4", larrbfs: "\u291F", larr: "\u2190", Larr: "\u219E", lArr: "\u21D0", larrfs: "\u291D", larrhk: "\u21A9", larrlp: "\u21AB", larrpl: "\u2939", larrsim: "\u2973", larrtl: "\u21A2", latail: "\u2919", lAtail: "\u291B", lat: "\u2AAB", late: "\u2AAD", lates: "\u2AAD\uFE00", lbarr: "\u290C", lBarr: "\u290E", lbbrk: "\u2772", lbrace: "{", lbrack: "[", lbrke: "\u298B", lbrksld: "\u298F", lbrkslu: "\u298D", Lcaron: "\u013D", lcaron: "\u013E", Lcedil: "\u013B", lcedil: "\u013C", lceil: "\u2308", lcub: "{", Lcy: "\u041B", lcy: "\u043B", ldca: "\u2936", ldquo: "\u201C", ldquor: "\u201E", ldrdhar: "\u2967", ldrushar: "\u294B", ldsh: "\u21B2", le: "\u2264", lE: "\u2266", LeftAngleBracket: "\u27E8", LeftArrowBar: "\u21E4", leftarrow: "\u2190", LeftArrow: "\u2190", Leftarrow: "\u21D0", LeftArrowRightArrow: "\u21C6", leftarrowtail: "\u21A2", LeftCeiling: "\u2308", LeftDoubleBracket: "\u27E6", LeftDownTeeVector: "\u2961", LeftDownVectorBar: "\u2959", LeftDownVector: "\u21C3", LeftFloor: "\u230A", leftharpoondown: "\u21BD", leftharpoonup: "\u21BC", leftleftarrows: "\u21C7", leftrightarrow: "\u2194", LeftRightArrow: "\u2194", Leftrightarrow: "\u21D4", leftrightarrows: "\u21C6", leftrightharpoons: "\u21CB", leftrightsquigarrow: "\u21AD", LeftRightVector: "\u294E", LeftTeeArrow: "\u21A4", LeftTee: "\u22A3", LeftTeeVector: "\u295A", leftthreetimes: "\u22CB", LeftTriangleBar: "\u29CF", LeftTriangle: "\u22B2", LeftTriangleEqual: "\u22B4", LeftUpDownVector: "\u2951", LeftUpTeeVector: "\u2960", LeftUpVectorBar: "\u2958", LeftUpVector: "\u21BF", LeftVectorBar: "\u2952", LeftVector: "\u21BC", lEg: "\u2A8B", leg: "\u22DA", leq: "\u2264", leqq: "\u2266", leqslant: "\u2A7D", lescc: "\u2AA8", les: "\u2A7D", lesdot: "\u2A7F", lesdoto: "\u2A81", lesdotor: "\u2A83", lesg: "\u22DA\uFE00", lesges: "\u2A93", lessapprox: "\u2A85", lessdot: "\u22D6", lesseqgtr: "\u22DA", lesseqqgtr: "\u2A8B", LessEqualGreater: "\u22DA", LessFullEqual: "\u2266", LessGreater: "\u2276", lessgtr: "\u2276", LessLess: "\u2AA1", lesssim: "\u2272", LessSlantEqual: "\u2A7D", LessTilde: "\u2272", lfisht: "\u297C", lfloor: "\u230A", Lfr: "\u{1D50F}", lfr: "\u{1D529}", lg: "\u2276", lgE: "\u2A91", lHar: "\u2962", lhard: "\u21BD", lharu: "\u21BC", lharul: "\u296A", lhblk: "\u2584", LJcy: "\u0409", ljcy: "\u0459", llarr: "\u21C7", ll: "\u226A", Ll: "\u22D8", llcorner: "\u231E", Lleftarrow: "\u21DA", llhard: "\u296B", lltri: "\u25FA", Lmidot: "\u013F", lmidot: "\u0140", lmoustache: "\u23B0", lmoust: "\u23B0", lnap: "\u2A89", lnapprox: "\u2A89", lne: "\u2A87", lnE: "\u2268", lneq: "\u2A87", lneqq: "\u2268", lnsim: "\u22E6", loang: "\u27EC", loarr: "\u21FD", lobrk: "\u27E6", longleftarrow: "\u27F5", LongLeftArrow: "\u27F5", Longleftarrow: "\u27F8", longleftrightarrow: "\u27F7", LongLeftRightArrow: "\u27F7", Longleftrightarrow: "\u27FA", longmapsto: "\u27FC", longrightarrow: "\u27F6", LongRightArrow: "\u27F6", Longrightarrow: "\u27F9", looparrowleft: "\u21AB", looparrowright: "\u21AC", lopar: "\u2985", Lopf: "\u{1D543}", lopf: "\u{1D55D}", loplus: "\u2A2D", lotimes: "\u2A34", lowast: "\u2217", lowbar: "_", LowerLeftArrow: "\u2199", LowerRightArrow: "\u2198", loz: "\u25CA", lozenge: "\u25CA", lozf: "\u29EB", lpar: "(", lparlt: "\u2993", lrarr: "\u21C6", lrcorner: "\u231F", lrhar: "\u21CB", lrhard: "\u296D", lrm: "\u200E", lrtri: "\u22BF", lsaquo: "\u2039", lscr: "\u{1D4C1}", Lscr: "\u2112", lsh: "\u21B0", Lsh: "\u21B0", lsim: "\u2272", lsime: "\u2A8D", lsimg: "\u2A8F", lsqb: "[", lsquo: "\u2018", lsquor: "\u201A", Lstrok: "\u0141", lstrok: "\u0142", ltcc: "\u2AA6", ltcir: "\u2A79", lt: "<", LT: "<", Lt: "\u226A", ltdot: "\u22D6", lthree: "\u22CB", ltimes: "\u22C9", ltlarr: "\u2976", ltquest: "\u2A7B", ltri: "\u25C3", ltrie: "\u22B4", ltrif: "\u25C2", ltrPar: "\u2996", lurdshar: "\u294A", luruhar: "\u2966", lvertneqq: "\u2268\uFE00", lvnE: "\u2268\uFE00", macr: "\xAF", male: "\u2642", malt: "\u2720", maltese: "\u2720", Map: "\u2905", map: "\u21A6", mapsto: "\u21A6", mapstodown: "\u21A7", mapstoleft: "\u21A4", mapstoup: "\u21A5", marker: "\u25AE", mcomma: "\u2A29", Mcy: "\u041C", mcy: "\u043C", mdash: "\u2014", mDDot: "\u223A", measuredangle: "\u2221", MediumSpace: "\u205F", Mellintrf: "\u2133", Mfr: "\u{1D510}", mfr: "\u{1D52A}", mho: "\u2127", micro: "\xB5", midast: "*", midcir: "\u2AF0", mid: "\u2223", middot: "\xB7", minusb: "\u229F", minus: "\u2212", minusd: "\u2238", minusdu: "\u2A2A", MinusPlus: "\u2213", mlcp: "\u2ADB", mldr: "\u2026", mnplus: "\u2213", models: "\u22A7", Mopf: "\u{1D544}", mopf: "\u{1D55E}", mp: "\u2213", mscr: "\u{1D4C2}", Mscr: "\u2133", mstpos: "\u223E", Mu: "\u039C", mu: "\u03BC", multimap: "\u22B8", mumap: "\u22B8", nabla: "\u2207", Nacute: "\u0143", nacute: "\u0144", nang: "\u2220\u20D2", nap: "\u2249", napE: "\u2A70\u0338", napid: "\u224B\u0338", napos: "\u0149", napprox: "\u2249", natural: "\u266E", naturals: "\u2115", natur: "\u266E", nbsp: "\xA0", nbump: "\u224E\u0338", nbumpe: "\u224F\u0338", ncap: "\u2A43", Ncaron: "\u0147", ncaron: "\u0148", Ncedil: "\u0145", ncedil: "\u0146", ncong: "\u2247", ncongdot: "\u2A6D\u0338", ncup: "\u2A42", Ncy: "\u041D", ncy: "\u043D", ndash: "\u2013", nearhk: "\u2924", nearr: "\u2197", neArr: "\u21D7", nearrow: "\u2197", ne: "\u2260", nedot: "\u2250\u0338", NegativeMediumSpace: "\u200B", NegativeThickSpace: "\u200B", NegativeThinSpace: "\u200B", NegativeVeryThinSpace: "\u200B", nequiv: "\u2262", nesear: "\u2928", nesim: "\u2242\u0338", NestedGreaterGreater: "\u226B", NestedLessLess: "\u226A", NewLine: "\n", nexist: "\u2204", nexists: "\u2204", Nfr: "\u{1D511}", nfr: "\u{1D52B}", ngE: "\u2267\u0338", nge: "\u2271", ngeq: "\u2271", ngeqq: "\u2267\u0338", ngeqslant: "\u2A7E\u0338", nges: "\u2A7E\u0338", nGg: "\u22D9\u0338", ngsim: "\u2275", nGt: "\u226B\u20D2", ngt: "\u226F", ngtr: "\u226F", nGtv: "\u226B\u0338", nharr: "\u21AE", nhArr: "\u21CE", nhpar: "\u2AF2", ni: "\u220B", nis: "\u22FC", nisd: "\u22FA", niv: "\u220B", NJcy: "\u040A", njcy: "\u045A", nlarr: "\u219A", nlArr: "\u21CD", nldr: "\u2025", nlE: "\u2266\u0338", nle: "\u2270", nleftarrow: "\u219A", nLeftarrow: "\u21CD", nleftrightarrow: "\u21AE", nLeftrightarrow: "\u21CE", nleq: "\u2270", nleqq: "\u2266\u0338", nleqslant: "\u2A7D\u0338", nles: "\u2A7D\u0338", nless: "\u226E", nLl: "\u22D8\u0338", nlsim: "\u2274", nLt: "\u226A\u20D2", nlt: "\u226E", nltri: "\u22EA", nltrie: "\u22EC", nLtv: "\u226A\u0338", nmid: "\u2224", NoBreak: "\u2060", NonBreakingSpace: "\xA0", nopf: "\u{1D55F}", Nopf: "\u2115", Not: "\u2AEC", not: "\xAC", NotCongruent: "\u2262", NotCupCap: "\u226D", NotDoubleVerticalBar: "\u2226", NotElement: "\u2209", NotEqual: "\u2260", NotEqualTilde: "\u2242\u0338", NotExists: "\u2204", NotGreater: "\u226F", NotGreaterEqual: "\u2271", NotGreaterFullEqual: "\u2267\u0338", NotGreaterGreater: "\u226B\u0338", NotGreaterLess: "\u2279", NotGreaterSlantEqual: "\u2A7E\u0338", NotGreaterTilde: "\u2275", NotHumpDownHump: "\u224E\u0338", NotHumpEqual: "\u224F\u0338", notin: "\u2209", notindot: "\u22F5\u0338", notinE: "\u22F9\u0338", notinva: "\u2209", notinvb: "\u22F7", notinvc: "\u22F6", NotLeftTriangleBar: "\u29CF\u0338", NotLeftTriangle: "\u22EA", NotLeftTriangleEqual: "\u22EC", NotLess: "\u226E", NotLessEqual: "\u2270", NotLessGreater: "\u2278", NotLessLess: "\u226A\u0338", NotLessSlantEqual: "\u2A7D\u0338", NotLessTilde: "\u2274", NotNestedGreaterGreater: "\u2AA2\u0338", NotNestedLessLess: "\u2AA1\u0338", notni: "\u220C", notniva: "\u220C", notnivb: "\u22FE", notnivc: "\u22FD", NotPrecedes: "\u2280", NotPrecedesEqual: "\u2AAF\u0338", NotPrecedesSlantEqual: "\u22E0", NotReverseElement: "\u220C", NotRightTriangleBar: "\u29D0\u0338", NotRightTriangle: "\u22EB", NotRightTriangleEqual: "\u22ED", NotSquareSubset: "\u228F\u0338", NotSquareSubsetEqual: "\u22E2", NotSquareSuperset: "\u2290\u0338", NotSquareSupersetEqual: "\u22E3", NotSubset: "\u2282\u20D2", NotSubsetEqual: "\u2288", NotSucceeds: "\u2281", NotSucceedsEqual: "\u2AB0\u0338", NotSucceedsSlantEqual: "\u22E1", NotSucceedsTilde: "\u227F\u0338", NotSuperset: "\u2283\u20D2", NotSupersetEqual: "\u2289", NotTilde: "\u2241", NotTildeEqual: "\u2244", NotTildeFullEqual: "\u2247", NotTildeTilde: "\u2249", NotVerticalBar: "\u2224", nparallel: "\u2226", npar: "\u2226", nparsl: "\u2AFD\u20E5", npart: "\u2202\u0338", npolint: "\u2A14", npr: "\u2280", nprcue: "\u22E0", nprec: "\u2280", npreceq: "\u2AAF\u0338", npre: "\u2AAF\u0338", nrarrc: "\u2933\u0338", nrarr: "\u219B", nrArr: "\u21CF", nrarrw: "\u219D\u0338", nrightarrow: "\u219B", nRightarrow: "\u21CF", nrtri: "\u22EB", nrtrie: "\u22ED", nsc: "\u2281", nsccue: "\u22E1", nsce: "\u2AB0\u0338", Nscr: "\u{1D4A9}", nscr: "\u{1D4C3}", nshortmid: "\u2224", nshortparallel: "\u2226", nsim: "\u2241", nsime: "\u2244", nsimeq: "\u2244", nsmid: "\u2224", nspar: "\u2226", nsqsube: "\u22E2", nsqsupe: "\u22E3", nsub: "\u2284", nsubE: "\u2AC5\u0338", nsube: "\u2288", nsubset: "\u2282\u20D2", nsubseteq: "\u2288", nsubseteqq: "\u2AC5\u0338", nsucc: "\u2281", nsucceq: "\u2AB0\u0338", nsup: "\u2285", nsupE: "\u2AC6\u0338", nsupe: "\u2289", nsupset: "\u2283\u20D2", nsupseteq: "\u2289", nsupseteqq: "\u2AC6\u0338", ntgl: "\u2279", Ntilde: "\xD1", ntilde: "\xF1", ntlg: "\u2278", ntriangleleft: "\u22EA", ntrianglelefteq: "\u22EC", ntriangleright: "\u22EB", ntrianglerighteq: "\u22ED", Nu: "\u039D", nu: "\u03BD", num: "#", numero: "\u2116", numsp: "\u2007", nvap: "\u224D\u20D2", nvdash: "\u22AC", nvDash: "\u22AD", nVdash: "\u22AE", nVDash: "\u22AF", nvge: "\u2265\u20D2", nvgt: ">\u20D2", nvHarr: "\u2904", nvinfin: "\u29DE", nvlArr: "\u2902", nvle: "\u2264\u20D2", nvlt: "<\u20D2", nvltrie: "\u22B4\u20D2", nvrArr: "\u2903", nvrtrie: "\u22B5\u20D2", nvsim: "\u223C\u20D2", nwarhk: "\u2923", nwarr: "\u2196", nwArr: "\u21D6", nwarrow: "\u2196", nwnear: "\u2927", Oacute: "\xD3", oacute: "\xF3", oast: "\u229B", Ocirc: "\xD4", ocirc: "\xF4", ocir: "\u229A", Ocy: "\u041E", ocy: "\u043E", odash: "\u229D", Odblac: "\u0150", odblac: "\u0151", odiv: "\u2A38", odot: "\u2299", odsold: "\u29BC", OElig: "\u0152", oelig: "\u0153", ofcir: "\u29BF", Ofr: "\u{1D512}", ofr: "\u{1D52C}", ogon: "\u02DB", Ograve: "\xD2", ograve: "\xF2", ogt: "\u29C1", ohbar: "\u29B5", ohm: "\u03A9", oint: "\u222E", olarr: "\u21BA", olcir: "\u29BE", olcross: "\u29BB", oline: "\u203E", olt: "\u29C0", Omacr: "\u014C", omacr: "\u014D", Omega: "\u03A9", omega: "\u03C9", Omicron: "\u039F", omicron: "\u03BF", omid: "\u29B6", ominus: "\u2296", Oopf: "\u{1D546}", oopf: "\u{1D560}", opar: "\u29B7", OpenCurlyDoubleQuote: "\u201C", OpenCurlyQuote: "\u2018", operp: "\u29B9", oplus: "\u2295", orarr: "\u21BB", Or: "\u2A54", or: "\u2228", ord: "\u2A5D", order: "\u2134", orderof: "\u2134", ordf: "\xAA", ordm: "\xBA", origof: "\u22B6", oror: "\u2A56", orslope: "\u2A57", orv: "\u2A5B", oS: "\u24C8", Oscr: "\u{1D4AA}", oscr: "\u2134", Oslash: "\xD8", oslash: "\xF8", osol: "\u2298", Otilde: "\xD5", otilde: "\xF5", otimesas: "\u2A36", Otimes: "\u2A37", otimes: "\u2297", Ouml: "\xD6", ouml: "\xF6", ovbar: "\u233D", OverBar: "\u203E", OverBrace: "\u23DE", OverBracket: "\u23B4", OverParenthesis: "\u23DC", para: "\xB6", parallel: "\u2225", par: "\u2225", parsim: "\u2AF3", parsl: "\u2AFD", part: "\u2202", PartialD: "\u2202", Pcy: "\u041F", pcy: "\u043F", percnt: "%", period: ".", permil: "\u2030", perp: "\u22A5", pertenk: "\u2031", Pfr: "\u{1D513}", pfr: "\u{1D52D}", Phi: "\u03A6", phi: "\u03C6", phiv: "\u03D5", phmmat: "\u2133", phone: "\u260E", Pi: "\u03A0", pi: "\u03C0", pitchfork: "\u22D4", piv: "\u03D6", planck: "\u210F", planckh: "\u210E", plankv: "\u210F", plusacir: "\u2A23", plusb: "\u229E", pluscir: "\u2A22", plus: "+", plusdo: "\u2214", plusdu: "\u2A25", pluse: "\u2A72", PlusMinus: "\xB1", plusmn: "\xB1", plussim: "\u2A26", plustwo: "\u2A27", pm: "\xB1", Poincareplane: "\u210C", pointint: "\u2A15", popf: "\u{1D561}", Popf: "\u2119", pound: "\xA3", prap: "\u2AB7", Pr: "\u2ABB", pr: "\u227A", prcue: "\u227C", precapprox: "\u2AB7", prec: "\u227A", preccurlyeq: "\u227C", Precedes: "\u227A", PrecedesEqual: "\u2AAF", PrecedesSlantEqual: "\u227C", PrecedesTilde: "\u227E", preceq: "\u2AAF", precnapprox: "\u2AB9", precneqq: "\u2AB5", precnsim: "\u22E8", pre: "\u2AAF", prE: "\u2AB3", precsim: "\u227E", prime: "\u2032", Prime: "\u2033", primes: "\u2119", prnap: "\u2AB9", prnE: "\u2AB5", prnsim: "\u22E8", prod: "\u220F", Product: "\u220F", profalar: "\u232E", profline: "\u2312", profsurf: "\u2313", prop: "\u221D", Proportional: "\u221D", Proportion: "\u2237", propto: "\u221D", prsim: "\u227E", prurel: "\u22B0", Pscr: "\u{1D4AB}", pscr: "\u{1D4C5}", Psi: "\u03A8", psi: "\u03C8", puncsp: "\u2008", Qfr: "\u{1D514}", qfr: "\u{1D52E}", qint: "\u2A0C", qopf: "\u{1D562}", Qopf: "\u211A", qprime: "\u2057", Qscr: "\u{1D4AC}", qscr: "\u{1D4C6}", quaternions: "\u210D", quatint: "\u2A16", quest: "?", questeq: "\u225F", quot: '"', QUOT: '"', rAarr: "\u21DB", race: "\u223D\u0331", Racute: "\u0154", racute: "\u0155", radic: "\u221A", raemptyv: "\u29B3", rang: "\u27E9", Rang: "\u27EB", rangd: "\u2992", range: "\u29A5", rangle: "\u27E9", raquo: "\xBB", rarrap: "\u2975", rarrb: "\u21E5", rarrbfs: "\u2920", rarrc: "\u2933", rarr: "\u2192", Rarr: "\u21A0", rArr: "\u21D2", rarrfs: "\u291E", rarrhk: "\u21AA", rarrlp: "\u21AC", rarrpl: "\u2945", rarrsim: "\u2974", Rarrtl: "\u2916", rarrtl: "\u21A3", rarrw: "\u219D", ratail: "\u291A", rAtail: "\u291C", ratio: "\u2236", rationals: "\u211A", rbarr: "\u290D", rBarr: "\u290F", RBarr: "\u2910", rbbrk: "\u2773", rbrace: "}", rbrack: "]", rbrke: "\u298C", rbrksld: "\u298E", rbrkslu: "\u2990", Rcaron: "\u0158", rcaron: "\u0159", Rcedil: "\u0156", rcedil: "\u0157", rceil: "\u2309", rcub: "}", Rcy: "\u0420", rcy: "\u0440", rdca: "\u2937", rdldhar: "\u2969", rdquo: "\u201D", rdquor: "\u201D", rdsh: "\u21B3", real: "\u211C", realine: "\u211B", realpart: "\u211C", reals: "\u211D", Re: "\u211C", rect: "\u25AD", reg: "\xAE", REG: "\xAE", ReverseElement: "\u220B", ReverseEquilibrium: "\u21CB", ReverseUpEquilibrium: "\u296F", rfisht: "\u297D", rfloor: "\u230B", rfr: "\u{1D52F}", Rfr: "\u211C", rHar: "\u2964", rhard: "\u21C1", rharu: "\u21C0", rharul: "\u296C", Rho: "\u03A1", rho: "\u03C1", rhov: "\u03F1", RightAngleBracket: "\u27E9", RightArrowBar: "\u21E5", rightarrow: "\u2192", RightArrow: "\u2192", Rightarrow: "\u21D2", RightArrowLeftArrow: "\u21C4", rightarrowtail: "\u21A3", RightCeiling: "\u2309", RightDoubleBracket: "\u27E7", RightDownTeeVector: "\u295D", RightDownVectorBar: "\u2955", RightDownVector: "\u21C2", RightFloor: "\u230B", rightharpoondown: "\u21C1", rightharpoonup: "\u21C0", rightleftarrows: "\u21C4", rightleftharpoons: "\u21CC", rightrightarrows: "\u21C9", rightsquigarrow: "\u219D", RightTeeArrow: "\u21A6", RightTee: "\u22A2", RightTeeVector: "\u295B", rightthreetimes: "\u22CC", RightTriangleBar: "\u29D0", RightTriangle: "\u22B3", RightTriangleEqual: "\u22B5", RightUpDownVector: "\u294F", RightUpTeeVector: "\u295C", RightUpVectorBar: "\u2954", RightUpVector: "\u21BE", RightVectorBar: "\u2953", RightVector: "\u21C0", ring: "\u02DA", risingdotseq: "\u2253", rlarr: "\u21C4", rlhar: "\u21CC", rlm: "\u200F", rmoustache: "\u23B1", rmoust: "\u23B1", rnmid: "\u2AEE", roang: "\u27ED", roarr: "\u21FE", robrk: "\u27E7", ropar: "\u2986", ropf: "\u{1D563}", Ropf: "\u211D", roplus: "\u2A2E", rotimes: "\u2A35", RoundImplies: "\u2970", rpar: ")", rpargt: "\u2994", rppolint: "\u2A12", rrarr: "\u21C9", Rrightarrow: "\u21DB", rsaquo: "\u203A", rscr: "\u{1D4C7}", Rscr: "\u211B", rsh: "\u21B1", Rsh: "\u21B1", rsqb: "]", rsquo: "\u2019", rsquor: "\u2019", rthree: "\u22CC", rtimes: "\u22CA", rtri: "\u25B9", rtrie: "\u22B5", rtrif: "\u25B8", rtriltri: "\u29CE", RuleDelayed: "\u29F4", ruluhar: "\u2968", rx: "\u211E", Sacute: "\u015A", sacute: "\u015B", sbquo: "\u201A", scap: "\u2AB8", Scaron: "\u0160", scaron: "\u0161", Sc: "\u2ABC", sc: "\u227B", sccue: "\u227D", sce: "\u2AB0", scE: "\u2AB4", Scedil: "\u015E", scedil: "\u015F", Scirc: "\u015C", scirc: "\u015D", scnap: "\u2ABA", scnE: "\u2AB6", scnsim: "\u22E9", scpolint: "\u2A13", scsim: "\u227F", Scy: "\u0421", scy: "\u0441", sdotb: "\u22A1", sdot: "\u22C5", sdote: "\u2A66", searhk: "\u2925", searr: "\u2198", seArr: "\u21D8", searrow: "\u2198", sect: "\xA7", semi: ";", seswar: "\u2929", setminus: "\u2216", setmn: "\u2216", sext: "\u2736", Sfr: "\u{1D516}", sfr: "\u{1D530}", sfrown: "\u2322", sharp: "\u266F", SHCHcy: "\u0429", shchcy: "\u0449", SHcy: "\u0428", shcy: "\u0448", ShortDownArrow: "\u2193", ShortLeftArrow: "\u2190", shortmid: "\u2223", shortparallel: "\u2225", ShortRightArrow: "\u2192", ShortUpArrow: "\u2191", shy: "\xAD", Sigma: "\u03A3", sigma: "\u03C3", sigmaf: "\u03C2", sigmav: "\u03C2", sim: "\u223C", simdot: "\u2A6A", sime: "\u2243", simeq: "\u2243", simg: "\u2A9E", simgE: "\u2AA0", siml: "\u2A9D", simlE: "\u2A9F", simne: "\u2246", simplus: "\u2A24", simrarr: "\u2972", slarr: "\u2190", SmallCircle: "\u2218", smallsetminus: "\u2216", smashp: "\u2A33", smeparsl: "\u29E4", smid: "\u2223", smile: "\u2323", smt: "\u2AAA", smte: "\u2AAC", smtes: "\u2AAC\uFE00", SOFTcy: "\u042C", softcy: "\u044C", solbar: "\u233F", solb: "\u29C4", sol: "/", Sopf: "\u{1D54A}", sopf: "\u{1D564}", spades: "\u2660", spadesuit: "\u2660", spar: "\u2225", sqcap: "\u2293", sqcaps: "\u2293\uFE00", sqcup: "\u2294", sqcups: "\u2294\uFE00", Sqrt: "\u221A", sqsub: "\u228F", sqsube: "\u2291", sqsubset: "\u228F", sqsubseteq: "\u2291", sqsup: "\u2290", sqsupe: "\u2292", sqsupset: "\u2290", sqsupseteq: "\u2292", square: "\u25A1", Square: "\u25A1", SquareIntersection: "\u2293", SquareSubset: "\u228F", SquareSubsetEqual: "\u2291", SquareSuperset: "\u2290", SquareSupersetEqual: "\u2292", SquareUnion: "\u2294", squarf: "\u25AA", squ: "\u25A1", squf: "\u25AA", srarr: "\u2192", Sscr: "\u{1D4AE}", sscr: "\u{1D4C8}", ssetmn: "\u2216", ssmile: "\u2323", sstarf: "\u22C6", Star: "\u22C6", star: "\u2606", starf: "\u2605", straightepsilon: "\u03F5", straightphi: "\u03D5", strns: "\xAF", sub: "\u2282", Sub: "\u22D0", subdot: "\u2ABD", subE: "\u2AC5", sube: "\u2286", subedot: "\u2AC3", submult: "\u2AC1", subnE: "\u2ACB", subne: "\u228A", subplus: "\u2ABF", subrarr: "\u2979", subset: "\u2282", Subset: "\u22D0", subseteq: "\u2286", subseteqq: "\u2AC5", SubsetEqual: "\u2286", subsetneq: "\u228A", subsetneqq: "\u2ACB", subsim: "\u2AC7", subsub: "\u2AD5", subsup: "\u2AD3", succapprox: "\u2AB8", succ: "\u227B", succcurlyeq: "\u227D", Succeeds: "\u227B", SucceedsEqual: "\u2AB0", SucceedsSlantEqual: "\u227D", SucceedsTilde: "\u227F", succeq: "\u2AB0", succnapprox: "\u2ABA", succneqq: "\u2AB6", succnsim: "\u22E9", succsim: "\u227F", SuchThat: "\u220B", sum: "\u2211", Sum: "\u2211", sung: "\u266A", sup1: "\xB9", sup2: "\xB2", sup3: "\xB3", sup: "\u2283", Sup: "\u22D1", supdot: "\u2ABE", supdsub: "\u2AD8", supE: "\u2AC6", supe: "\u2287", supedot: "\u2AC4", Superset: "\u2283", SupersetEqual: "\u2287", suphsol: "\u27C9", suphsub: "\u2AD7", suplarr: "\u297B", supmult: "\u2AC2", supnE: "\u2ACC", supne: "\u228B", supplus: "\u2AC0", supset: "\u2283", Supset: "\u22D1", supseteq: "\u2287", supseteqq: "\u2AC6", supsetneq: "\u228B", supsetneqq: "\u2ACC", supsim: "\u2AC8", supsub: "\u2AD4", supsup: "\u2AD6", swarhk: "\u2926", swarr: "\u2199", swArr: "\u21D9", swarrow: "\u2199", swnwar: "\u292A", szlig: "\xDF", Tab: "	", target: "\u2316", Tau: "\u03A4", tau: "\u03C4", tbrk: "\u23B4", Tcaron: "\u0164", tcaron: "\u0165", Tcedil: "\u0162", tcedil: "\u0163", Tcy: "\u0422", tcy: "\u0442", tdot: "\u20DB", telrec: "\u2315", Tfr: "\u{1D517}", tfr: "\u{1D531}", there4: "\u2234", therefore: "\u2234", Therefore: "\u2234", Theta: "\u0398", theta: "\u03B8", thetasym: "\u03D1", thetav: "\u03D1", thickapprox: "\u2248", thicksim: "\u223C", ThickSpace: "\u205F\u200A", ThinSpace: "\u2009", thinsp: "\u2009", thkap: "\u2248", thksim: "\u223C", THORN: "\xDE", thorn: "\xFE", tilde: "\u02DC", Tilde: "\u223C", TildeEqual: "\u2243", TildeFullEqual: "\u2245", TildeTilde: "\u2248", timesbar: "\u2A31", timesb: "\u22A0", times: "\xD7", timesd: "\u2A30", tint: "\u222D", toea: "\u2928", topbot: "\u2336", topcir: "\u2AF1", top: "\u22A4", Topf: "\u{1D54B}", topf: "\u{1D565}", topfork: "\u2ADA", tosa: "\u2929", tprime: "\u2034", trade: "\u2122", TRADE: "\u2122", triangle: "\u25B5", triangledown: "\u25BF", triangleleft: "\u25C3", trianglelefteq: "\u22B4", triangleq: "\u225C", triangleright: "\u25B9", trianglerighteq: "\u22B5", tridot: "\u25EC", trie: "\u225C", triminus: "\u2A3A", TripleDot: "\u20DB", triplus: "\u2A39", trisb: "\u29CD", tritime: "\u2A3B", trpezium: "\u23E2", Tscr: "\u{1D4AF}", tscr: "\u{1D4C9}", TScy: "\u0426", tscy: "\u0446", TSHcy: "\u040B", tshcy: "\u045B", Tstrok: "\u0166", tstrok: "\u0167", twixt: "\u226C", twoheadleftarrow: "\u219E", twoheadrightarrow: "\u21A0", Uacute: "\xDA", uacute: "\xFA", uarr: "\u2191", Uarr: "\u219F", uArr: "\u21D1", Uarrocir: "\u2949", Ubrcy: "\u040E", ubrcy: "\u045E", Ubreve: "\u016C", ubreve: "\u016D", Ucirc: "\xDB", ucirc: "\xFB", Ucy: "\u0423", ucy: "\u0443", udarr: "\u21C5", Udblac: "\u0170", udblac: "\u0171", udhar: "\u296E", ufisht: "\u297E", Ufr: "\u{1D518}", ufr: "\u{1D532}", Ugrave: "\xD9", ugrave: "\xF9", uHar: "\u2963", uharl: "\u21BF", uharr: "\u21BE", uhblk: "\u2580", ulcorn: "\u231C", ulcorner: "\u231C", ulcrop: "\u230F", ultri: "\u25F8", Umacr: "\u016A", umacr: "\u016B", uml: "\xA8", UnderBar: "_", UnderBrace: "\u23DF", UnderBracket: "\u23B5", UnderParenthesis: "\u23DD", Union: "\u22C3", UnionPlus: "\u228E", Uogon: "\u0172", uogon: "\u0173", Uopf: "\u{1D54C}", uopf: "\u{1D566}", UpArrowBar: "\u2912", uparrow: "\u2191", UpArrow: "\u2191", Uparrow: "\u21D1", UpArrowDownArrow: "\u21C5", updownarrow: "\u2195", UpDownArrow: "\u2195", Updownarrow: "\u21D5", UpEquilibrium: "\u296E", upharpoonleft: "\u21BF", upharpoonright: "\u21BE", uplus: "\u228E", UpperLeftArrow: "\u2196", UpperRightArrow: "\u2197", upsi: "\u03C5", Upsi: "\u03D2", upsih: "\u03D2", Upsilon: "\u03A5", upsilon: "\u03C5", UpTeeArrow: "\u21A5", UpTee: "\u22A5", upuparrows: "\u21C8", urcorn: "\u231D", urcorner: "\u231D", urcrop: "\u230E", Uring: "\u016E", uring: "\u016F", urtri: "\u25F9", Uscr: "\u{1D4B0}", uscr: "\u{1D4CA}", utdot: "\u22F0", Utilde: "\u0168", utilde: "\u0169", utri: "\u25B5", utrif: "\u25B4", uuarr: "\u21C8", Uuml: "\xDC", uuml: "\xFC", uwangle: "\u29A7", vangrt: "\u299C", varepsilon: "\u03F5", varkappa: "\u03F0", varnothing: "\u2205", varphi: "\u03D5", varpi: "\u03D6", varpropto: "\u221D", varr: "\u2195", vArr: "\u21D5", varrho: "\u03F1", varsigma: "\u03C2", varsubsetneq: "\u228A\uFE00", varsubsetneqq: "\u2ACB\uFE00", varsupsetneq: "\u228B\uFE00", varsupsetneqq: "\u2ACC\uFE00", vartheta: "\u03D1", vartriangleleft: "\u22B2", vartriangleright: "\u22B3", vBar: "\u2AE8", Vbar: "\u2AEB", vBarv: "\u2AE9", Vcy: "\u0412", vcy: "\u0432", vdash: "\u22A2", vDash: "\u22A8", Vdash: "\u22A9", VDash: "\u22AB", Vdashl: "\u2AE6", veebar: "\u22BB", vee: "\u2228", Vee: "\u22C1", veeeq: "\u225A", vellip: "\u22EE", verbar: "|", Verbar: "\u2016", vert: "|", Vert: "\u2016", VerticalBar: "\u2223", VerticalLine: "|", VerticalSeparator: "\u2758", VerticalTilde: "\u2240", VeryThinSpace: "\u200A", Vfr: "\u{1D519}", vfr: "\u{1D533}", vltri: "\u22B2", vnsub: "\u2282\u20D2", vnsup: "\u2283\u20D2", Vopf: "\u{1D54D}", vopf: "\u{1D567}", vprop: "\u221D", vrtri: "\u22B3", Vscr: "\u{1D4B1}", vscr: "\u{1D4CB}", vsubnE: "\u2ACB\uFE00", vsubne: "\u228A\uFE00", vsupnE: "\u2ACC\uFE00", vsupne: "\u228B\uFE00", Vvdash: "\u22AA", vzigzag: "\u299A", Wcirc: "\u0174", wcirc: "\u0175", wedbar: "\u2A5F", wedge: "\u2227", Wedge: "\u22C0", wedgeq: "\u2259", weierp: "\u2118", Wfr: "\u{1D51A}", wfr: "\u{1D534}", Wopf: "\u{1D54E}", wopf: "\u{1D568}", wp: "\u2118", wr: "\u2240", wreath: "\u2240", Wscr: "\u{1D4B2}", wscr: "\u{1D4CC}", xcap: "\u22C2", xcirc: "\u25EF", xcup: "\u22C3", xdtri: "\u25BD", Xfr: "\u{1D51B}", xfr: "\u{1D535}", xharr: "\u27F7", xhArr: "\u27FA", Xi: "\u039E", xi: "\u03BE", xlarr: "\u27F5", xlArr: "\u27F8", xmap: "\u27FC", xnis: "\u22FB", xodot: "\u2A00", Xopf: "\u{1D54F}", xopf: "\u{1D569}", xoplus: "\u2A01", xotime: "\u2A02", xrarr: "\u27F6", xrArr: "\u27F9", Xscr: "\u{1D4B3}", xscr: "\u{1D4CD}", xsqcup: "\u2A06", xuplus: "\u2A04", xutri: "\u25B3", xvee: "\u22C1", xwedge: "\u22C0", Yacute: "\xDD", yacute: "\xFD", YAcy: "\u042F", yacy: "\u044F", Ycirc: "\u0176", ycirc: "\u0177", Ycy: "\u042B", ycy: "\u044B", yen: "\xA5", Yfr: "\u{1D51C}", yfr: "\u{1D536}", YIcy: "\u0407", yicy: "\u0457", Yopf: "\u{1D550}", yopf: "\u{1D56A}", Yscr: "\u{1D4B4}", yscr: "\u{1D4CE}", YUcy: "\u042E", yucy: "\u044E", yuml: "\xFF", Yuml: "\u0178", Zacute: "\u0179", zacute: "\u017A", Zcaron: "\u017D", zcaron: "\u017E", Zcy: "\u0417", zcy: "\u0437", Zdot: "\u017B", zdot: "\u017C", zeetrf: "\u2128", ZeroWidthSpace: "\u200B", Zeta: "\u0396", zeta: "\u03B6", zfr: "\u{1D537}", Zfr: "\u2128", ZHcy: "\u0416", zhcy: "\u0436", zigrarr: "\u21DD", zopf: "\u{1D56B}", Zopf: "\u2124", Zscr: "\u{1D4B5}", zscr: "\u{1D4CF}", zwj: "\u200D", zwnj: "\u200C" }, r3 = /[!-#%-\*,-\/:;\?@\[-\]_\{\}\xA1\xA7\xAB\xB6\xB7\xBB\xBF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166D\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2010-\u2027\u2030-\u2043\u2045-\u2051\u2053-\u205E\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4E\u3001-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]|\uD800[\uDD00-\uDD02\uDF9F\uDFD0]|\uD801\uDD6F|\uD802[\uDC57\uDD1F\uDD3F\uDE50-\uDE58\uDE7F\uDEF0-\uDEF6\uDF39-\uDF3F\uDF99-\uDF9C]|\uD803[\uDF55-\uDF59]|\uD804[\uDC47-\uDC4D\uDCBB\uDCBC\uDCBE-\uDCC1\uDD40-\uDD43\uDD74\uDD75\uDDC5-\uDDC8\uDDCD\uDDDB\uDDDD-\uDDDF\uDE38-\uDE3D\uDEA9]|\uD805[\uDC4B-\uDC4F\uDC5B\uDC5D\uDCC6\uDDC1-\uDDD7\uDE41-\uDE43\uDE60-\uDE6C\uDF3C-\uDF3E]|\uD806[\uDC3B\uDE3F-\uDE46\uDE9A-\uDE9C\uDE9E-\uDEA2]|\uD807[\uDC41-\uDC45\uDC70\uDC71\uDEF7\uDEF8]|\uD809[\uDC70-\uDC74]|\uD81A[\uDE6E\uDE6F\uDEF5\uDF37-\uDF3B\uDF44]|\uD81B[\uDE97-\uDE9A]|\uD82F\uDC9F|\uD836[\uDE87-\uDE8B]|\uD83A[\uDD5E\uDD5F]/, t2 = {};
          function n2(e4, r4, s3) {
            var o3, i3, a3, c3, l3, u3 = "";
            for ("string" != typeof r4 && (s3 = r4, r4 = n2.defaultChars), void 0 === s3 && (s3 = true), l3 = function(e5) {
              var r5, n3, s4 = t2[e5];
              if (s4)
                return s4;
              for (s4 = t2[e5] = [], r5 = 0; r5 < 128; r5++)
                n3 = String.fromCharCode(r5), /^[0-9a-z]$/i.test(n3) ? s4.push(n3) : s4.push("%" + ("0" + r5.toString(16).toUpperCase()).slice(-2));
              for (r5 = 0; r5 < e5.length; r5++)
                s4[e5.charCodeAt(r5)] = e5[r5];
              return s4;
            }(r4), o3 = 0, i3 = e4.length; o3 < i3; o3++)
              if (a3 = e4.charCodeAt(o3), s3 && 37 === a3 && o3 + 2 < i3 && /^[0-9a-f]{2}$/i.test(e4.slice(o3 + 1, o3 + 3)))
                u3 += e4.slice(o3, o3 + 3), o3 += 2;
              else if (a3 < 128)
                u3 += l3[a3];
              else if (a3 >= 55296 && a3 <= 57343) {
                if (a3 >= 55296 && a3 <= 56319 && o3 + 1 < i3 && (c3 = e4.charCodeAt(o3 + 1)) >= 56320 && c3 <= 57343) {
                  u3 += encodeURIComponent(e4[o3] + e4[o3 + 1]), o3++;
                  continue;
                }
                u3 += "%EF%BF%BD";
              } else
                u3 += encodeURIComponent(e4[o3]);
            return u3;
          }
          n2.defaultChars = ";/?:@&=+$,-_.!~*'()#", n2.componentChars = "-_.!~*'()";
          var s2 = n2, o2 = {};
          function i2(e4, r4) {
            var t3;
            return "string" != typeof r4 && (r4 = i2.defaultChars), t3 = function(e5) {
              var r5, t4, n3 = o2[e5];
              if (n3)
                return n3;
              for (n3 = o2[e5] = [], r5 = 0; r5 < 128; r5++)
                t4 = String.fromCharCode(r5), n3.push(t4);
              for (r5 = 0; r5 < e5.length; r5++)
                t4 = e5.charCodeAt(r5), n3[t4] = "%" + ("0" + t4.toString(16).toUpperCase()).slice(-2);
              return n3;
            }(r4), e4.replace(/(%[a-f0-9]{2})+/gi, function(e5) {
              var r5, n3, s3, o3, i3, a3, c3, l3 = "";
              for (r5 = 0, n3 = e5.length; r5 < n3; r5 += 3)
                (s3 = parseInt(e5.slice(r5 + 1, r5 + 3), 16)) < 128 ? l3 += t3[s3] : 192 == (224 & s3) && r5 + 3 < n3 && 128 == (192 & (o3 = parseInt(e5.slice(r5 + 4, r5 + 6), 16))) ? (l3 += (c3 = s3 << 6 & 1984 | 63 & o3) < 128 ? "\uFFFD\uFFFD" : String.fromCharCode(c3), r5 += 3) : 224 == (240 & s3) && r5 + 6 < n3 && (o3 = parseInt(e5.slice(r5 + 4, r5 + 6), 16), i3 = parseInt(e5.slice(r5 + 7, r5 + 9), 16), 128 == (192 & o3) && 128 == (192 & i3)) ? (l3 += (c3 = s3 << 12 & 61440 | o3 << 6 & 4032 | 63 & i3) < 2048 || c3 >= 55296 && c3 <= 57343 ? "\uFFFD\uFFFD\uFFFD" : String.fromCharCode(c3), r5 += 6) : 240 == (248 & s3) && r5 + 9 < n3 && (o3 = parseInt(e5.slice(r5 + 4, r5 + 6), 16), i3 = parseInt(e5.slice(r5 + 7, r5 + 9), 16), a3 = parseInt(e5.slice(r5 + 10, r5 + 12), 16), 128 == (192 & o3) && 128 == (192 & i3) && 128 == (192 & a3)) ? ((c3 = s3 << 18 & 1835008 | o3 << 12 & 258048 | i3 << 6 & 4032 | 63 & a3) < 65536 || c3 > 1114111 ? l3 += "\uFFFD\uFFFD\uFFFD\uFFFD" : (c3 -= 65536, l3 += String.fromCharCode(55296 + (c3 >> 10), 56320 + (1023 & c3))), r5 += 9) : l3 += "\uFFFD";
              return l3;
            });
          }
          i2.defaultChars = ";/?:@&=+$,#", i2.componentChars = "";
          var a2 = i2;
          function c2() {
            this.protocol = null, this.slashes = null, this.auth = null, this.port = null, this.hostname = null, this.hash = null, this.search = null, this.pathname = null;
          }
          var l2 = /^([a-z0-9.+-]+:)/i, u2 = /:[0-9]*$/, p2 = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/, h2 = ["{", "}", "|", "\\", "^", "`"].concat(["<", ">", '"', "`", " ", "\r", "\n", "	"]), f2 = ["'"].concat(h2), d2 = ["%", "/", "?", ";", "#"].concat(f2), m2 = ["/", "?", "#"], g2 = /^[+a-z0-9A-Z_-]{0,63}$/, _2 = /^([+a-z0-9A-Z_-]{0,63})(.*)$/, k = { javascript: true, "javascript:": true }, b = { http: true, https: true, ftp: true, gopher: true, file: true, "http:": true, "https:": true, "ftp:": true, "gopher:": true, "file:": true };
          c2.prototype.parse = function(e4, r4) {
            var t3, n3, s3, o3, i3, a3 = e4;
            if (a3 = a3.trim(), !r4 && 1 === e4.split("#").length) {
              var c3 = p2.exec(a3);
              if (c3)
                return this.pathname = c3[1], c3[2] && (this.search = c3[2]), this;
            }
            var u3 = l2.exec(a3);
            if (u3 && (u3 = u3[0], s3 = u3.toLowerCase(), this.protocol = u3, a3 = a3.substr(u3.length)), (r4 || u3 || a3.match(/^\/\/[^@\/]+@[^@\/]+/)) && (!(i3 = "//" === a3.substr(0, 2)) || u3 && k[u3] || (a3 = a3.substr(2), this.slashes = true)), !k[u3] && (i3 || u3 && !b[u3])) {
              var h3, f3, v2 = -1;
              for (t3 = 0; t3 < m2.length; t3++)
                -1 !== (o3 = a3.indexOf(m2[t3])) && (-1 === v2 || o3 < v2) && (v2 = o3);
              for (-1 !== (f3 = -1 === v2 ? a3.lastIndexOf("@") : a3.lastIndexOf("@", v2)) && (h3 = a3.slice(0, f3), a3 = a3.slice(f3 + 1), this.auth = h3), v2 = -1, t3 = 0; t3 < d2.length; t3++)
                -1 !== (o3 = a3.indexOf(d2[t3])) && (-1 === v2 || o3 < v2) && (v2 = o3);
              -1 === v2 && (v2 = a3.length), ":" === a3[v2 - 1] && v2--;
              var C2 = a3.slice(0, v2);
              a3 = a3.slice(v2), this.parseHost(C2), this.hostname = this.hostname || "";
              var y2 = "[" === this.hostname[0] && "]" === this.hostname[this.hostname.length - 1];
              if (!y2) {
                var A2 = this.hostname.split(/\./);
                for (t3 = 0, n3 = A2.length; t3 < n3; t3++) {
                  var x2 = A2[t3];
                  if (x2 && !x2.match(g2)) {
                    for (var w2 = "", D2 = 0, E2 = x2.length; D2 < E2; D2++)
                      x2.charCodeAt(D2) > 127 ? w2 += "x" : w2 += x2[D2];
                    if (!w2.match(g2)) {
                      var q2 = A2.slice(0, t3), S2 = A2.slice(t3 + 1), F2 = x2.match(_2);
                      F2 && (q2.push(F2[1]), S2.unshift(F2[2])), S2.length && (a3 = S2.join(".") + a3), this.hostname = q2.join(".");
                      break;
                    }
                  }
                }
              }
              this.hostname.length > 255 && (this.hostname = ""), y2 && (this.hostname = this.hostname.substr(1, this.hostname.length - 2));
            }
            var L2 = a3.indexOf("#");
            -1 !== L2 && (this.hash = a3.substr(L2), a3 = a3.slice(0, L2));
            var z2 = a3.indexOf("?");
            return -1 !== z2 && (this.search = a3.substr(z2), a3 = a3.slice(0, z2)), a3 && (this.pathname = a3), b[s3] && this.hostname && !this.pathname && (this.pathname = ""), this;
          }, c2.prototype.parseHost = function(e4) {
            var r4 = u2.exec(e4);
            r4 && (":" !== (r4 = r4[0]) && (this.port = r4.substr(1)), e4 = e4.substr(0, e4.length - r4.length)), e4 && (this.hostname = e4);
          };
          var v, C, y = { encode: s2, decode: a2, format: function(e4) {
            var r4 = "";
            return r4 += e4.protocol || "", r4 += e4.slashes ? "//" : "", r4 += e4.auth ? e4.auth + "@" : "", e4.hostname && -1 !== e4.hostname.indexOf(":") ? r4 += "[" + e4.hostname + "]" : r4 += e4.hostname || "", r4 += e4.port ? ":" + e4.port : "", r4 += e4.pathname || "", r4 += e4.search || "", r4 += e4.hash || "";
          }, parse: function(e4, r4) {
            if (e4 && e4 instanceof c2)
              return e4;
            var t3 = new c2();
            return t3.parse(e4, r4), t3;
          } }, A = /[\0-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/, x = /[\0-\x1F\x7F-\x9F]/, w = /[ \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000]/, D = { Any: A, Cc: x, Cf: /[\xAD\u0600-\u0605\u061C\u06DD\u070F\u08E2\u180E\u200B-\u200F\u202A-\u202E\u2060-\u2064\u2066-\u206F\uFEFF\uFFF9-\uFFFB]|\uD804[\uDCBD\uDCCD]|\uD82F[\uDCA0-\uDCA3]|\uD834[\uDD73-\uDD7A]|\uDB40[\uDC01\uDC20-\uDC7F]/, P: r3, Z: w }, E = (function(t3, n3) {
            var s3 = Object.prototype.hasOwnProperty;
            function o3(e4, r4) {
              return s3.call(e4, r4);
            }
            function i3(e4) {
              return !(e4 >= 55296 && e4 <= 57343 || e4 >= 64976 && e4 <= 65007 || 65535 == (65535 & e4) || 65534 == (65535 & e4) || e4 >= 0 && e4 <= 8 || 11 === e4 || e4 >= 14 && e4 <= 31 || e4 >= 127 && e4 <= 159 || e4 > 1114111);
            }
            function a3(e4) {
              if (e4 > 65535) {
                var r4 = 55296 + ((e4 -= 65536) >> 10), t4 = 56320 + (1023 & e4);
                return String.fromCharCode(r4, t4);
              }
              return String.fromCharCode(e4);
            }
            var c3 = /\\([!"#$%&'()*+,\-.\/:;<=>?@[\\\]^_`{|}~])/g, l3 = new RegExp(c3.source + "|" + /&([a-z#][a-z0-9]{1,31});/gi.source, "gi"), u3 = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i, p3 = /[&<>"]/, h3 = /[&<>"]/g, f3 = { "&": "&amp;", "<": "&lt;", ">": "&gt;", '"': "&quot;" };
            function d3(e4) {
              return f3[e4];
            }
            var m3 = /[.?*+^$[\]\\(){}|-]/g;
            n3.lib = {}, n3.lib.mdurl = y, n3.lib.ucmicro = D, n3.assign = function(e4) {
              return Array.prototype.slice.call(arguments, 1).forEach(function(r4) {
                if (r4) {
                  if ("object" != typeof r4)
                    throw new TypeError(r4 + "must be object");
                  Object.keys(r4).forEach(function(t4) {
                    e4[t4] = r4[t4];
                  });
                }
              }), e4;
            }, n3.isString = function(e4) {
              return "[object String]" === function(e5) {
                return Object.prototype.toString.call(e5);
              }(e4);
            }, n3.has = o3, n3.unescapeMd = function(e4) {
              return e4.indexOf("\\") < 0 ? e4 : e4.replace(c3, "$1");
            }, n3.unescapeAll = function(r4) {
              return r4.indexOf("\\") < 0 && r4.indexOf("&") < 0 ? r4 : r4.replace(l3, function(r5, t4, n4) {
                return t4 || function(r6, t5) {
                  var n5 = 0;
                  return o3(e3, t5) ? e3[t5] : 35 === t5.charCodeAt(0) && u3.test(t5) && i3(n5 = "x" === t5[1].toLowerCase() ? parseInt(t5.slice(2), 16) : parseInt(t5.slice(1), 10)) ? a3(n5) : r6;
                }(r5, n4);
              });
            }, n3.isValidEntityCode = i3, n3.fromCodePoint = a3, n3.escapeHtml = function(e4) {
              return p3.test(e4) ? e4.replace(h3, d3) : e4;
            }, n3.arrayReplaceAt = function(e4, r4, t4) {
              return [].concat(e4.slice(0, r4), t4, e4.slice(r4 + 1));
            }, n3.isSpace = function(e4) {
              switch (e4) {
                case 9:
                case 32:
                  return true;
              }
              return false;
            }, n3.isWhiteSpace = function(e4) {
              if (e4 >= 8192 && e4 <= 8202)
                return true;
              switch (e4) {
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                case 32:
                case 160:
                case 5760:
                case 8239:
                case 8287:
                case 12288:
                  return true;
              }
              return false;
            }, n3.isMdAsciiPunct = function(e4) {
              switch (e4) {
                case 33:
                case 34:
                case 35:
                case 36:
                case 37:
                case 38:
                case 39:
                case 40:
                case 41:
                case 42:
                case 43:
                case 44:
                case 45:
                case 46:
                case 47:
                case 58:
                case 59:
                case 60:
                case 61:
                case 62:
                case 63:
                case 64:
                case 91:
                case 92:
                case 93:
                case 94:
                case 95:
                case 96:
                case 123:
                case 124:
                case 125:
                case 126:
                  return true;
                default:
                  return false;
              }
            }, n3.isPunctChar = function(e4) {
              return r3.test(e4);
            }, n3.escapeRE = function(e4) {
              return e4.replace(m3, "\\$&");
            }, n3.normalizeReference = function(e4) {
              return e4 = e4.trim().replace(/\s+/g, " "), "\u1E7E" === "\u1E9E".toLowerCase() && (e4 = e4.replace(/\u1e9e/g, "\xDF")), e4.toLowerCase().toUpperCase();
            };
          }(C = { path: v, exports: {}, require: function(e4, r4) {
            return function() {
              throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs");
            }(null == r4 && C.path);
          } }, C.exports), C.exports), q = E.unescapeAll, S = E.unescapeAll, F = { parseLinkLabel: function(e4, r4, t3) {
            var n3, s3, o3, i3, a3 = -1, c3 = e4.posMax, l3 = e4.pos;
            for (e4.pos = r4 + 1, n3 = 1; e4.pos < c3; ) {
              if (93 === (o3 = e4.src.charCodeAt(e4.pos)) && 0 == --n3) {
                s3 = true;
                break;
              }
              if (i3 = e4.pos, e4.md.inline.skipToken(e4), 91 === o3) {
                if (i3 === e4.pos - 1)
                  n3++;
                else if (t3)
                  return e4.pos = l3, -1;
              }
            }
            return s3 && (a3 = e4.pos), e4.pos = l3, a3;
          }, parseLinkDestination: function(e4, r4, t3) {
            var n3, s3, o3 = r4, i3 = { ok: false, pos: 0, lines: 0, str: "" };
            if (60 === e4.charCodeAt(r4)) {
              for (r4++; r4 < t3; ) {
                if (10 === (n3 = e4.charCodeAt(r4)))
                  return i3;
                if (60 === n3)
                  return i3;
                if (62 === n3)
                  return i3.pos = r4 + 1, i3.str = q(e4.slice(o3 + 1, r4)), i3.ok = true, i3;
                92 === n3 && r4 + 1 < t3 ? r4 += 2 : r4++;
              }
              return i3;
            }
            for (s3 = 0; r4 < t3 && 32 !== (n3 = e4.charCodeAt(r4)) && !(n3 < 32 || 127 === n3); )
              if (92 === n3 && r4 + 1 < t3) {
                if (32 === e4.charCodeAt(r4 + 1))
                  break;
                r4 += 2;
              } else {
                if (40 === n3 && ++s3 > 32)
                  return i3;
                if (41 === n3) {
                  if (0 === s3)
                    break;
                  s3--;
                }
                r4++;
              }
            return o3 === r4 ? i3 : 0 !== s3 ? i3 : (i3.str = q(e4.slice(o3, r4)), i3.lines = 0, i3.pos = r4, i3.ok = true, i3);
          }, parseLinkTitle: function(e4, r4, t3) {
            var n3, s3, o3 = 0, i3 = r4, a3 = { ok: false, pos: 0, lines: 0, str: "" };
            if (r4 >= t3)
              return a3;
            if (34 !== (s3 = e4.charCodeAt(r4)) && 39 !== s3 && 40 !== s3)
              return a3;
            for (r4++, 40 === s3 && (s3 = 41); r4 < t3; ) {
              if ((n3 = e4.charCodeAt(r4)) === s3)
                return a3.pos = r4 + 1, a3.lines = o3, a3.str = S(e4.slice(i3 + 1, r4)), a3.ok = true, a3;
              if (40 === n3 && 41 === s3)
                return a3;
              10 === n3 ? o3++ : 92 === n3 && r4 + 1 < t3 && (r4++, 10 === e4.charCodeAt(r4) && o3++), r4++;
            }
            return a3;
          } }, L = E.assign, z = E.unescapeAll, T = E.escapeHtml, I = {};
          function M() {
            this.rules = L({}, I);
          }
          I.code_inline = function(e4, r4, t3, n3, s3) {
            var o3 = e4[r4];
            return "<code" + s3.renderAttrs(o3) + ">" + T(e4[r4].content) + "</code>";
          }, I.code_block = function(e4, r4, t3, n3, s3) {
            var o3 = e4[r4];
            return "<pre" + s3.renderAttrs(o3) + "><code>" + T(e4[r4].content) + "</code></pre>\n";
          }, I.fence = function(e4, r4, t3, n3, s3) {
            var o3, i3, a3, c3, l3, u3 = e4[r4], p3 = u3.info ? z(u3.info).trim() : "", h3 = "", f3 = "";
            return p3 && (a3 = p3.split(/(\s+)/g), h3 = a3[0], f3 = a3.slice(2).join("")), 0 === (o3 = t3.highlight && t3.highlight(u3.content, h3, f3) || T(u3.content)).indexOf("<pre") ? o3 + "\n" : p3 ? (i3 = u3.attrIndex("class"), c3 = u3.attrs ? u3.attrs.slice() : [], i3 < 0 ? c3.push(["class", t3.langPrefix + h3]) : (c3[i3] = c3[i3].slice(), c3[i3][1] += " " + t3.langPrefix + h3), l3 = { attrs: c3 }, "<pre><code" + s3.renderAttrs(l3) + ">" + o3 + "</code></pre>\n") : "<pre><code" + s3.renderAttrs(u3) + ">" + o3 + "</code></pre>\n";
          }, I.image = function(e4, r4, t3, n3, s3) {
            var o3 = e4[r4];
            return o3.attrs[o3.attrIndex("alt")][1] = s3.renderInlineAsText(o3.children, t3, n3), s3.renderToken(e4, r4, t3);
          }, I.hardbreak = function(e4, r4, t3) {
            return t3.xhtmlOut ? "<br />\n" : "<br>\n";
          }, I.softbreak = function(e4, r4, t3) {
            return t3.breaks ? t3.xhtmlOut ? "<br />\n" : "<br>\n" : "\n";
          }, I.text = function(e4, r4) {
            return T(e4[r4].content);
          }, I.html_block = function(e4, r4) {
            return e4[r4].content;
          }, I.html_inline = function(e4, r4) {
            return e4[r4].content;
          }, M.prototype.renderAttrs = function(e4) {
            var r4, t3, n3;
            if (!e4.attrs)
              return "";
            for (n3 = "", r4 = 0, t3 = e4.attrs.length; r4 < t3; r4++)
              n3 += " " + T(e4.attrs[r4][0]) + '="' + T(e4.attrs[r4][1]) + '"';
            return n3;
          }, M.prototype.renderToken = function(e4, r4, t3) {
            var n3, s3 = "", o3 = false, i3 = e4[r4];
            return i3.hidden ? "" : (i3.block && -1 !== i3.nesting && r4 && e4[r4 - 1].hidden && (s3 += "\n"), s3 += (-1 === i3.nesting ? "</" : "<") + i3.tag, s3 += this.renderAttrs(i3), 0 === i3.nesting && t3.xhtmlOut && (s3 += " /"), i3.block && (o3 = true, 1 === i3.nesting && r4 + 1 < e4.length && ("inline" === (n3 = e4[r4 + 1]).type || n3.hidden ? o3 = false : -1 === n3.nesting && n3.tag === i3.tag && (o3 = false))), s3 += o3 ? ">\n" : ">");
          }, M.prototype.renderInline = function(e4, r4, t3) {
            for (var n3, s3 = "", o3 = this.rules, i3 = 0, a3 = e4.length; i3 < a3; i3++)
              n3 = e4[i3].type, void 0 !== o3[n3] ? s3 += o3[n3](e4, i3, r4, t3, this) : s3 += this.renderToken(e4, i3, r4);
            return s3;
          }, M.prototype.renderInlineAsText = function(e4, r4, t3) {
            for (var n3 = "", s3 = 0, o3 = e4.length; s3 < o3; s3++)
              "text" === e4[s3].type ? n3 += e4[s3].content : "image" === e4[s3].type && (n3 += this.renderInlineAsText(e4[s3].children, r4, t3));
            return n3;
          }, M.prototype.render = function(e4, r4, t3) {
            var n3, s3, o3, i3 = "", a3 = this.rules;
            for (n3 = 0, s3 = e4.length; n3 < s3; n3++)
              "inline" === (o3 = e4[n3].type) ? i3 += this.renderInline(e4[n3].children, r4, t3) : void 0 !== a3[o3] ? i3 += a3[e4[n3].type](e4, n3, r4, t3, this) : i3 += this.renderToken(e4, n3, r4, t3);
            return i3;
          };
          var R = M;
          function B() {
            this.__rules__ = [], this.__cache__ = null;
          }
          B.prototype.__find__ = function(e4) {
            for (var r4 = 0; r4 < this.__rules__.length; r4++)
              if (this.__rules__[r4].name === e4)
                return r4;
            return -1;
          }, B.prototype.__compile__ = function() {
            var e4 = this, r4 = [""];
            e4.__rules__.forEach(function(e5) {
              e5.enabled && e5.alt.forEach(function(e6) {
                r4.indexOf(e6) < 0 && r4.push(e6);
              });
            }), e4.__cache__ = {}, r4.forEach(function(r5) {
              e4.__cache__[r5] = [], e4.__rules__.forEach(function(t3) {
                t3.enabled && (r5 && t3.alt.indexOf(r5) < 0 || e4.__cache__[r5].push(t3.fn));
              });
            });
          }, B.prototype.at = function(e4, r4, t3) {
            var n3 = this.__find__(e4), s3 = t3 || {};
            if (-1 === n3)
              throw new Error("Parser rule not found: " + e4);
            this.__rules__[n3].fn = r4, this.__rules__[n3].alt = s3.alt || [], this.__cache__ = null;
          }, B.prototype.before = function(e4, r4, t3, n3) {
            var s3 = this.__find__(e4), o3 = n3 || {};
            if (-1 === s3)
              throw new Error("Parser rule not found: " + e4);
            this.__rules__.splice(s3, 0, { name: r4, enabled: true, fn: t3, alt: o3.alt || [] }), this.__cache__ = null;
          }, B.prototype.after = function(e4, r4, t3, n3) {
            var s3 = this.__find__(e4), o3 = n3 || {};
            if (-1 === s3)
              throw new Error("Parser rule not found: " + e4);
            this.__rules__.splice(s3 + 1, 0, { name: r4, enabled: true, fn: t3, alt: o3.alt || [] }), this.__cache__ = null;
          }, B.prototype.push = function(e4, r4, t3) {
            var n3 = t3 || {};
            this.__rules__.push({ name: e4, enabled: true, fn: r4, alt: n3.alt || [] }), this.__cache__ = null;
          }, B.prototype.enable = function(e4, r4) {
            Array.isArray(e4) || (e4 = [e4]);
            var t3 = [];
            return e4.forEach(function(e5) {
              var n3 = this.__find__(e5);
              if (n3 < 0) {
                if (r4)
                  return;
                throw new Error("Rules manager: invalid rule name " + e5);
              }
              this.__rules__[n3].enabled = true, t3.push(e5);
            }, this), this.__cache__ = null, t3;
          }, B.prototype.enableOnly = function(e4, r4) {
            Array.isArray(e4) || (e4 = [e4]), this.__rules__.forEach(function(e5) {
              e5.enabled = false;
            }), this.enable(e4, r4);
          }, B.prototype.disable = function(e4, r4) {
            Array.isArray(e4) || (e4 = [e4]);
            var t3 = [];
            return e4.forEach(function(e5) {
              var n3 = this.__find__(e5);
              if (n3 < 0) {
                if (r4)
                  return;
                throw new Error("Rules manager: invalid rule name " + e5);
              }
              this.__rules__[n3].enabled = false, t3.push(e5);
            }, this), this.__cache__ = null, t3;
          }, B.prototype.getRules = function(e4) {
            return null === this.__cache__ && this.__compile__(), this.__cache__[e4] || [];
          };
          var N = B, O = /\r\n?|\n/g, P = /\0/g, j = E.arrayReplaceAt;
          function U(e4) {
            return /^<\/a\s*>/i.test(e4);
          }
          var V = /\+-|\.\.|\?\?\?\?|!!!!|,,|--/, Z = /\((c|tm|r|p)\)/i, $ = /\((c|tm|r|p)\)/gi, G = { c: "\xA9", r: "\xAE", p: "\xA7", tm: "\u2122" };
          function H(e4, r4) {
            return G[r4.toLowerCase()];
          }
          function J(e4) {
            var r4, t3, n3 = 0;
            for (r4 = e4.length - 1; r4 >= 0; r4--)
              "text" !== (t3 = e4[r4]).type || n3 || (t3.content = t3.content.replace($, H)), "link_open" === t3.type && "auto" === t3.info && n3--, "link_close" === t3.type && "auto" === t3.info && n3++;
          }
          function W(e4) {
            var r4, t3, n3 = 0;
            for (r4 = e4.length - 1; r4 >= 0; r4--)
              "text" !== (t3 = e4[r4]).type || n3 || V.test(t3.content) && (t3.content = t3.content.replace(/\+-/g, "\xB1").replace(/\.{2,}/g, "\u2026").replace(/([?!])\u2026/g, "$1..").replace(/([?!]){4,}/g, "$1$1$1").replace(/,{2,}/g, ",").replace(/(^|[^-])---(?=[^-]|$)/gm, "$1\u2014").replace(/(^|\s)--(?=\s|$)/gm, "$1\u2013").replace(/(^|[^-\s])--(?=[^-\s]|$)/gm, "$1\u2013")), "link_open" === t3.type && "auto" === t3.info && n3--, "link_close" === t3.type && "auto" === t3.info && n3++;
          }
          var Y = E.isWhiteSpace, K = E.isPunctChar, Q = E.isMdAsciiPunct, X = /['"]/, ee = /['"]/g, re = "\u2019";
          function te(e4, r4, t3) {
            return e4.substr(0, r4) + t3 + e4.substr(r4 + 1);
          }
          function ne(e4, r4) {
            var t3, n3, s3, o3, i3, a3, c3, l3, u3, p3, h3, f3, d3, m3, g3, _3, k2, b2, v2, C2, y2;
            for (v2 = [], t3 = 0; t3 < e4.length; t3++) {
              for (n3 = e4[t3], c3 = e4[t3].level, k2 = v2.length - 1; k2 >= 0 && !(v2[k2].level <= c3); k2--)
                ;
              if (v2.length = k2 + 1, "text" === n3.type) {
                s3 = n3.content, i3 = 0, a3 = s3.length;
                e:
                  for (; i3 < a3 && (ee.lastIndex = i3, o3 = ee.exec(s3)); ) {
                    if (g3 = _3 = true, i3 = o3.index + 1, b2 = "'" === o3[0], u3 = 32, o3.index - 1 >= 0)
                      u3 = s3.charCodeAt(o3.index - 1);
                    else
                      for (k2 = t3 - 1; k2 >= 0 && "softbreak" !== e4[k2].type && "hardbreak" !== e4[k2].type; k2--)
                        if (e4[k2].content) {
                          u3 = e4[k2].content.charCodeAt(e4[k2].content.length - 1);
                          break;
                        }
                    if (p3 = 32, i3 < a3)
                      p3 = s3.charCodeAt(i3);
                    else
                      for (k2 = t3 + 1; k2 < e4.length && "softbreak" !== e4[k2].type && "hardbreak" !== e4[k2].type; k2++)
                        if (e4[k2].content) {
                          p3 = e4[k2].content.charCodeAt(0);
                          break;
                        }
                    if (h3 = Q(u3) || K(String.fromCharCode(u3)), f3 = Q(p3) || K(String.fromCharCode(p3)), d3 = Y(u3), (m3 = Y(p3)) ? g3 = false : f3 && (d3 || h3 || (g3 = false)), d3 ? _3 = false : h3 && (m3 || f3 || (_3 = false)), 34 === p3 && '"' === o3[0] && u3 >= 48 && u3 <= 57 && (_3 = g3 = false), g3 && _3 && (g3 = h3, _3 = f3), g3 || _3) {
                      if (_3) {
                        for (k2 = v2.length - 1; k2 >= 0 && (l3 = v2[k2], !(v2[k2].level < c3)); k2--)
                          if (l3.single === b2 && v2[k2].level === c3) {
                            l3 = v2[k2], b2 ? (C2 = r4.md.options.quotes[2], y2 = r4.md.options.quotes[3]) : (C2 = r4.md.options.quotes[0], y2 = r4.md.options.quotes[1]), n3.content = te(n3.content, o3.index, y2), e4[l3.token].content = te(e4[l3.token].content, l3.pos, C2), i3 += y2.length - 1, l3.token === t3 && (i3 += C2.length - 1), s3 = n3.content, a3 = s3.length, v2.length = k2;
                            continue e;
                          }
                      }
                      g3 ? v2.push({ token: t3, pos: o3.index, single: b2, level: c3 }) : _3 && b2 && (n3.content = te(n3.content, o3.index, re));
                    } else
                      b2 && (n3.content = te(n3.content, o3.index, re));
                  }
              }
            }
          }
          function se(e4, r4, t3) {
            this.type = e4, this.tag = r4, this.attrs = null, this.map = null, this.nesting = t3, this.level = 0, this.children = null, this.content = "", this.markup = "", this.info = "", this.meta = null, this.block = false, this.hidden = false;
          }
          se.prototype.attrIndex = function(e4) {
            var r4, t3, n3;
            if (!this.attrs)
              return -1;
            for (r4 = this.attrs, t3 = 0, n3 = r4.length; t3 < n3; t3++)
              if (r4[t3][0] === e4)
                return t3;
            return -1;
          }, se.prototype.attrPush = function(e4) {
            this.attrs ? this.attrs.push(e4) : this.attrs = [e4];
          }, se.prototype.attrSet = function(e4, r4) {
            var t3 = this.attrIndex(e4), n3 = [e4, r4];
            t3 < 0 ? this.attrPush(n3) : this.attrs[t3] = n3;
          }, se.prototype.attrGet = function(e4) {
            var r4 = this.attrIndex(e4), t3 = null;
            return r4 >= 0 && (t3 = this.attrs[r4][1]), t3;
          }, se.prototype.attrJoin = function(e4, r4) {
            var t3 = this.attrIndex(e4);
            t3 < 0 ? this.attrPush([e4, r4]) : this.attrs[t3][1] = this.attrs[t3][1] + " " + r4;
          };
          var oe = se;
          function ie(e4, r4, t3) {
            this.src = e4, this.env = t3, this.tokens = [], this.inlineMode = false, this.md = r4;
          }
          ie.prototype.Token = oe;
          var ae = ie, ce = [["normalize", function(e4) {
            var r4;
            r4 = (r4 = e4.src.replace(O, "\n")).replace(P, "\uFFFD"), e4.src = r4;
          }], ["block", function(e4) {
            var r4;
            e4.inlineMode ? ((r4 = new e4.Token("inline", "", 0)).content = e4.src, r4.map = [0, 1], r4.children = [], e4.tokens.push(r4)) : e4.md.block.parse(e4.src, e4.md, e4.env, e4.tokens);
          }], ["inline", function(e4) {
            var r4, t3, n3, s3 = e4.tokens;
            for (t3 = 0, n3 = s3.length; t3 < n3; t3++)
              "inline" === (r4 = s3[t3]).type && e4.md.inline.parse(r4.content, e4.md, e4.env, r4.children);
          }], ["linkify", function(e4) {
            var r4, t3, n3, s3, o3, i3, a3, c3, l3, u3, p3, h3, f3, d3, m3, g3, _3, k2, b2 = e4.tokens;
            if (e4.md.options.linkify) {
              for (t3 = 0, n3 = b2.length; t3 < n3; t3++)
                if ("inline" === b2[t3].type && e4.md.linkify.pretest(b2[t3].content))
                  for (s3 = b2[t3].children, f3 = 0, r4 = s3.length - 1; r4 >= 0; r4--)
                    if ("link_close" !== (i3 = s3[r4]).type) {
                      if ("html_inline" === i3.type && (k2 = i3.content, /^<a[>\s]/i.test(k2) && f3 > 0 && f3--, U(i3.content) && f3++), !(f3 > 0) && "text" === i3.type && e4.md.linkify.test(i3.content)) {
                        for (l3 = i3.content, _3 = e4.md.linkify.match(l3), a3 = [], h3 = i3.level, p3 = 0, c3 = 0; c3 < _3.length; c3++)
                          d3 = _3[c3].url, m3 = e4.md.normalizeLink(d3), e4.md.validateLink(m3) && (g3 = _3[c3].text, g3 = _3[c3].schema ? "mailto:" !== _3[c3].schema || /^mailto:/i.test(g3) ? e4.md.normalizeLinkText(g3) : e4.md.normalizeLinkText("mailto:" + g3).replace(/^mailto:/, "") : e4.md.normalizeLinkText("http://" + g3).replace(/^http:\/\//, ""), (u3 = _3[c3].index) > p3 && ((o3 = new e4.Token("text", "", 0)).content = l3.slice(p3, u3), o3.level = h3, a3.push(o3)), (o3 = new e4.Token("link_open", "a", 1)).attrs = [["href", m3]], o3.level = h3++, o3.markup = "linkify", o3.info = "auto", a3.push(o3), (o3 = new e4.Token("text", "", 0)).content = g3, o3.level = h3, a3.push(o3), (o3 = new e4.Token("link_close", "a", -1)).level = --h3, o3.markup = "linkify", o3.info = "auto", a3.push(o3), p3 = _3[c3].lastIndex);
                        p3 < l3.length && ((o3 = new e4.Token("text", "", 0)).content = l3.slice(p3), o3.level = h3, a3.push(o3)), b2[t3].children = s3 = j(s3, r4, a3);
                      }
                    } else
                      for (r4--; s3[r4].level !== i3.level && "link_open" !== s3[r4].type; )
                        r4--;
            }
          }], ["replacements", function(e4) {
            var r4;
            if (e4.md.options.typographer)
              for (r4 = e4.tokens.length - 1; r4 >= 0; r4--)
                "inline" === e4.tokens[r4].type && (Z.test(e4.tokens[r4].content) && J(e4.tokens[r4].children), V.test(e4.tokens[r4].content) && W(e4.tokens[r4].children));
          }], ["smartquotes", function(e4) {
            var r4;
            if (e4.md.options.typographer)
              for (r4 = e4.tokens.length - 1; r4 >= 0; r4--)
                "inline" === e4.tokens[r4].type && X.test(e4.tokens[r4].content) && ne(e4.tokens[r4].children, e4);
          }]];
          function le() {
            this.ruler = new N();
            for (var e4 = 0; e4 < ce.length; e4++)
              this.ruler.push(ce[e4][0], ce[e4][1]);
          }
          le.prototype.process = function(e4) {
            var r4, t3, n3;
            for (n3 = this.ruler.getRules(""), r4 = 0, t3 = n3.length; r4 < t3; r4++)
              n3[r4](e4);
          }, le.prototype.State = ae;
          var ue = le, pe = E.isSpace;
          function he(e4, r4) {
            var t3 = e4.bMarks[r4] + e4.tShift[r4], n3 = e4.eMarks[r4];
            return e4.src.substr(t3, n3 - t3);
          }
          function fe(e4) {
            var r4, t3 = [], n3 = 0, s3 = e4.length, o3 = false, i3 = 0, a3 = "";
            for (r4 = e4.charCodeAt(n3); n3 < s3; )
              124 === r4 && (o3 ? (a3 += e4.substring(i3, n3 - 1), i3 = n3) : (t3.push(a3 + e4.substring(i3, n3)), a3 = "", i3 = n3 + 1)), o3 = 92 === r4, n3++, r4 = e4.charCodeAt(n3);
            return t3.push(a3 + e4.substring(i3)), t3;
          }
          var de = E.isSpace, me = E.isSpace, ge = E.isSpace;
          function _e(e4, r4) {
            var t3, n3, s3, o3;
            return n3 = e4.bMarks[r4] + e4.tShift[r4], s3 = e4.eMarks[r4], 42 !== (t3 = e4.src.charCodeAt(n3++)) && 45 !== t3 && 43 !== t3 ? -1 : n3 < s3 && (o3 = e4.src.charCodeAt(n3), !ge(o3)) ? -1 : n3;
          }
          function ke(e4, r4) {
            var t3, n3 = e4.bMarks[r4] + e4.tShift[r4], s3 = n3, o3 = e4.eMarks[r4];
            if (s3 + 1 >= o3)
              return -1;
            if ((t3 = e4.src.charCodeAt(s3++)) < 48 || t3 > 57)
              return -1;
            for (; ; ) {
              if (s3 >= o3)
                return -1;
              if (!((t3 = e4.src.charCodeAt(s3++)) >= 48 && t3 <= 57)) {
                if (41 === t3 || 46 === t3)
                  break;
                return -1;
              }
              if (s3 - n3 >= 10)
                return -1;
            }
            return s3 < o3 && (t3 = e4.src.charCodeAt(s3), !ge(t3)) ? -1 : s3;
          }
          var be = E.normalizeReference, ve = E.isSpace, Ce = E.isSpace, ye = `<[A-Za-z][A-Za-z0-9\\-]*(?:\\s+[a-zA-Z_:][a-zA-Z0-9:._-]*(?:\\s*=\\s*(?:[^"'=<>\`\\x00-\\x20]+|'[^']*'|"[^"]*"))?)*\\s*\\/?>`, Ae = "<\\/[A-Za-z][A-Za-z0-9\\-]*\\s*>", xe = new RegExp("^(?:" + ye + "|" + Ae + "|<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->|<[?][\\s\\S]*?[?]>|<![A-Z]+\\s+[^>]*>|<!\\[CDATA\\[[\\s\\S]*?\\]\\]>)"), we = new RegExp("^(?:" + ye + "|" + Ae + ")"), De = { HTML_TAG_RE: xe, HTML_OPEN_CLOSE_TAG_RE: we }, Ee = De.HTML_OPEN_CLOSE_TAG_RE, qe = [[/^<(script|pre|style)(?=(\s|>|$))/i, /<\/(script|pre|style)>/i, true], [/^<!--/, /-->/, true], [/^<\?/, /\?>/, true], [/^<![A-Z]/, />/, true], [/^<!\[CDATA\[/, /\]\]>/, true], [new RegExp("^</?(" + ["address", "article", "aside", "base", "basefont", "blockquote", "body", "caption", "center", "col", "colgroup", "dd", "details", "dialog", "dir", "div", "dl", "dt", "fieldset", "figcaption", "figure", "footer", "form", "frame", "frameset", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hr", "html", "iframe", "legend", "li", "link", "main", "menu", "menuitem", "nav", "noframes", "ol", "optgroup", "option", "p", "param", "section", "source", "summary", "table", "tbody", "td", "tfoot", "th", "thead", "title", "tr", "track", "ul"].join("|") + ")(?=(\\s|/?>|$))", "i"), /^$/, true], [new RegExp(Ee.source + "\\s*$"), /^$/, false]], Se = E.isSpace;
          function Fe(e4, r4, t3, n3) {
            var s3, o3, i3, a3, c3, l3, u3, p3;
            for (this.src = e4, this.md = r4, this.env = t3, this.tokens = n3, this.bMarks = [], this.eMarks = [], this.tShift = [], this.sCount = [], this.bsCount = [], this.blkIndent = 0, this.line = 0, this.lineMax = 0, this.tight = false, this.ddIndent = -1, this.listIndent = -1, this.parentType = "root", this.level = 0, this.result = "", o3 = this.src, p3 = false, i3 = a3 = l3 = u3 = 0, c3 = o3.length; a3 < c3; a3++) {
              if (s3 = o3.charCodeAt(a3), !p3) {
                if (Se(s3)) {
                  l3++, 9 === s3 ? u3 += 4 - u3 % 4 : u3++;
                  continue;
                }
                p3 = true;
              }
              10 !== s3 && a3 !== c3 - 1 || (10 !== s3 && a3++, this.bMarks.push(i3), this.eMarks.push(a3), this.tShift.push(l3), this.sCount.push(u3), this.bsCount.push(0), p3 = false, l3 = 0, u3 = 0, i3 = a3 + 1);
            }
            this.bMarks.push(o3.length), this.eMarks.push(o3.length), this.tShift.push(0), this.sCount.push(0), this.bsCount.push(0), this.lineMax = this.bMarks.length - 1;
          }
          Fe.prototype.push = function(e4, r4, t3) {
            var n3 = new oe(e4, r4, t3);
            return n3.block = true, t3 < 0 && this.level--, n3.level = this.level, t3 > 0 && this.level++, this.tokens.push(n3), n3;
          }, Fe.prototype.isEmpty = function(e4) {
            return this.bMarks[e4] + this.tShift[e4] >= this.eMarks[e4];
          }, Fe.prototype.skipEmptyLines = function(e4) {
            for (var r4 = this.lineMax; e4 < r4 && !(this.bMarks[e4] + this.tShift[e4] < this.eMarks[e4]); e4++)
              ;
            return e4;
          }, Fe.prototype.skipSpaces = function(e4) {
            for (var r4, t3 = this.src.length; e4 < t3 && (r4 = this.src.charCodeAt(e4), Se(r4)); e4++)
              ;
            return e4;
          }, Fe.prototype.skipSpacesBack = function(e4, r4) {
            if (e4 <= r4)
              return e4;
            for (; e4 > r4; )
              if (!Se(this.src.charCodeAt(--e4)))
                return e4 + 1;
            return e4;
          }, Fe.prototype.skipChars = function(e4, r4) {
            for (var t3 = this.src.length; e4 < t3 && this.src.charCodeAt(e4) === r4; e4++)
              ;
            return e4;
          }, Fe.prototype.skipCharsBack = function(e4, r4, t3) {
            if (e4 <= t3)
              return e4;
            for (; e4 > t3; )
              if (r4 !== this.src.charCodeAt(--e4))
                return e4 + 1;
            return e4;
          }, Fe.prototype.getLines = function(e4, r4, t3, n3) {
            var s3, o3, i3, a3, c3, l3, u3, p3 = e4;
            if (e4 >= r4)
              return "";
            for (l3 = new Array(r4 - e4), s3 = 0; p3 < r4; p3++, s3++) {
              for (o3 = 0, u3 = a3 = this.bMarks[p3], c3 = p3 + 1 < r4 || n3 ? this.eMarks[p3] + 1 : this.eMarks[p3]; a3 < c3 && o3 < t3; ) {
                if (i3 = this.src.charCodeAt(a3), Se(i3))
                  9 === i3 ? o3 += 4 - (o3 + this.bsCount[p3]) % 4 : o3++;
                else {
                  if (!(a3 - u3 < this.tShift[p3]))
                    break;
                  o3++;
                }
                a3++;
              }
              l3[s3] = o3 > t3 ? new Array(o3 - t3 + 1).join(" ") + this.src.slice(a3, c3) : this.src.slice(a3, c3);
            }
            return l3.join("");
          }, Fe.prototype.Token = oe;
          var Le = Fe, ze = [["table", function(e4, r4, t3, n3) {
            var s3, o3, i3, a3, c3, l3, u3, p3, h3, f3, d3, m3, g3, _3, k2, b2;
            if (r4 + 2 > t3)
              return false;
            if (l3 = r4 + 1, e4.sCount[l3] < e4.blkIndent)
              return false;
            if (e4.sCount[l3] - e4.blkIndent >= 4)
              return false;
            if ((i3 = e4.bMarks[l3] + e4.tShift[l3]) >= e4.eMarks[l3])
              return false;
            if (124 !== (s3 = e4.src.charCodeAt(i3++)) && 45 !== s3 && 58 !== s3)
              return false;
            for (; i3 < e4.eMarks[l3]; ) {
              if (124 !== (s3 = e4.src.charCodeAt(i3)) && 45 !== s3 && 58 !== s3 && !pe(s3))
                return false;
              i3++;
            }
            for (o3 = he(e4, r4 + 1), u3 = o3.split("|"), f3 = [], a3 = 0; a3 < u3.length; a3++) {
              if (!(d3 = u3[a3].trim())) {
                if (0 === a3 || a3 === u3.length - 1)
                  continue;
                return false;
              }
              if (!/^:?-+:?$/.test(d3))
                return false;
              58 === d3.charCodeAt(d3.length - 1) ? f3.push(58 === d3.charCodeAt(0) ? "center" : "right") : 58 === d3.charCodeAt(0) ? f3.push("left") : f3.push("");
            }
            if (-1 === (o3 = he(e4, r4).trim()).indexOf("|"))
              return false;
            if (e4.sCount[r4] - e4.blkIndent >= 4)
              return false;
            if ((u3 = fe(o3)).length && "" === u3[0] && u3.shift(), u3.length && "" === u3[u3.length - 1] && u3.pop(), 0 === (p3 = u3.length) || p3 !== f3.length)
              return false;
            if (n3)
              return true;
            for (_3 = e4.parentType, e4.parentType = "table", b2 = e4.md.block.ruler.getRules("blockquote"), (h3 = e4.push("table_open", "table", 1)).map = m3 = [r4, 0], (h3 = e4.push("thead_open", "thead", 1)).map = [r4, r4 + 1], (h3 = e4.push("tr_open", "tr", 1)).map = [r4, r4 + 1], a3 = 0; a3 < u3.length; a3++)
              h3 = e4.push("th_open", "th", 1), f3[a3] && (h3.attrs = [["style", "text-align:" + f3[a3]]]), (h3 = e4.push("inline", "", 0)).content = u3[a3].trim(), h3.children = [], h3 = e4.push("th_close", "th", -1);
            for (h3 = e4.push("tr_close", "tr", -1), h3 = e4.push("thead_close", "thead", -1), l3 = r4 + 2; l3 < t3 && !(e4.sCount[l3] < e4.blkIndent); l3++) {
              for (k2 = false, a3 = 0, c3 = b2.length; a3 < c3; a3++)
                if (b2[a3](e4, l3, t3, true)) {
                  k2 = true;
                  break;
                }
              if (k2)
                break;
              if (!(o3 = he(e4, l3).trim()))
                break;
              if (e4.sCount[l3] - e4.blkIndent >= 4)
                break;
              for ((u3 = fe(o3)).length && "" === u3[0] && u3.shift(), u3.length && "" === u3[u3.length - 1] && u3.pop(), l3 === r4 + 2 && ((h3 = e4.push("tbody_open", "tbody", 1)).map = g3 = [r4 + 2, 0]), (h3 = e4.push("tr_open", "tr", 1)).map = [l3, l3 + 1], a3 = 0; a3 < p3; a3++)
                h3 = e4.push("td_open", "td", 1), f3[a3] && (h3.attrs = [["style", "text-align:" + f3[a3]]]), (h3 = e4.push("inline", "", 0)).content = u3[a3] ? u3[a3].trim() : "", h3.children = [], h3 = e4.push("td_close", "td", -1);
              h3 = e4.push("tr_close", "tr", -1);
            }
            return g3 && (h3 = e4.push("tbody_close", "tbody", -1), g3[1] = l3), h3 = e4.push("table_close", "table", -1), m3[1] = l3, e4.parentType = _3, e4.line = l3, true;
          }, ["paragraph", "reference"]], ["code", function(e4, r4, t3) {
            var n3, s3, o3;
            if (e4.sCount[r4] - e4.blkIndent < 4)
              return false;
            for (s3 = n3 = r4 + 1; n3 < t3; )
              if (e4.isEmpty(n3))
                n3++;
              else {
                if (!(e4.sCount[n3] - e4.blkIndent >= 4))
                  break;
                s3 = ++n3;
              }
            return e4.line = s3, (o3 = e4.push("code_block", "code", 0)).content = e4.getLines(r4, s3, 4 + e4.blkIndent, true), o3.map = [r4, e4.line], true;
          }], ["fence", function(e4, r4, t3, n3) {
            var s3, o3, i3, a3, c3, l3, u3, p3 = false, h3 = e4.bMarks[r4] + e4.tShift[r4], f3 = e4.eMarks[r4];
            if (e4.sCount[r4] - e4.blkIndent >= 4)
              return false;
            if (h3 + 3 > f3)
              return false;
            if (126 !== (s3 = e4.src.charCodeAt(h3)) && 96 !== s3)
              return false;
            if (c3 = h3, h3 = e4.skipChars(h3, s3), (o3 = h3 - c3) < 3)
              return false;
            if (u3 = e4.src.slice(c3, h3), i3 = e4.src.slice(h3, f3), 96 === s3 && i3.indexOf(String.fromCharCode(s3)) >= 0)
              return false;
            if (n3)
              return true;
            for (a3 = r4; !(++a3 >= t3 || (h3 = c3 = e4.bMarks[a3] + e4.tShift[a3], f3 = e4.eMarks[a3], h3 < f3 && e4.sCount[a3] < e4.blkIndent)); )
              if (e4.src.charCodeAt(h3) === s3 && !(e4.sCount[a3] - e4.blkIndent >= 4 || (h3 = e4.skipChars(h3, s3)) - c3 < o3 || (h3 = e4.skipSpaces(h3)) < f3)) {
                p3 = true;
                break;
              }
            return o3 = e4.sCount[r4], e4.line = a3 + (p3 ? 1 : 0), (l3 = e4.push("fence", "code", 0)).info = i3, l3.content = e4.getLines(r4 + 1, a3, o3, true), l3.markup = u3, l3.map = [r4, e4.line], true;
          }, ["paragraph", "reference", "blockquote", "list"]], ["blockquote", function(e4, r4, t3, n3) {
            var s3, o3, i3, a3, c3, l3, u3, p3, h3, f3, d3, m3, g3, _3, k2, b2, v2, C2, y2, A2, x2 = e4.lineMax, w2 = e4.bMarks[r4] + e4.tShift[r4], D2 = e4.eMarks[r4];
            if (e4.sCount[r4] - e4.blkIndent >= 4)
              return false;
            if (62 !== e4.src.charCodeAt(w2++))
              return false;
            if (n3)
              return true;
            for (a3 = h3 = e4.sCount[r4] + 1, 32 === e4.src.charCodeAt(w2) ? (w2++, a3++, h3++, s3 = false, b2 = true) : 9 === e4.src.charCodeAt(w2) ? (b2 = true, (e4.bsCount[r4] + h3) % 4 == 3 ? (w2++, a3++, h3++, s3 = false) : s3 = true) : b2 = false, f3 = [e4.bMarks[r4]], e4.bMarks[r4] = w2; w2 < D2 && (o3 = e4.src.charCodeAt(w2), de(o3)); )
              9 === o3 ? h3 += 4 - (h3 + e4.bsCount[r4] + (s3 ? 1 : 0)) % 4 : h3++, w2++;
            for (d3 = [e4.bsCount[r4]], e4.bsCount[r4] = e4.sCount[r4] + 1 + (b2 ? 1 : 0), l3 = w2 >= D2, _3 = [e4.sCount[r4]], e4.sCount[r4] = h3 - a3, k2 = [e4.tShift[r4]], e4.tShift[r4] = w2 - e4.bMarks[r4], C2 = e4.md.block.ruler.getRules("blockquote"), g3 = e4.parentType, e4.parentType = "blockquote", p3 = r4 + 1; p3 < t3 && (A2 = e4.sCount[p3] < e4.blkIndent, w2 = e4.bMarks[p3] + e4.tShift[p3], D2 = e4.eMarks[p3], !(w2 >= D2)); p3++)
              if (62 !== e4.src.charCodeAt(w2++) || A2) {
                if (l3)
                  break;
                for (v2 = false, i3 = 0, c3 = C2.length; i3 < c3; i3++)
                  if (C2[i3](e4, p3, t3, true)) {
                    v2 = true;
                    break;
                  }
                if (v2) {
                  e4.lineMax = p3, 0 !== e4.blkIndent && (f3.push(e4.bMarks[p3]), d3.push(e4.bsCount[p3]), k2.push(e4.tShift[p3]), _3.push(e4.sCount[p3]), e4.sCount[p3] -= e4.blkIndent);
                  break;
                }
                f3.push(e4.bMarks[p3]), d3.push(e4.bsCount[p3]), k2.push(e4.tShift[p3]), _3.push(e4.sCount[p3]), e4.sCount[p3] = -1;
              } else {
                for (a3 = h3 = e4.sCount[p3] + 1, 32 === e4.src.charCodeAt(w2) ? (w2++, a3++, h3++, s3 = false, b2 = true) : 9 === e4.src.charCodeAt(w2) ? (b2 = true, (e4.bsCount[p3] + h3) % 4 == 3 ? (w2++, a3++, h3++, s3 = false) : s3 = true) : b2 = false, f3.push(e4.bMarks[p3]), e4.bMarks[p3] = w2; w2 < D2 && (o3 = e4.src.charCodeAt(w2), de(o3)); )
                  9 === o3 ? h3 += 4 - (h3 + e4.bsCount[p3] + (s3 ? 1 : 0)) % 4 : h3++, w2++;
                l3 = w2 >= D2, d3.push(e4.bsCount[p3]), e4.bsCount[p3] = e4.sCount[p3] + 1 + (b2 ? 1 : 0), _3.push(e4.sCount[p3]), e4.sCount[p3] = h3 - a3, k2.push(e4.tShift[p3]), e4.tShift[p3] = w2 - e4.bMarks[p3];
              }
            for (m3 = e4.blkIndent, e4.blkIndent = 0, (y2 = e4.push("blockquote_open", "blockquote", 1)).markup = ">", y2.map = u3 = [r4, 0], e4.md.block.tokenize(e4, r4, p3), (y2 = e4.push("blockquote_close", "blockquote", -1)).markup = ">", e4.lineMax = x2, e4.parentType = g3, u3[1] = e4.line, i3 = 0; i3 < k2.length; i3++)
              e4.bMarks[i3 + r4] = f3[i3], e4.tShift[i3 + r4] = k2[i3], e4.sCount[i3 + r4] = _3[i3], e4.bsCount[i3 + r4] = d3[i3];
            return e4.blkIndent = m3, true;
          }, ["paragraph", "reference", "blockquote", "list"]], ["hr", function(e4, r4, t3, n3) {
            var s3, o3, i3, a3, c3 = e4.bMarks[r4] + e4.tShift[r4], l3 = e4.eMarks[r4];
            if (e4.sCount[r4] - e4.blkIndent >= 4)
              return false;
            if (42 !== (s3 = e4.src.charCodeAt(c3++)) && 45 !== s3 && 95 !== s3)
              return false;
            for (o3 = 1; c3 < l3; ) {
              if ((i3 = e4.src.charCodeAt(c3++)) !== s3 && !me(i3))
                return false;
              i3 === s3 && o3++;
            }
            return !(o3 < 3) && (!!n3 || (e4.line = r4 + 1, (a3 = e4.push("hr", "hr", 0)).map = [r4, e4.line], a3.markup = Array(o3 + 1).join(String.fromCharCode(s3)), true));
          }, ["paragraph", "reference", "blockquote", "list"]], ["list", function(e4, r4, t3, n3) {
            var s3, o3, i3, a3, c3, l3, u3, p3, h3, f3, d3, m3, g3, _3, k2, b2, v2, C2, y2, A2, x2, w2, D2, E2, q2, S2, F2, L2, z2 = false, T2 = true;
            if (e4.sCount[r4] - e4.blkIndent >= 4)
              return false;
            if (e4.listIndent >= 0 && e4.sCount[r4] - e4.listIndent >= 4 && e4.sCount[r4] < e4.blkIndent)
              return false;
            if (n3 && "paragraph" === e4.parentType && e4.tShift[r4] >= e4.blkIndent && (z2 = true), (D2 = ke(e4, r4)) >= 0) {
              if (u3 = true, q2 = e4.bMarks[r4] + e4.tShift[r4], g3 = Number(e4.src.substr(q2, D2 - q2 - 1)), z2 && 1 !== g3)
                return false;
            } else {
              if (!((D2 = _e(e4, r4)) >= 0))
                return false;
              u3 = false;
            }
            if (z2 && e4.skipSpaces(D2) >= e4.eMarks[r4])
              return false;
            if (m3 = e4.src.charCodeAt(D2 - 1), n3)
              return true;
            for (d3 = e4.tokens.length, u3 ? (L2 = e4.push("ordered_list_open", "ol", 1), 1 !== g3 && (L2.attrs = [["start", g3]])) : L2 = e4.push("bullet_list_open", "ul", 1), L2.map = f3 = [r4, 0], L2.markup = String.fromCharCode(m3), k2 = r4, E2 = false, F2 = e4.md.block.ruler.getRules("list"), C2 = e4.parentType, e4.parentType = "list"; k2 < t3; ) {
              for (w2 = D2, _3 = e4.eMarks[k2], l3 = b2 = e4.sCount[k2] + D2 - (e4.bMarks[r4] + e4.tShift[r4]); w2 < _3; ) {
                if (9 === (s3 = e4.src.charCodeAt(w2)))
                  b2 += 4 - (b2 + e4.bsCount[k2]) % 4;
                else {
                  if (32 !== s3)
                    break;
                  b2++;
                }
                w2++;
              }
              if ((c3 = (o3 = w2) >= _3 ? 1 : b2 - l3) > 4 && (c3 = 1), a3 = l3 + c3, (L2 = e4.push("list_item_open", "li", 1)).markup = String.fromCharCode(m3), L2.map = p3 = [r4, 0], x2 = e4.tight, A2 = e4.tShift[r4], y2 = e4.sCount[r4], v2 = e4.listIndent, e4.listIndent = e4.blkIndent, e4.blkIndent = a3, e4.tight = true, e4.tShift[r4] = o3 - e4.bMarks[r4], e4.sCount[r4] = b2, o3 >= _3 && e4.isEmpty(r4 + 1) ? e4.line = Math.min(e4.line + 2, t3) : e4.md.block.tokenize(e4, r4, t3, true), e4.tight && !E2 || (T2 = false), E2 = e4.line - r4 > 1 && e4.isEmpty(e4.line - 1), e4.blkIndent = e4.listIndent, e4.listIndent = v2, e4.tShift[r4] = A2, e4.sCount[r4] = y2, e4.tight = x2, (L2 = e4.push("list_item_close", "li", -1)).markup = String.fromCharCode(m3), k2 = r4 = e4.line, p3[1] = k2, o3 = e4.bMarks[r4], k2 >= t3)
                break;
              if (e4.sCount[k2] < e4.blkIndent)
                break;
              if (e4.sCount[r4] - e4.blkIndent >= 4)
                break;
              for (S2 = false, i3 = 0, h3 = F2.length; i3 < h3; i3++)
                if (F2[i3](e4, k2, t3, true)) {
                  S2 = true;
                  break;
                }
              if (S2)
                break;
              if (u3) {
                if ((D2 = ke(e4, k2)) < 0)
                  break;
              } else if ((D2 = _e(e4, k2)) < 0)
                break;
              if (m3 !== e4.src.charCodeAt(D2 - 1))
                break;
            }
            return (L2 = u3 ? e4.push("ordered_list_close", "ol", -1) : e4.push("bullet_list_close", "ul", -1)).markup = String.fromCharCode(m3), f3[1] = k2, e4.line = k2, e4.parentType = C2, T2 && function(e5, r5) {
              var t4, n4, s4 = e5.level + 2;
              for (t4 = r5 + 2, n4 = e5.tokens.length - 2; t4 < n4; t4++)
                e5.tokens[t4].level === s4 && "paragraph_open" === e5.tokens[t4].type && (e5.tokens[t4 + 2].hidden = true, e5.tokens[t4].hidden = true, t4 += 2);
            }(e4, d3), true;
          }, ["paragraph", "reference", "blockquote"]], ["reference", function(e4, r4, t3, n3) {
            var s3, o3, i3, a3, c3, l3, u3, p3, h3, f3, d3, m3, g3, _3, k2, b2, v2 = 0, C2 = e4.bMarks[r4] + e4.tShift[r4], y2 = e4.eMarks[r4], A2 = r4 + 1;
            if (e4.sCount[r4] - e4.blkIndent >= 4)
              return false;
            if (91 !== e4.src.charCodeAt(C2))
              return false;
            for (; ++C2 < y2; )
              if (93 === e4.src.charCodeAt(C2) && 92 !== e4.src.charCodeAt(C2 - 1)) {
                if (C2 + 1 === y2)
                  return false;
                if (58 !== e4.src.charCodeAt(C2 + 1))
                  return false;
                break;
              }
            for (a3 = e4.lineMax, k2 = e4.md.block.ruler.getRules("reference"), f3 = e4.parentType, e4.parentType = "reference"; A2 < a3 && !e4.isEmpty(A2); A2++)
              if (!(e4.sCount[A2] - e4.blkIndent > 3 || e4.sCount[A2] < 0)) {
                for (_3 = false, l3 = 0, u3 = k2.length; l3 < u3; l3++)
                  if (k2[l3](e4, A2, a3, true)) {
                    _3 = true;
                    break;
                  }
                if (_3)
                  break;
              }
            for (g3 = e4.getLines(r4, A2, e4.blkIndent, false).trim(), y2 = g3.length, C2 = 1; C2 < y2; C2++) {
              if (91 === (s3 = g3.charCodeAt(C2)))
                return false;
              if (93 === s3) {
                h3 = C2;
                break;
              }
              10 === s3 ? v2++ : 92 === s3 && ++C2 < y2 && 10 === g3.charCodeAt(C2) && v2++;
            }
            if (h3 < 0 || 58 !== g3.charCodeAt(h3 + 1))
              return false;
            for (C2 = h3 + 2; C2 < y2; C2++)
              if (10 === (s3 = g3.charCodeAt(C2)))
                v2++;
              else if (!ve(s3))
                break;
            if (!(d3 = e4.md.helpers.parseLinkDestination(g3, C2, y2)).ok)
              return false;
            if (c3 = e4.md.normalizeLink(d3.str), !e4.md.validateLink(c3))
              return false;
            for (C2 = d3.pos, v2 += d3.lines, o3 = C2, i3 = v2, m3 = C2; C2 < y2; C2++)
              if (10 === (s3 = g3.charCodeAt(C2)))
                v2++;
              else if (!ve(s3))
                break;
            for (d3 = e4.md.helpers.parseLinkTitle(g3, C2, y2), C2 < y2 && m3 !== C2 && d3.ok ? (b2 = d3.str, C2 = d3.pos, v2 += d3.lines) : (b2 = "", C2 = o3, v2 = i3); C2 < y2 && (s3 = g3.charCodeAt(C2), ve(s3)); )
              C2++;
            if (C2 < y2 && 10 !== g3.charCodeAt(C2) && b2)
              for (b2 = "", C2 = o3, v2 = i3; C2 < y2 && (s3 = g3.charCodeAt(C2), ve(s3)); )
                C2++;
            return !(C2 < y2 && 10 !== g3.charCodeAt(C2)) && (!!(p3 = be(g3.slice(1, h3))) && (!!n3 || (void 0 === e4.env.references && (e4.env.references = {}), void 0 === e4.env.references[p3] && (e4.env.references[p3] = { title: b2, href: c3 }), e4.parentType = f3, e4.line = r4 + v2 + 1, true)));
          }], ["heading", function(e4, r4, t3, n3) {
            var s3, o3, i3, a3, c3 = e4.bMarks[r4] + e4.tShift[r4], l3 = e4.eMarks[r4];
            if (e4.sCount[r4] - e4.blkIndent >= 4)
              return false;
            if (35 !== (s3 = e4.src.charCodeAt(c3)) || c3 >= l3)
              return false;
            for (o3 = 1, s3 = e4.src.charCodeAt(++c3); 35 === s3 && c3 < l3 && o3 <= 6; )
              o3++, s3 = e4.src.charCodeAt(++c3);
            return !(o3 > 6 || c3 < l3 && !Ce(s3)) && (!!n3 || (l3 = e4.skipSpacesBack(l3, c3), (i3 = e4.skipCharsBack(l3, 35, c3)) > c3 && Ce(e4.src.charCodeAt(i3 - 1)) && (l3 = i3), e4.line = r4 + 1, (a3 = e4.push("heading_open", "h" + String(o3), 1)).markup = "########".slice(0, o3), a3.map = [r4, e4.line], (a3 = e4.push("inline", "", 0)).content = e4.src.slice(c3, l3).trim(), a3.map = [r4, e4.line], a3.children = [], (a3 = e4.push("heading_close", "h" + String(o3), -1)).markup = "########".slice(0, o3), true));
          }, ["paragraph", "reference", "blockquote"]], ["lheading", function(e4, r4, t3) {
            var n3, s3, o3, i3, a3, c3, l3, u3, p3, h3, f3 = r4 + 1, d3 = e4.md.block.ruler.getRules("paragraph");
            if (e4.sCount[r4] - e4.blkIndent >= 4)
              return false;
            for (h3 = e4.parentType, e4.parentType = "paragraph"; f3 < t3 && !e4.isEmpty(f3); f3++)
              if (!(e4.sCount[f3] - e4.blkIndent > 3)) {
                if (e4.sCount[f3] >= e4.blkIndent && (c3 = e4.bMarks[f3] + e4.tShift[f3], l3 = e4.eMarks[f3], c3 < l3 && (45 === (p3 = e4.src.charCodeAt(c3)) || 61 === p3) && (c3 = e4.skipChars(c3, p3), (c3 = e4.skipSpaces(c3)) >= l3))) {
                  u3 = 61 === p3 ? 1 : 2;
                  break;
                }
                if (!(e4.sCount[f3] < 0)) {
                  for (s3 = false, o3 = 0, i3 = d3.length; o3 < i3; o3++)
                    if (d3[o3](e4, f3, t3, true)) {
                      s3 = true;
                      break;
                    }
                  if (s3)
                    break;
                }
              }
            return !!u3 && (n3 = e4.getLines(r4, f3, e4.blkIndent, false).trim(), e4.line = f3 + 1, (a3 = e4.push("heading_open", "h" + String(u3), 1)).markup = String.fromCharCode(p3), a3.map = [r4, e4.line], (a3 = e4.push("inline", "", 0)).content = n3, a3.map = [r4, e4.line - 1], a3.children = [], (a3 = e4.push("heading_close", "h" + String(u3), -1)).markup = String.fromCharCode(p3), e4.parentType = h3, true);
          }], ["html_block", function(e4, r4, t3, n3) {
            var s3, o3, i3, a3, c3 = e4.bMarks[r4] + e4.tShift[r4], l3 = e4.eMarks[r4];
            if (e4.sCount[r4] - e4.blkIndent >= 4)
              return false;
            if (!e4.md.options.html)
              return false;
            if (60 !== e4.src.charCodeAt(c3))
              return false;
            for (a3 = e4.src.slice(c3, l3), s3 = 0; s3 < qe.length && !qe[s3][0].test(a3); s3++)
              ;
            if (s3 === qe.length)
              return false;
            if (n3)
              return qe[s3][2];
            if (o3 = r4 + 1, !qe[s3][1].test(a3)) {
              for (; o3 < t3 && !(e4.sCount[o3] < e4.blkIndent); o3++)
                if (c3 = e4.bMarks[o3] + e4.tShift[o3], l3 = e4.eMarks[o3], a3 = e4.src.slice(c3, l3), qe[s3][1].test(a3)) {
                  0 !== a3.length && o3++;
                  break;
                }
            }
            return e4.line = o3, (i3 = e4.push("html_block", "", 0)).map = [r4, o3], i3.content = e4.getLines(r4, o3, e4.blkIndent, true), true;
          }, ["paragraph", "reference", "blockquote"]], ["paragraph", function(e4, r4) {
            var t3, n3, s3, o3, i3, a3, c3 = r4 + 1, l3 = e4.md.block.ruler.getRules("paragraph"), u3 = e4.lineMax;
            for (a3 = e4.parentType, e4.parentType = "paragraph"; c3 < u3 && !e4.isEmpty(c3); c3++)
              if (!(e4.sCount[c3] - e4.blkIndent > 3 || e4.sCount[c3] < 0)) {
                for (n3 = false, s3 = 0, o3 = l3.length; s3 < o3; s3++)
                  if (l3[s3](e4, c3, u3, true)) {
                    n3 = true;
                    break;
                  }
                if (n3)
                  break;
              }
            return t3 = e4.getLines(r4, c3, e4.blkIndent, false).trim(), e4.line = c3, (i3 = e4.push("paragraph_open", "p", 1)).map = [r4, e4.line], (i3 = e4.push("inline", "", 0)).content = t3, i3.map = [r4, e4.line], i3.children = [], i3 = e4.push("paragraph_close", "p", -1), e4.parentType = a3, true;
          }]];
          function Te() {
            this.ruler = new N();
            for (var e4 = 0; e4 < ze.length; e4++)
              this.ruler.push(ze[e4][0], ze[e4][1], { alt: (ze[e4][2] || []).slice() });
          }
          Te.prototype.tokenize = function(e4, r4, t3) {
            for (var n3, s3 = this.ruler.getRules(""), o3 = s3.length, i3 = r4, a3 = false, c3 = e4.md.options.maxNesting; i3 < t3 && (e4.line = i3 = e4.skipEmptyLines(i3), !(i3 >= t3)) && !(e4.sCount[i3] < e4.blkIndent); ) {
              if (e4.level >= c3) {
                e4.line = t3;
                break;
              }
              for (n3 = 0; n3 < o3 && !s3[n3](e4, i3, t3, false); n3++)
                ;
              e4.tight = !a3, e4.isEmpty(e4.line - 1) && (a3 = true), (i3 = e4.line) < t3 && e4.isEmpty(i3) && (a3 = true, i3++, e4.line = i3);
            }
          }, Te.prototype.parse = function(e4, r4, t3, n3) {
            var s3;
            e4 && (s3 = new this.State(e4, r4, t3, n3), this.tokenize(s3, s3.line, s3.lineMax));
          }, Te.prototype.State = Le;
          var Ie = Te;
          function Me(e4) {
            switch (e4) {
              case 10:
              case 33:
              case 35:
              case 36:
              case 37:
              case 38:
              case 42:
              case 43:
              case 45:
              case 58:
              case 60:
              case 61:
              case 62:
              case 64:
              case 91:
              case 92:
              case 93:
              case 94:
              case 95:
              case 96:
              case 123:
              case 125:
              case 126:
                return true;
              default:
                return false;
            }
          }
          for (var Re = E.isSpace, Be = E.isSpace, Ne = [], Oe = 0; Oe < 256; Oe++)
            Ne.push(0);
          function Pe(e4, r4) {
            var t3, n3, s3, o3, i3, a3 = [], c3 = r4.length;
            for (t3 = 0; t3 < c3; t3++)
              126 === (s3 = r4[t3]).marker && -1 !== s3.end && (o3 = r4[s3.end], (i3 = e4.tokens[s3.token]).type = "s_open", i3.tag = "s", i3.nesting = 1, i3.markup = "~~", i3.content = "", (i3 = e4.tokens[o3.token]).type = "s_close", i3.tag = "s", i3.nesting = -1, i3.markup = "~~", i3.content = "", "text" === e4.tokens[o3.token - 1].type && "~" === e4.tokens[o3.token - 1].content && a3.push(o3.token - 1));
            for (; a3.length; ) {
              for (t3 = a3.pop(), n3 = t3 + 1; n3 < e4.tokens.length && "s_close" === e4.tokens[n3].type; )
                n3++;
              t3 !== --n3 && (i3 = e4.tokens[n3], e4.tokens[n3] = e4.tokens[t3], e4.tokens[t3] = i3);
            }
          }
          "\\!\"#$%&'()*+,./:;<=>?@[]^_`{|}~-".split("").forEach(function(e4) {
            Ne[e4.charCodeAt(0)] = 1;
          });
          var je = { tokenize: function(e4, r4) {
            var t3, n3, s3, o3, i3 = e4.pos, a3 = e4.src.charCodeAt(i3);
            if (r4)
              return false;
            if (126 !== a3)
              return false;
            if (n3 = e4.scanDelims(e4.pos, true), s3 = n3.length, o3 = String.fromCharCode(a3), s3 < 2)
              return false;
            for (s3 % 2 && (e4.push("text", "", 0).content = o3, s3--), t3 = 0; t3 < s3; t3 += 2)
              e4.push("text", "", 0).content = o3 + o3, e4.delimiters.push({ marker: a3, length: 0, jump: t3 / 2, token: e4.tokens.length - 1, end: -1, open: n3.can_open, close: n3.can_close });
            return e4.pos += n3.length, true;
          }, postProcess: function(e4) {
            var r4, t3 = e4.tokens_meta, n3 = e4.tokens_meta.length;
            for (Pe(e4, e4.delimiters), r4 = 0; r4 < n3; r4++)
              t3[r4] && t3[r4].delimiters && Pe(e4, t3[r4].delimiters);
          } };
          function Ue(e4, r4) {
            var t3, n3, s3, o3, i3, a3, c3 = r4.length;
            for (t3 = c3 - 1; t3 >= 0; t3--)
              95 !== (n3 = r4[t3]).marker && 42 !== n3.marker || -1 !== n3.end && (s3 = r4[n3.end], a3 = t3 > 0 && r4[t3 - 1].end === n3.end + 1 && r4[t3 - 1].token === n3.token - 1 && r4[n3.end + 1].token === s3.token + 1 && r4[t3 - 1].marker === n3.marker, i3 = String.fromCharCode(n3.marker), (o3 = e4.tokens[n3.token]).type = a3 ? "strong_open" : "em_open", o3.tag = a3 ? "strong" : "em", o3.nesting = 1, o3.markup = a3 ? i3 + i3 : i3, o3.content = "", (o3 = e4.tokens[s3.token]).type = a3 ? "strong_close" : "em_close", o3.tag = a3 ? "strong" : "em", o3.nesting = -1, o3.markup = a3 ? i3 + i3 : i3, o3.content = "", a3 && (e4.tokens[r4[t3 - 1].token].content = "", e4.tokens[r4[n3.end + 1].token].content = "", t3--));
          }
          var Ve = { tokenize: function(e4, r4) {
            var t3, n3, s3 = e4.pos, o3 = e4.src.charCodeAt(s3);
            if (r4)
              return false;
            if (95 !== o3 && 42 !== o3)
              return false;
            for (n3 = e4.scanDelims(e4.pos, 42 === o3), t3 = 0; t3 < n3.length; t3++)
              e4.push("text", "", 0).content = String.fromCharCode(o3), e4.delimiters.push({ marker: o3, length: n3.length, jump: t3, token: e4.tokens.length - 1, end: -1, open: n3.can_open, close: n3.can_close });
            return e4.pos += n3.length, true;
          }, postProcess: function(e4) {
            var r4, t3 = e4.tokens_meta, n3 = e4.tokens_meta.length;
            for (Ue(e4, e4.delimiters), r4 = 0; r4 < n3; r4++)
              t3[r4] && t3[r4].delimiters && Ue(e4, t3[r4].delimiters);
          } }, Ze = E.normalizeReference, $e = E.isSpace, Ge = E.normalizeReference, He = E.isSpace, Je = /^([a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/, We = /^([a-zA-Z][a-zA-Z0-9+.\-]{1,31}):([^<>\x00-\x20]*)$/, Ye = De.HTML_TAG_RE, Ke = E.has, Qe = E.isValidEntityCode, Xe = E.fromCodePoint, er = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i, rr = /^&([a-z][a-z0-9]{1,31});/i;
          function tr(e4, r4) {
            var t3, n3, s3, o3, i3, a3, c3, l3, u3 = {}, p3 = r4.length;
            for (t3 = 0; t3 < p3; t3++)
              if ((s3 = r4[t3]).length = s3.length || 0, s3.close) {
                for (u3.hasOwnProperty(s3.marker) || (u3[s3.marker] = [-1, -1, -1]), i3 = u3[s3.marker][s3.length % 3], (n3 = t3 - s3.jump - 1) < -1 && (n3 = -1), a3 = n3; n3 > i3; n3 -= o3.jump + 1)
                  if ((o3 = r4[n3]).marker === s3.marker && o3.open && o3.end < 0 && (c3 = false, (o3.close || s3.open) && (o3.length + s3.length) % 3 == 0 && (o3.length % 3 == 0 && s3.length % 3 == 0 || (c3 = true)), !c3)) {
                    l3 = n3 > 0 && !r4[n3 - 1].open ? r4[n3 - 1].jump + 1 : 0, s3.jump = t3 - n3 + l3, s3.open = false, o3.end = t3, o3.jump = l3, o3.close = false, a3 = -1;
                    break;
                  }
                -1 !== a3 && (u3[s3.marker][(s3.length || 0) % 3] = a3);
              }
          }
          var nr = E.isWhiteSpace, sr = E.isPunctChar, or = E.isMdAsciiPunct;
          function ir(e4, r4, t3, n3) {
            this.src = e4, this.env = t3, this.md = r4, this.tokens = n3, this.tokens_meta = Array(n3.length), this.pos = 0, this.posMax = this.src.length, this.level = 0, this.pending = "", this.pendingLevel = 0, this.cache = {}, this.delimiters = [], this._prev_delimiters = [], this.backticks = {}, this.backticksScanned = false;
          }
          ir.prototype.pushPending = function() {
            var e4 = new oe("text", "", 0);
            return e4.content = this.pending, e4.level = this.pendingLevel, this.tokens.push(e4), this.pending = "", e4;
          }, ir.prototype.push = function(e4, r4, t3) {
            this.pending && this.pushPending();
            var n3 = new oe(e4, r4, t3), s3 = null;
            return t3 < 0 && (this.level--, this.delimiters = this._prev_delimiters.pop()), n3.level = this.level, t3 > 0 && (this.level++, this._prev_delimiters.push(this.delimiters), this.delimiters = [], s3 = { delimiters: this.delimiters }), this.pendingLevel = this.level, this.tokens.push(n3), this.tokens_meta.push(s3), n3;
          }, ir.prototype.scanDelims = function(e4, r4) {
            var t3, n3, s3, o3, i3, a3, c3, l3, u3, p3 = e4, h3 = true, f3 = true, d3 = this.posMax, m3 = this.src.charCodeAt(e4);
            for (t3 = e4 > 0 ? this.src.charCodeAt(e4 - 1) : 32; p3 < d3 && this.src.charCodeAt(p3) === m3; )
              p3++;
            return s3 = p3 - e4, n3 = p3 < d3 ? this.src.charCodeAt(p3) : 32, c3 = or(t3) || sr(String.fromCharCode(t3)), u3 = or(n3) || sr(String.fromCharCode(n3)), a3 = nr(t3), (l3 = nr(n3)) ? h3 = false : u3 && (a3 || c3 || (h3 = false)), a3 ? f3 = false : c3 && (l3 || u3 || (f3 = false)), r4 ? (o3 = h3, i3 = f3) : (o3 = h3 && (!f3 || c3), i3 = f3 && (!h3 || u3)), { can_open: o3, can_close: i3, length: s3 };
          }, ir.prototype.Token = oe;
          var ar = ir, cr = [["text", function(e4, r4) {
            for (var t3 = e4.pos; t3 < e4.posMax && !Me(e4.src.charCodeAt(t3)); )
              t3++;
            return t3 !== e4.pos && (r4 || (e4.pending += e4.src.slice(e4.pos, t3)), e4.pos = t3, true);
          }], ["newline", function(e4, r4) {
            var t3, n3, s3 = e4.pos;
            if (10 !== e4.src.charCodeAt(s3))
              return false;
            for (t3 = e4.pending.length - 1, n3 = e4.posMax, r4 || (t3 >= 0 && 32 === e4.pending.charCodeAt(t3) ? t3 >= 1 && 32 === e4.pending.charCodeAt(t3 - 1) ? (e4.pending = e4.pending.replace(/ +$/, ""), e4.push("hardbreak", "br", 0)) : (e4.pending = e4.pending.slice(0, -1), e4.push("softbreak", "br", 0)) : e4.push("softbreak", "br", 0)), s3++; s3 < n3 && Re(e4.src.charCodeAt(s3)); )
              s3++;
            return e4.pos = s3, true;
          }], ["escape", function(e4, r4) {
            var t3, n3 = e4.pos, s3 = e4.posMax;
            if (92 !== e4.src.charCodeAt(n3))
              return false;
            if (++n3 < s3) {
              if ((t3 = e4.src.charCodeAt(n3)) < 256 && 0 !== Ne[t3])
                return r4 || (e4.pending += e4.src[n3]), e4.pos += 2, true;
              if (10 === t3) {
                for (r4 || e4.push("hardbreak", "br", 0), n3++; n3 < s3 && (t3 = e4.src.charCodeAt(n3), Be(t3)); )
                  n3++;
                return e4.pos = n3, true;
              }
            }
            return r4 || (e4.pending += "\\"), e4.pos++, true;
          }], ["backticks", function(e4, r4) {
            var t3, n3, s3, o3, i3, a3, c3, l3, u3 = e4.pos;
            if (96 !== e4.src.charCodeAt(u3))
              return false;
            for (t3 = u3, u3++, n3 = e4.posMax; u3 < n3 && 96 === e4.src.charCodeAt(u3); )
              u3++;
            if (s3 = e4.src.slice(t3, u3), c3 = s3.length, e4.backticksScanned && (e4.backticks[c3] || 0) <= t3)
              return r4 || (e4.pending += s3), e4.pos += c3, true;
            for (i3 = a3 = u3; -1 !== (i3 = e4.src.indexOf("`", a3)); ) {
              for (a3 = i3 + 1; a3 < n3 && 96 === e4.src.charCodeAt(a3); )
                a3++;
              if ((l3 = a3 - i3) === c3)
                return r4 || ((o3 = e4.push("code_inline", "code", 0)).markup = s3, o3.content = e4.src.slice(u3, i3).replace(/\n/g, " ").replace(/^ (.+) $/, "$1")), e4.pos = a3, true;
              e4.backticks[l3] = i3;
            }
            return e4.backticksScanned = true, r4 || (e4.pending += s3), e4.pos += c3, true;
          }], ["strikethrough", je.tokenize], ["emphasis", Ve.tokenize], ["link", function(e4, r4) {
            var t3, n3, s3, o3, i3, a3, c3, l3, u3 = "", p3 = "", h3 = e4.pos, f3 = e4.posMax, d3 = e4.pos, m3 = true;
            if (91 !== e4.src.charCodeAt(e4.pos))
              return false;
            if (i3 = e4.pos + 1, (o3 = e4.md.helpers.parseLinkLabel(e4, e4.pos, true)) < 0)
              return false;
            if ((a3 = o3 + 1) < f3 && 40 === e4.src.charCodeAt(a3)) {
              for (m3 = false, a3++; a3 < f3 && (n3 = e4.src.charCodeAt(a3), $e(n3) || 10 === n3); a3++)
                ;
              if (a3 >= f3)
                return false;
              if (d3 = a3, (c3 = e4.md.helpers.parseLinkDestination(e4.src, a3, e4.posMax)).ok) {
                for (u3 = e4.md.normalizeLink(c3.str), e4.md.validateLink(u3) ? a3 = c3.pos : u3 = "", d3 = a3; a3 < f3 && (n3 = e4.src.charCodeAt(a3), $e(n3) || 10 === n3); a3++)
                  ;
                if (c3 = e4.md.helpers.parseLinkTitle(e4.src, a3, e4.posMax), a3 < f3 && d3 !== a3 && c3.ok)
                  for (p3 = c3.str, a3 = c3.pos; a3 < f3 && (n3 = e4.src.charCodeAt(a3), $e(n3) || 10 === n3); a3++)
                    ;
              }
              (a3 >= f3 || 41 !== e4.src.charCodeAt(a3)) && (m3 = true), a3++;
            }
            if (m3) {
              if (void 0 === e4.env.references)
                return false;
              if (a3 < f3 && 91 === e4.src.charCodeAt(a3) ? (d3 = a3 + 1, (a3 = e4.md.helpers.parseLinkLabel(e4, a3)) >= 0 ? s3 = e4.src.slice(d3, a3++) : a3 = o3 + 1) : a3 = o3 + 1, s3 || (s3 = e4.src.slice(i3, o3)), !(l3 = e4.env.references[Ze(s3)]))
                return e4.pos = h3, false;
              u3 = l3.href, p3 = l3.title;
            }
            return r4 || (e4.pos = i3, e4.posMax = o3, e4.push("link_open", "a", 1).attrs = t3 = [["href", u3]], p3 && t3.push(["title", p3]), e4.md.inline.tokenize(e4), e4.push("link_close", "a", -1)), e4.pos = a3, e4.posMax = f3, true;
          }], ["image", function(e4, r4) {
            var t3, n3, s3, o3, i3, a3, c3, l3, u3, p3, h3, f3, d3, m3 = "", g3 = e4.pos, _3 = e4.posMax;
            if (33 !== e4.src.charCodeAt(e4.pos))
              return false;
            if (91 !== e4.src.charCodeAt(e4.pos + 1))
              return false;
            if (a3 = e4.pos + 2, (i3 = e4.md.helpers.parseLinkLabel(e4, e4.pos + 1, false)) < 0)
              return false;
            if ((c3 = i3 + 1) < _3 && 40 === e4.src.charCodeAt(c3)) {
              for (c3++; c3 < _3 && (n3 = e4.src.charCodeAt(c3), He(n3) || 10 === n3); c3++)
                ;
              if (c3 >= _3)
                return false;
              for (d3 = c3, (u3 = e4.md.helpers.parseLinkDestination(e4.src, c3, e4.posMax)).ok && (m3 = e4.md.normalizeLink(u3.str), e4.md.validateLink(m3) ? c3 = u3.pos : m3 = ""), d3 = c3; c3 < _3 && (n3 = e4.src.charCodeAt(c3), He(n3) || 10 === n3); c3++)
                ;
              if (u3 = e4.md.helpers.parseLinkTitle(e4.src, c3, e4.posMax), c3 < _3 && d3 !== c3 && u3.ok)
                for (p3 = u3.str, c3 = u3.pos; c3 < _3 && (n3 = e4.src.charCodeAt(c3), He(n3) || 10 === n3); c3++)
                  ;
              else
                p3 = "";
              if (c3 >= _3 || 41 !== e4.src.charCodeAt(c3))
                return e4.pos = g3, false;
              c3++;
            } else {
              if (void 0 === e4.env.references)
                return false;
              if (c3 < _3 && 91 === e4.src.charCodeAt(c3) ? (d3 = c3 + 1, (c3 = e4.md.helpers.parseLinkLabel(e4, c3)) >= 0 ? o3 = e4.src.slice(d3, c3++) : c3 = i3 + 1) : c3 = i3 + 1, o3 || (o3 = e4.src.slice(a3, i3)), !(l3 = e4.env.references[Ge(o3)]))
                return e4.pos = g3, false;
              m3 = l3.href, p3 = l3.title;
            }
            return r4 || (s3 = e4.src.slice(a3, i3), e4.md.inline.parse(s3, e4.md, e4.env, f3 = []), (h3 = e4.push("image", "img", 0)).attrs = t3 = [["src", m3], ["alt", ""]], h3.children = f3, h3.content = s3, p3 && t3.push(["title", p3])), e4.pos = c3, e4.posMax = _3, true;
          }], ["autolink", function(e4, r4) {
            var t3, n3, s3, o3, i3, a3, c3 = e4.pos;
            if (60 !== e4.src.charCodeAt(c3))
              return false;
            for (i3 = e4.pos, a3 = e4.posMax; ; ) {
              if (++c3 >= a3)
                return false;
              if (60 === (o3 = e4.src.charCodeAt(c3)))
                return false;
              if (62 === o3)
                break;
            }
            return t3 = e4.src.slice(i3 + 1, c3), We.test(t3) ? (n3 = e4.md.normalizeLink(t3), !!e4.md.validateLink(n3) && (r4 || ((s3 = e4.push("link_open", "a", 1)).attrs = [["href", n3]], s3.markup = "autolink", s3.info = "auto", (s3 = e4.push("text", "", 0)).content = e4.md.normalizeLinkText(t3), (s3 = e4.push("link_close", "a", -1)).markup = "autolink", s3.info = "auto"), e4.pos += t3.length + 2, true)) : !!Je.test(t3) && (n3 = e4.md.normalizeLink("mailto:" + t3), !!e4.md.validateLink(n3) && (r4 || ((s3 = e4.push("link_open", "a", 1)).attrs = [["href", n3]], s3.markup = "autolink", s3.info = "auto", (s3 = e4.push("text", "", 0)).content = e4.md.normalizeLinkText(t3), (s3 = e4.push("link_close", "a", -1)).markup = "autolink", s3.info = "auto"), e4.pos += t3.length + 2, true));
          }], ["html_inline", function(e4, r4) {
            var t3, n3, s3, o3 = e4.pos;
            return !!e4.md.options.html && (s3 = e4.posMax, !(60 !== e4.src.charCodeAt(o3) || o3 + 2 >= s3) && (!(33 !== (t3 = e4.src.charCodeAt(o3 + 1)) && 63 !== t3 && 47 !== t3 && !function(e5) {
              var r5 = 32 | e5;
              return r5 >= 97 && r5 <= 122;
            }(t3)) && (!!(n3 = e4.src.slice(o3).match(Ye)) && (r4 || (e4.push("html_inline", "", 0).content = e4.src.slice(o3, o3 + n3[0].length)), e4.pos += n3[0].length, true))));
          }], ["entity", function(r4, t3) {
            var n3, s3, o3 = r4.pos, i3 = r4.posMax;
            if (38 !== r4.src.charCodeAt(o3))
              return false;
            if (o3 + 1 < i3) {
              if (35 === r4.src.charCodeAt(o3 + 1)) {
                if (s3 = r4.src.slice(o3).match(er))
                  return t3 || (n3 = "x" === s3[1][0].toLowerCase() ? parseInt(s3[1].slice(1), 16) : parseInt(s3[1], 10), r4.pending += Qe(n3) ? Xe(n3) : Xe(65533)), r4.pos += s3[0].length, true;
              } else if ((s3 = r4.src.slice(o3).match(rr)) && Ke(e3, s3[1]))
                return t3 || (r4.pending += e3[s3[1]]), r4.pos += s3[0].length, true;
            }
            return t3 || (r4.pending += "&"), r4.pos++, true;
          }]], lr = [["balance_pairs", function(e4) {
            var r4, t3 = e4.tokens_meta, n3 = e4.tokens_meta.length;
            for (tr(0, e4.delimiters), r4 = 0; r4 < n3; r4++)
              t3[r4] && t3[r4].delimiters && tr(0, t3[r4].delimiters);
          }], ["strikethrough", je.postProcess], ["emphasis", Ve.postProcess], ["text_collapse", function(e4) {
            var r4, t3, n3 = 0, s3 = e4.tokens, o3 = e4.tokens.length;
            for (r4 = t3 = 0; r4 < o3; r4++)
              s3[r4].nesting < 0 && n3--, s3[r4].level = n3, s3[r4].nesting > 0 && n3++, "text" === s3[r4].type && r4 + 1 < o3 && "text" === s3[r4 + 1].type ? s3[r4 + 1].content = s3[r4].content + s3[r4 + 1].content : (r4 !== t3 && (s3[t3] = s3[r4]), t3++);
            r4 !== t3 && (s3.length = t3);
          }]];
          function ur() {
            var e4;
            for (this.ruler = new N(), e4 = 0; e4 < cr.length; e4++)
              this.ruler.push(cr[e4][0], cr[e4][1]);
            for (this.ruler2 = new N(), e4 = 0; e4 < lr.length; e4++)
              this.ruler2.push(lr[e4][0], lr[e4][1]);
          }
          ur.prototype.skipToken = function(e4) {
            var r4, t3, n3 = e4.pos, s3 = this.ruler.getRules(""), o3 = s3.length, i3 = e4.md.options.maxNesting, a3 = e4.cache;
            if (void 0 === a3[n3]) {
              if (e4.level < i3)
                for (t3 = 0; t3 < o3 && (e4.level++, r4 = s3[t3](e4, true), e4.level--, !r4); t3++)
                  ;
              else
                e4.pos = e4.posMax;
              r4 || e4.pos++, a3[n3] = e4.pos;
            } else
              e4.pos = a3[n3];
          }, ur.prototype.tokenize = function(e4) {
            for (var r4, t3, n3 = this.ruler.getRules(""), s3 = n3.length, o3 = e4.posMax, i3 = e4.md.options.maxNesting; e4.pos < o3; ) {
              if (e4.level < i3)
                for (t3 = 0; t3 < s3 && !(r4 = n3[t3](e4, false)); t3++)
                  ;
              if (r4) {
                if (e4.pos >= o3)
                  break;
              } else
                e4.pending += e4.src[e4.pos++];
            }
            e4.pending && e4.pushPending();
          }, ur.prototype.parse = function(e4, r4, t3, n3) {
            var s3, o3, i3, a3 = new this.State(e4, r4, t3, n3);
            for (this.tokenize(a3), o3 = this.ruler2.getRules(""), i3 = o3.length, s3 = 0; s3 < i3; s3++)
              o3[s3](a3);
          }, ur.prototype.State = ar;
          var pr = ur, hr = function(e4) {
            var t3 = {};
            return t3.src_Any = A.source, t3.src_Cc = x.source, t3.src_Z = w.source, t3.src_P = r3.source, t3.src_ZPCc = [t3.src_Z, t3.src_P, t3.src_Cc].join("|"), t3.src_ZCc = [t3.src_Z, t3.src_Cc].join("|"), t3.src_pseudo_letter = "(?:(?![><\uFF5C]|" + t3.src_ZPCc + ")" + t3.src_Any + ")", t3.src_ip4 = "(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)", t3.src_auth = "(?:(?:(?!" + t3.src_ZCc + "|[@/\\[\\]()]).)+@)?", t3.src_port = "(?::(?:6(?:[0-4]\\d{3}|5(?:[0-4]\\d{2}|5(?:[0-2]\\d|3[0-5])))|[1-5]?\\d{1,4}))?", t3.src_host_terminator = "(?=$|[><\uFF5C]|" + t3.src_ZPCc + ")(?!-|_|:\\d|\\.-|\\.(?!$|" + t3.src_ZPCc + "))", t3.src_path = "(?:[/?#](?:(?!" + t3.src_ZCc + `|[><\uFF5C]|[()[\\]{}.,"'?!\\-]).|\\[(?:(?!` + t3.src_ZCc + "|\\]).)*\\]|\\((?:(?!" + t3.src_ZCc + "|[)]).)*\\)|\\{(?:(?!" + t3.src_ZCc + '|[}]).)*\\}|\\"(?:(?!' + t3.src_ZCc + `|["]).)+\\"|\\'(?:(?!` + t3.src_ZCc + "|[']).)+\\'|\\'(?=" + t3.src_pseudo_letter + "|[-]).|\\.{2,}[a-zA-Z0-9%/&]|\\.(?!" + t3.src_ZCc + "|[.]).|" + (e4 && e4["---"] ? "\\-(?!--(?:[^-]|$))(?:-*)|" : "\\-+|") + "\\,(?!" + t3.src_ZCc + ").|\\!+(?!" + t3.src_ZCc + "|[!]).|\\?(?!" + t3.src_ZCc + "|[?]).)+|\\/)?", t3.src_email_name = '[\\-;:&=\\+\\$,\\.a-zA-Z0-9_][\\-;:&=\\+\\$,\\"\\.a-zA-Z0-9_]*', t3.src_xn = "xn--[a-z0-9\\-]{1,59}", t3.src_domain_root = "(?:" + t3.src_xn + "|" + t3.src_pseudo_letter + "{1,63})", t3.src_domain = "(?:" + t3.src_xn + "|(?:" + t3.src_pseudo_letter + ")|(?:" + t3.src_pseudo_letter + "(?:-|" + t3.src_pseudo_letter + "){0,61}" + t3.src_pseudo_letter + "))", t3.src_host = "(?:(?:(?:(?:" + t3.src_domain + ")\\.)*" + t3.src_domain + "))", t3.tpl_host_fuzzy = "(?:" + t3.src_ip4 + "|(?:(?:(?:" + t3.src_domain + ")\\.)+(?:%TLDS%)))", t3.tpl_host_no_ip_fuzzy = "(?:(?:(?:" + t3.src_domain + ")\\.)+(?:%TLDS%))", t3.src_host_strict = t3.src_host + t3.src_host_terminator, t3.tpl_host_fuzzy_strict = t3.tpl_host_fuzzy + t3.src_host_terminator, t3.src_host_port_strict = t3.src_host + t3.src_port + t3.src_host_terminator, t3.tpl_host_port_fuzzy_strict = t3.tpl_host_fuzzy + t3.src_port + t3.src_host_terminator, t3.tpl_host_port_no_ip_fuzzy_strict = t3.tpl_host_no_ip_fuzzy + t3.src_port + t3.src_host_terminator, t3.tpl_host_fuzzy_test = "localhost|www\\.|\\.\\d{1,3}\\.|(?:\\.(?:%TLDS%)(?:" + t3.src_ZPCc + "|>|$))", t3.tpl_email_fuzzy = '(^|[><\uFF5C]|"|\\(|' + t3.src_ZCc + ")(" + t3.src_email_name + "@" + t3.tpl_host_fuzzy_strict + ")", t3.tpl_link_fuzzy = "(^|(?![.:/\\-_@])(?:[$+<=>^`|\uFF5C]|" + t3.src_ZPCc + "))((?![$+<=>^`|\uFF5C])" + t3.tpl_host_port_fuzzy_strict + t3.src_path + ")", t3.tpl_link_no_ip_fuzzy = "(^|(?![.:/\\-_@])(?:[$+<=>^`|\uFF5C]|" + t3.src_ZPCc + "))((?![$+<=>^`|\uFF5C])" + t3.tpl_host_port_no_ip_fuzzy_strict + t3.src_path + ")", t3;
          };
          function fr(e4) {
            var r4 = Array.prototype.slice.call(arguments, 1);
            return r4.forEach(function(r5) {
              r5 && Object.keys(r5).forEach(function(t3) {
                e4[t3] = r5[t3];
              });
            }), e4;
          }
          function dr(e4) {
            return Object.prototype.toString.call(e4);
          }
          function mr(e4) {
            return "[object Function]" === dr(e4);
          }
          function gr(e4) {
            return e4.replace(/[.?*+^$[\]\\(){}|-]/g, "\\$&");
          }
          var _r = { fuzzyLink: true, fuzzyEmail: true, fuzzyIP: false }, kr = { "http:": { validate: function(e4, r4, t3) {
            var n3 = e4.slice(r4);
            return t3.re.http || (t3.re.http = new RegExp("^\\/\\/" + t3.re.src_auth + t3.re.src_host_port_strict + t3.re.src_path, "i")), t3.re.http.test(n3) ? n3.match(t3.re.http)[0].length : 0;
          } }, "https:": "http:", "ftp:": "http:", "//": { validate: function(e4, r4, t3) {
            var n3 = e4.slice(r4);
            return t3.re.no_http || (t3.re.no_http = new RegExp("^" + t3.re.src_auth + "(?:localhost|(?:(?:" + t3.re.src_domain + ")\\.)+" + t3.re.src_domain_root + ")" + t3.re.src_port + t3.re.src_host_terminator + t3.re.src_path, "i")), t3.re.no_http.test(n3) ? r4 >= 3 && ":" === e4[r4 - 3] ? 0 : r4 >= 3 && "/" === e4[r4 - 3] ? 0 : n3.match(t3.re.no_http)[0].length : 0;
          } }, "mailto:": { validate: function(e4, r4, t3) {
            var n3 = e4.slice(r4);
            return t3.re.mailto || (t3.re.mailto = new RegExp("^" + t3.re.src_email_name + "@" + t3.re.src_host_strict, "i")), t3.re.mailto.test(n3) ? n3.match(t3.re.mailto)[0].length : 0;
          } } }, br = "a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]", vr = "biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|\u0440\u0444".split("|");
          function Cr(e4) {
            var r4 = e4.re = hr(e4.__opts__), t3 = e4.__tlds__.slice();
            function n3(e5) {
              return e5.replace("%TLDS%", r4.src_tlds);
            }
            e4.onCompile(), e4.__tlds_replaced__ || t3.push(br), t3.push(r4.src_xn), r4.src_tlds = t3.join("|"), r4.email_fuzzy = RegExp(n3(r4.tpl_email_fuzzy), "i"), r4.link_fuzzy = RegExp(n3(r4.tpl_link_fuzzy), "i"), r4.link_no_ip_fuzzy = RegExp(n3(r4.tpl_link_no_ip_fuzzy), "i"), r4.host_fuzzy_test = RegExp(n3(r4.tpl_host_fuzzy_test), "i");
            var s3 = [];
            function o3(e5, r5) {
              throw new Error('(LinkifyIt) Invalid schema "' + e5 + '": ' + r5);
            }
            e4.__compiled__ = {}, Object.keys(e4.__schemas__).forEach(function(r5) {
              var t4 = e4.__schemas__[r5];
              if (null !== t4) {
                var n4, i4 = { validate: null, link: null };
                if (e4.__compiled__[r5] = i4, "[object Object]" === dr(t4))
                  return function(e5) {
                    return "[object RegExp]" === dr(e5);
                  }(t4.validate) ? i4.validate = (n4 = t4.validate, function(e5, r6) {
                    var t5 = e5.slice(r6);
                    return n4.test(t5) ? t5.match(n4)[0].length : 0;
                  }) : mr(t4.validate) ? i4.validate = t4.validate : o3(r5, t4), void (mr(t4.normalize) ? i4.normalize = t4.normalize : t4.normalize ? o3(r5, t4) : i4.normalize = function(e5, r6) {
                    r6.normalize(e5);
                  });
                !function(e5) {
                  return "[object String]" === dr(e5);
                }(t4) ? o3(r5, t4) : s3.push(r5);
              }
            }), s3.forEach(function(r5) {
              e4.__compiled__[e4.__schemas__[r5]] && (e4.__compiled__[r5].validate = e4.__compiled__[e4.__schemas__[r5]].validate, e4.__compiled__[r5].normalize = e4.__compiled__[e4.__schemas__[r5]].normalize);
            }), e4.__compiled__[""] = { validate: null, normalize: function(e5, r5) {
              r5.normalize(e5);
            } };
            var i3 = Object.keys(e4.__compiled__).filter(function(r5) {
              return r5.length > 0 && e4.__compiled__[r5];
            }).map(gr).join("|");
            e4.re.schema_test = RegExp("(^|(?!_)(?:[><\uFF5C]|" + r4.src_ZPCc + "))(" + i3 + ")", "i"), e4.re.schema_search = RegExp("(^|(?!_)(?:[><\uFF5C]|" + r4.src_ZPCc + "))(" + i3 + ")", "ig"), e4.re.pretest = RegExp("(" + e4.re.schema_test.source + ")|(" + e4.re.host_fuzzy_test.source + ")|@", "i"), function(e5) {
              e5.__index__ = -1, e5.__text_cache__ = "";
            }(e4);
          }
          function yr(e4, r4) {
            var t3 = e4.__index__, n3 = e4.__last_index__, s3 = e4.__text_cache__.slice(t3, n3);
            this.schema = e4.__schema__.toLowerCase(), this.index = t3 + r4, this.lastIndex = n3 + r4, this.raw = s3, this.text = s3, this.url = s3;
          }
          function Ar(e4, r4) {
            var t3 = new yr(e4, r4);
            return e4.__compiled__[t3.schema].normalize(t3, e4), t3;
          }
          function xr(e4, r4) {
            if (!(this instanceof xr))
              return new xr(e4, r4);
            var t3;
            r4 || (t3 = e4, Object.keys(t3 || {}).reduce(function(e5, r5) {
              return e5 || _r.hasOwnProperty(r5);
            }, false) && (r4 = e4, e4 = {})), this.__opts__ = fr({}, _r, r4), this.__index__ = -1, this.__last_index__ = -1, this.__schema__ = "", this.__text_cache__ = "", this.__schemas__ = fr({}, kr, e4), this.__compiled__ = {}, this.__tlds__ = vr, this.__tlds_replaced__ = false, this.re = {}, Cr(this);
          }
          xr.prototype.add = function(e4, r4) {
            return this.__schemas__[e4] = r4, Cr(this), this;
          }, xr.prototype.set = function(e4) {
            return this.__opts__ = fr(this.__opts__, e4), this;
          }, xr.prototype.test = function(e4) {
            if (this.__text_cache__ = e4, this.__index__ = -1, !e4.length)
              return false;
            var r4, t3, n3, s3, o3, i3, a3, c3;
            if (this.re.schema_test.test(e4)) {
              for ((a3 = this.re.schema_search).lastIndex = 0; null !== (r4 = a3.exec(e4)); )
                if (s3 = this.testSchemaAt(e4, r4[2], a3.lastIndex)) {
                  this.__schema__ = r4[2], this.__index__ = r4.index + r4[1].length, this.__last_index__ = r4.index + r4[0].length + s3;
                  break;
                }
            }
            return this.__opts__.fuzzyLink && this.__compiled__["http:"] && (c3 = e4.search(this.re.host_fuzzy_test)) >= 0 && (this.__index__ < 0 || c3 < this.__index__) && null !== (t3 = e4.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) && (o3 = t3.index + t3[1].length, (this.__index__ < 0 || o3 < this.__index__) && (this.__schema__ = "", this.__index__ = o3, this.__last_index__ = t3.index + t3[0].length)), this.__opts__.fuzzyEmail && this.__compiled__["mailto:"] && e4.indexOf("@") >= 0 && null !== (n3 = e4.match(this.re.email_fuzzy)) && (o3 = n3.index + n3[1].length, i3 = n3.index + n3[0].length, (this.__index__ < 0 || o3 < this.__index__ || o3 === this.__index__ && i3 > this.__last_index__) && (this.__schema__ = "mailto:", this.__index__ = o3, this.__last_index__ = i3)), this.__index__ >= 0;
          }, xr.prototype.pretest = function(e4) {
            return this.re.pretest.test(e4);
          }, xr.prototype.testSchemaAt = function(e4, r4, t3) {
            return this.__compiled__[r4.toLowerCase()] ? this.__compiled__[r4.toLowerCase()].validate(e4, t3, this) : 0;
          }, xr.prototype.match = function(e4) {
            var r4 = 0, t3 = [];
            this.__index__ >= 0 && this.__text_cache__ === e4 && (t3.push(Ar(this, r4)), r4 = this.__last_index__);
            for (var n3 = r4 ? e4.slice(r4) : e4; this.test(n3); )
              t3.push(Ar(this, r4)), n3 = n3.slice(this.__last_index__), r4 += this.__last_index__;
            return t3.length ? t3 : null;
          }, xr.prototype.tlds = function(e4, r4) {
            return e4 = Array.isArray(e4) ? e4 : [e4], r4 ? (this.__tlds__ = this.__tlds__.concat(e4).sort().filter(function(e5, r5, t3) {
              return e5 !== t3[r5 - 1];
            }).reverse(), Cr(this), this) : (this.__tlds__ = e4.slice(), this.__tlds_replaced__ = true, Cr(this), this);
          }, xr.prototype.normalize = function(e4) {
            e4.schema || (e4.url = "http://" + e4.url), "mailto:" !== e4.schema || /^mailto:/i.test(e4.url) || (e4.url = "mailto:" + e4.url);
          }, xr.prototype.onCompile = function() {
          };
          var wr = xr, Dr = 2147483647, Er = 36, qr = 1, Sr = 26, Fr = 38, Lr = 700, zr = 72, Tr = 128, Ir = "-", Mr = /^xn--/, Rr = /[^\x20-\x7E]/, Br = /[\x2E\u3002\uFF0E\uFF61]/g, Nr = { overflow: "Overflow: input needs wider integers to process", "not-basic": "Illegal input >= 0x80 (not a basic code point)", "invalid-input": "Invalid input" }, Or = Er - qr, Pr = Math.floor, jr = String.fromCharCode;
          function Ur(e4) {
            throw new RangeError(Nr[e4]);
          }
          function Vr(e4, r4) {
            for (var t3 = e4.length, n3 = []; t3--; )
              n3[t3] = r4(e4[t3]);
            return n3;
          }
          function Zr(e4, r4) {
            var t3 = e4.split("@"), n3 = "";
            t3.length > 1 && (n3 = t3[0] + "@", e4 = t3[1]);
            var s3 = (e4 = e4.replace(Br, ".")).split("."), o3 = Vr(s3, r4).join(".");
            return n3 + o3;
          }
          function $r(e4) {
            for (var r4, t3, n3 = [], s3 = 0, o3 = e4.length; s3 < o3; )
              (r4 = e4.charCodeAt(s3++)) >= 55296 && r4 <= 56319 && s3 < o3 ? 56320 == (64512 & (t3 = e4.charCodeAt(s3++))) ? n3.push(((1023 & r4) << 10) + (1023 & t3) + 65536) : (n3.push(r4), s3--) : n3.push(r4);
            return n3;
          }
          function Gr(e4) {
            return Vr(e4, function(e5) {
              var r4 = "";
              return e5 > 65535 && (r4 += jr((e5 -= 65536) >>> 10 & 1023 | 55296), e5 = 56320 | 1023 & e5), r4 += jr(e5);
            }).join("");
          }
          function Hr(e4, r4) {
            return e4 + 22 + 75 * (e4 < 26) - ((0 != r4) << 5);
          }
          function Jr(e4, r4, t3) {
            var n3 = 0;
            for (e4 = t3 ? Pr(e4 / Lr) : e4 >> 1, e4 += Pr(e4 / r4); e4 > Or * Sr >> 1; n3 += Er)
              e4 = Pr(e4 / Or);
            return Pr(n3 + (Or + 1) * e4 / (e4 + Fr));
          }
          function Wr(e4) {
            var r4, t3, n3, s3, o3, i3, a3, c3, l3, u3, p3, h3 = [], f3 = e4.length, d3 = 0, m3 = Tr, g3 = zr;
            for ((t3 = e4.lastIndexOf(Ir)) < 0 && (t3 = 0), n3 = 0; n3 < t3; ++n3)
              e4.charCodeAt(n3) >= 128 && Ur("not-basic"), h3.push(e4.charCodeAt(n3));
            for (s3 = t3 > 0 ? t3 + 1 : 0; s3 < f3; ) {
              for (o3 = d3, i3 = 1, a3 = Er; s3 >= f3 && Ur("invalid-input"), p3 = e4.charCodeAt(s3++), ((c3 = p3 - 48 < 10 ? p3 - 22 : p3 - 65 < 26 ? p3 - 65 : p3 - 97 < 26 ? p3 - 97 : Er) >= Er || c3 > Pr((Dr - d3) / i3)) && Ur("overflow"), d3 += c3 * i3, !(c3 < (l3 = a3 <= g3 ? qr : a3 >= g3 + Sr ? Sr : a3 - g3)); a3 += Er)
                i3 > Pr(Dr / (u3 = Er - l3)) && Ur("overflow"), i3 *= u3;
              r4 = h3.length + 1, g3 = Jr(d3 - o3, r4, 0 == o3), Pr(d3 / r4) > Dr - m3 && Ur("overflow"), m3 += Pr(d3 / r4), d3 %= r4, h3.splice(d3++, 0, m3);
            }
            return Gr(h3);
          }
          function Yr(e4) {
            var r4, t3, n3, s3, o3, i3, a3, c3, l3, u3, p3, h3, f3, d3, m3, g3 = [];
            for (e4 = $r(e4), h3 = e4.length, r4 = Tr, t3 = 0, o3 = zr, i3 = 0; i3 < h3; ++i3)
              (p3 = e4[i3]) < 128 && g3.push(jr(p3));
            for (n3 = s3 = g3.length, s3 && g3.push(Ir); n3 < h3; ) {
              for (a3 = Dr, i3 = 0; i3 < h3; ++i3)
                (p3 = e4[i3]) >= r4 && p3 < a3 && (a3 = p3);
              for (a3 - r4 > Pr((Dr - t3) / (f3 = n3 + 1)) && Ur("overflow"), t3 += (a3 - r4) * f3, r4 = a3, i3 = 0; i3 < h3; ++i3)
                if ((p3 = e4[i3]) < r4 && ++t3 > Dr && Ur("overflow"), p3 == r4) {
                  for (c3 = t3, l3 = Er; !(c3 < (u3 = l3 <= o3 ? qr : l3 >= o3 + Sr ? Sr : l3 - o3)); l3 += Er)
                    m3 = c3 - u3, d3 = Er - u3, g3.push(jr(Hr(u3 + m3 % d3, 0))), c3 = Pr(m3 / d3);
                  g3.push(jr(Hr(c3, 0))), o3 = Jr(t3, f3, n3 == s3), t3 = 0, ++n3;
                }
              ++t3, ++r4;
            }
            return g3.join("");
          }
          function Kr(e4) {
            return Zr(e4, function(e5) {
              return Mr.test(e5) ? Wr(e5.slice(4).toLowerCase()) : e5;
            });
          }
          function Qr(e4) {
            return Zr(e4, function(e5) {
              return Rr.test(e5) ? "xn--" + Yr(e5) : e5;
            });
          }
          var Xr = { decode: $r, encode: Gr }, et = { version: "1.4.1", ucs2: Xr, toASCII: Qr, toUnicode: Kr, encode: Yr, decode: Wr }, rt = Object.freeze({ __proto__: null, decode: Wr, encode: Yr, toUnicode: Kr, toASCII: Qr, version: "1.4.1", ucs2: Xr, default: et }), tt = function(e4) {
            if (e4.__esModule)
              return e4;
            var r4 = Object.defineProperty({}, "__esModule", { value: true });
            return Object.keys(e4).forEach(function(t3) {
              var n3 = Object.getOwnPropertyDescriptor(e4, t3);
              Object.defineProperty(r4, t3, n3.get ? n3 : { enumerable: true, get: function() {
                return e4[t3];
              } });
            }), r4;
          }(rt), nt = { default: { options: { html: false, xhtmlOut: false, breaks: false, langPrefix: "language-", linkify: false, typographer: false, quotes: "\u201C\u201D\u2018\u2019", highlight: null, maxNesting: 100 }, components: { core: {}, block: {}, inline: {} } }, zero: { options: { html: false, xhtmlOut: false, breaks: false, langPrefix: "language-", linkify: false, typographer: false, quotes: "\u201C\u201D\u2018\u2019", highlight: null, maxNesting: 20 }, components: { core: { rules: ["normalize", "block", "inline"] }, block: { rules: ["paragraph"] }, inline: { rules: ["text"], rules2: ["balance_pairs", "text_collapse"] } } }, commonmark: { options: { html: true, xhtmlOut: true, breaks: false, langPrefix: "language-", linkify: false, typographer: false, quotes: "\u201C\u201D\u2018\u2019", highlight: null, maxNesting: 20 }, components: { core: { rules: ["normalize", "block", "inline"] }, block: { rules: ["blockquote", "code", "fence", "heading", "hr", "html_block", "lheading", "list", "reference", "paragraph"] }, inline: { rules: ["autolink", "backticks", "emphasis", "entity", "escape", "html_inline", "image", "link", "newline", "text"], rules2: ["balance_pairs", "emphasis", "text_collapse"] } } } }, st = /^(vbscript|javascript|file|data):/, ot = /^data:image\/(gif|png|jpeg|webp);/;
          function it(e4) {
            var r4 = e4.trim().toLowerCase();
            return !st.test(r4) || !!ot.test(r4);
          }
          var at = ["http:", "https:", "mailto:"];
          function ct(e4) {
            var r4 = y.parse(e4, true);
            if (r4.hostname && (!r4.protocol || at.indexOf(r4.protocol) >= 0))
              try {
                r4.hostname = tt.toASCII(r4.hostname);
              } catch (e5) {
              }
            return y.encode(y.format(r4));
          }
          function lt(e4) {
            var r4 = y.parse(e4, true);
            if (r4.hostname && (!r4.protocol || at.indexOf(r4.protocol) >= 0))
              try {
                r4.hostname = tt.toUnicode(r4.hostname);
              } catch (e5) {
              }
            return y.decode(y.format(r4), y.decode.defaultChars + "%");
          }
          function ut(e4, r4) {
            if (!(this instanceof ut))
              return new ut(e4, r4);
            r4 || E.isString(e4) || (r4 = e4 || {}, e4 = "default"), this.inline = new pr(), this.block = new Ie(), this.core = new ue(), this.renderer = new R(), this.linkify = new wr(), this.validateLink = it, this.normalizeLink = ct, this.normalizeLinkText = lt, this.utils = E, this.helpers = E.assign({}, F), this.options = {}, this.configure(e4), r4 && this.set(r4);
          }
          return ut.prototype.set = function(e4) {
            return E.assign(this.options, e4), this;
          }, ut.prototype.configure = function(e4) {
            var r4, t3 = this;
            if (E.isString(e4) && !(e4 = nt[r4 = e4]))
              throw new Error('Wrong `markdown-it` preset "' + r4 + '", check name');
            if (!e4)
              throw new Error("Wrong `markdown-it` preset, can't be empty");
            return e4.options && t3.set(e4.options), e4.components && Object.keys(e4.components).forEach(function(r5) {
              e4.components[r5].rules && t3[r5].ruler.enableOnly(e4.components[r5].rules), e4.components[r5].rules2 && t3[r5].ruler2.enableOnly(e4.components[r5].rules2);
            }), this;
          }, ut.prototype.enable = function(e4, r4) {
            var t3 = [];
            Array.isArray(e4) || (e4 = [e4]), ["core", "block", "inline"].forEach(function(r5) {
              t3 = t3.concat(this[r5].ruler.enable(e4, true));
            }, this), t3 = t3.concat(this.inline.ruler2.enable(e4, true));
            var n3 = e4.filter(function(e5) {
              return t3.indexOf(e5) < 0;
            });
            if (n3.length && !r4)
              throw new Error("MarkdownIt. Failed to enable unknown rule(s): " + n3);
            return this;
          }, ut.prototype.disable = function(e4, r4) {
            var t3 = [];
            Array.isArray(e4) || (e4 = [e4]), ["core", "block", "inline"].forEach(function(r5) {
              t3 = t3.concat(this[r5].ruler.disable(e4, true));
            }, this), t3 = t3.concat(this.inline.ruler2.disable(e4, true));
            var n3 = e4.filter(function(e5) {
              return t3.indexOf(e5) < 0;
            });
            if (n3.length && !r4)
              throw new Error("MarkdownIt. Failed to disable unknown rule(s): " + n3);
            return this;
          }, ut.prototype.use = function(e4) {
            var r4 = [this].concat(Array.prototype.slice.call(arguments, 1));
            return e4.apply(e4, r4), this;
          }, ut.prototype.parse = function(e4, r4) {
            if ("string" != typeof e4)
              throw new Error("Input data should be a String");
            var t3 = new this.core.State(e4, this, r4);
            return this.core.process(t3), t3.tokens;
          }, ut.prototype.render = function(e4, r4) {
            return r4 = r4 || {}, this.renderer.render(this.parse(e4, r4), this.options, r4);
          }, ut.prototype.parseInline = function(e4, r4) {
            var t3 = new this.core.State(e4, this, r4);
            return t3.inlineMode = true, this.core.process(t3), t3.tokens;
          }, ut.prototype.renderInline = function(e4, r4) {
            return r4 = r4 || {}, this.renderer.render(this.parseInline(e4, r4), this.options, r4);
          }, ut;
        }();
      }(e = { exports: {} }, e.exports), e.exports), n = (r = t) && r.__esModule && Object.prototype.hasOwnProperty.call(r, "default") ? r.default : r;
      function s(e2, r2) {
        var t2, n2, s2, o2, i2 = e2.pos, a2 = e2.src.charCodeAt(i2);
        if (r2)
          return false;
        if (43 !== a2)
          return false;
        if (s2 = (n2 = e2.scanDelims(e2.pos, true)).length, o2 = String.fromCharCode(a2), s2 < 2)
          return false;
        for (s2 % 2 && (e2.push("text", "", 0).content = o2, s2--), t2 = 0; t2 < s2; t2 += 2)
          e2.push("text", "", 0).content = o2 + o2, e2.delimiters.push({ marker: a2, jump: t2, token: e2.tokens.length - 1, level: e2.level, end: -1, open: n2.can_open, close: n2.can_close });
        return e2.pos += n2.length, true;
      }
      function o(e2) {
        var r2, t2, n2, s2, o2, i2 = [], a2 = e2.delimiters, c2 = e2.delimiters.length;
        for (r2 = 0; r2 < c2; r2++)
          43 === (n2 = a2[r2]).marker && -1 !== n2.end && (s2 = a2[n2.end], (o2 = e2.tokens[n2.token]).type = "u_open", o2.tag = "u", o2.nesting = 1, o2.markup = "++", o2.content = "", (o2 = e2.tokens[s2.token]).type = "u_close", o2.tag = "u", o2.nesting = -1, o2.markup = "++", o2.content = "", "text" === e2.tokens[s2.token - 1].type && "+" === e2.tokens[s2.token - 1].content && i2.push(s2.token - 1));
        for (; i2.length; ) {
          for (t2 = (r2 = i2.pop()) + 1; t2 < e2.tokens.length && "u_close" === e2.tokens[t2].type; )
            t2++;
          r2 !== --t2 && (o2 = e2.tokens[t2], e2.tokens[t2] = e2.tokens[r2], e2.tokens[r2] = o2);
        }
      }
      var i = function(e2) {
        e2.inline.ruler.after("emphasis", "underline", s), e2.inline.ruler2.after("emphasis", "underline", o);
      }, a = /\\([ \\!"#$%&'()*+,.\/:;<=>?@[\]^_`{|}~-])/g;
      function c(e2, r2) {
        var t2, n2, s2 = e2.posMax, o2 = e2.pos;
        if (126 !== e2.src.charCodeAt(o2))
          return false;
        if (r2)
          return false;
        if (o2 + 2 >= s2)
          return false;
        for (e2.pos = o2 + 1; e2.pos < s2; ) {
          if (126 === e2.src.charCodeAt(e2.pos)) {
            t2 = true;
            break;
          }
          e2.md.inline.skipToken(e2);
        }
        return t2 && o2 + 1 !== e2.pos ? (n2 = e2.src.slice(o2 + 1, e2.pos)).match(/(^|[^\\])(\\\\)*\s/) ? (e2.pos = o2, false) : (e2.posMax = e2.pos, e2.pos = o2 + 1, e2.push("sub_open", "sub", 1).markup = "~", e2.push("text", "", 0).content = n2.replace(a, "$1"), e2.push("sub_close", "sub", -1).markup = "~", e2.pos = e2.posMax + 1, e2.posMax = s2, true) : (e2.pos = o2, false);
      }
      var l = function(e2) {
        e2.inline.ruler.after("emphasis", "sub", c);
      }, u = /\\([ \\!"#$%&'()*+,.\/:;<=>?@[\]^_`{|}~-])/g;
      function p(e2, r2) {
        var t2, n2, s2 = e2.posMax, o2 = e2.pos;
        if (94 !== e2.src.charCodeAt(o2))
          return false;
        if (r2)
          return false;
        if (o2 + 2 >= s2)
          return false;
        for (e2.pos = o2 + 1; e2.pos < s2; ) {
          if (94 === e2.src.charCodeAt(e2.pos)) {
            t2 = true;
            break;
          }
          e2.md.inline.skipToken(e2);
        }
        return t2 && o2 + 1 !== e2.pos ? (n2 = e2.src.slice(o2 + 1, e2.pos)).match(/(^|[^\\])(\\\\)*\s/) ? (e2.pos = o2, false) : (e2.posMax = e2.pos, e2.pos = o2 + 1, e2.push("sup_open", "sup", 1).markup = "^", e2.push("text", "", 0).content = n2.replace(u, "$1"), e2.push("sup_close", "sup", -1).markup = "^", e2.pos = e2.posMax + 1, e2.posMax = s2, true) : (e2.pos = o2, false);
      }
      var h = function(e2) {
        e2.inline.ruler.after("emphasis", "sup", p);
      }, f = "image";
      function d(e2, r2, t2) {
        for (var n2 = r2, s2 = 0, o2 = []; s2 < e2.length && n2 > 0; ) {
          var i2 = e2[s2];
          if (i2.type === f)
            o2.push(i2);
          else {
            var a2 = m(i2, n2, t2), c2 = a2.trimmedToken, l2 = a2.remainingLength;
            o2.push(c2), n2 = l2;
          }
          s2++;
        }
        for (var u2 = 0; s2 < e2.length; s2++) {
          var p2 = e2[s2], h2 = 1 === p2.nesting, d2 = -1 === p2.nesting;
          d2 && 0 === u2 ? o2.push(p2) : h2 ? u2++ : d2 && u2 > 0 && u2--;
        }
        return { trimmedTokens: o2, remainingLength: n2 };
      }
      function m(e2, r2, t2) {
        if (!e2.children) {
          var n2 = r2 - e2.content.length;
          return e2.content = e2.content.substr(0, r2), n2 <= 0 && (e2.content += t2), { trimmedToken: e2, remainingLength: n2 };
        }
        var s2 = d(e2.children, r2, t2), o2 = s2.trimmedTokens, i2 = s2.remainingLength;
        return e2.children = o2, { trimmedToken: e2, remainingLength: i2 };
      }
      var g = function() {
        function e2() {
          this._md = new n(), this.addPlugin(i), this.addPlugin(l), this.addPlugin(h);
        }
        var r2 = e2.prototype;
        return r2.addPlugin = function(e3) {
          for (var r3 = arguments.length, t2 = new Array(r3 > 1 ? r3 - 1 : 0), n2 = 1; n2 < r3; n2++)
            t2[n2 - 1] = arguments[n2];
          t2.unshift(e3), this._md.use.apply(this._md, t2);
        }, r2.disablePlugin = function(e3) {
          this._md.disable(e3, true);
        }, r2.toHTML = function(e3) {
          return this._md.render(e3);
        }, r2.toTruncatedHTML = function(e3, r3, t2) {
          void 0 === t2 && (t2 = "...");
          var n2 = {}, s2 = d(this._md.parse(e3, n2), r3, t2).trimmedTokens;
          return this._md.renderer.render(s2, this._md.options, n2);
        }, e2;
      }(), _ = new g();
      return _.class = g, _;
    });
  }
});
export default require_rtf_converter_min();
//# sourceMappingURL=@yext_rtf-converter.js.map
