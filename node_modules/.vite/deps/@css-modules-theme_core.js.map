{
  "version": 3,
  "sources": ["../../@css-modules-theme/core/dist/core.es.js"],
  "sourcesContent": ["function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\n/**\r\n * Takes theme object and returns the new one, properties of which start with the given prefix\r\n *\r\n * @param {Object} [theme] - Theme object\r\n * @param {string} [prefix] - Prefix to filter out theme properties that don't start with it\r\n *\r\n * @returns {Object}\r\n *\r\n * @example\r\n * filterThemeWithPrefix({a: 'Comp_a', b: 'Comp_b', item-x: 'Comp_item-x', item-y: 'Comp_item-y'}, 'item-');\r\n * =>\r\n * {x: 'Comp_item-x', y: 'Comp_item-y'}\r\n */\nfunction filterThemeWithPrefix(theme, prefix) {\n  var prefixLength = prefix.length;\n  var result = {}; // for..in plus indexOf is still the fastest way to filter object\n\n  for (var key in theme) {\n    if (theme.hasOwnProperty(key) && key.indexOf(prefix) === 0) {\n      result[key.substr(prefixLength)] = theme[key];\n    }\n  }\n\n  return result;\n}\n\n/**\r\n * Find classes in specified theme that are composed into another classes,\r\n * i.e. classes that have dependencies in another classes.\r\n * (https://github.com/css-modules/css-modules#composition)\r\n *\r\n * @param {Object} [theme] - Theme object\r\n * @returns {Object}\r\n *\r\n * @example\r\n * Comp.css\r\n * .a {...}\r\n * .b { composes: a; ...}\r\n * .c { composes: b; ...}\r\n *\r\n * getThemeDependencies({\r\n *   a: 'Comp_a',\r\n *   b: 'Comp_b Comp_a',\r\n *   c: 'Comp_c Comp_b Comp_a'\r\n * });\r\n * =>\r\n * {a: ['b', 'c'], b: ['c']}\r\n */\nfunction getThemeCompositionDependencies(theme) {\n  var result = Object.create(null);\n  var dependenciesExist = false; // for..in plus indexOf is still the fastest way to filter object\n\n  for (var key in theme) {\n    if (theme.hasOwnProperty(key)) {\n      // Don't use /\\b${theme[key]}\\b/ regex here, indexOf on string wrapped in spaces is much faster\n      var search = \" \" + theme[key] + \" \";\n\n      for (var anotherKey in theme) {\n        if (theme.hasOwnProperty(anotherKey) && anotherKey !== key && (theme[anotherKey] + ' ').indexOf(search) !== -1) {\n          if (result[key] === undefined) {\n            dependenciesExist = true;\n            result[key] = [anotherKey];\n          } else {\n            result[key].push(anotherKey);\n          }\n        }\n      }\n    }\n  }\n\n  if (dependenciesExist) {\n    return result;\n  }\n\n  return undefined;\n}\n\nvar Compose;\n\n(function (Compose) {\n  Compose[\"Merge\"] = \"merge\";\n  Compose[\"Assign\"] = \"assign\";\n  Compose[\"Replace\"] = \"replace\";\n})(Compose || (Compose = {}));\n\nvar composedThemesCacheMap = new WeakMap();\nvar prefixedThemesCacheMap = new WeakMap();\nvar dependenciesCacheMap = new WeakMap();\n/**\r\n * Filter theme object with a given prefix and cache the result which will be used on subsequent calls with the same params\r\n * See {@link filterThemeWithPrefix} for parameters list\r\n */\n\nvar getCachedPrefixedTheme = function getCachedPrefixedTheme(theme, prefix) {\n  var ownPrefixedItems = prefixedThemesCacheMap.get(theme);\n  var ownPrefixeditem;\n\n  if (ownPrefixedItems === undefined) {\n    ownPrefixedItems = [];\n    prefixedThemesCacheMap.set(theme, ownPrefixedItems);\n  } else {\n    ownPrefixeditem = ownPrefixedItems.find(function (item) {\n      return item.theme === theme && item.prefix === prefix;\n    });\n  }\n\n  if (ownPrefixeditem === undefined) {\n    ownPrefixeditem = {\n      theme: theme,\n      prefix: prefix,\n      finalTheme: filterThemeWithPrefix(theme, prefix)\n    };\n    ownPrefixedItems.push(ownPrefixeditem);\n  }\n\n  return ownPrefixeditem.finalTheme;\n};\n/**\r\n * Search theme object for a class composition and cache the result which will be used on subsequent calls with the same params\r\n * See {@link getThemeCompositionDependencies} for parameters list\r\n */\n\n\nvar getCachedThemeCompositionDependencies = function getCachedThemeCompositionDependencies(theme) {\n  var dependencies = dependenciesCacheMap.get(theme);\n\n  if (dependencies === undefined) {\n    dependencies = getThemeCompositionDependencies(theme);\n\n    if (dependencies !== undefined) {\n      dependenciesCacheMap.set(theme, dependencies);\n    }\n  }\n\n  return dependencies;\n};\n/**\r\n * Takes an array of objects, which contain themes and options, and returns a composed theme\r\n *\r\n * @param {Object[]} options\r\n * @param {Object} [options[].theme] - Theme object to compose\r\n * @param {string} [options[].compose] - Method of composition of current theme with previous one\r\n * @param {string} [options[].prefix] - Prefix to filter out properties in current theme before composition\r\n * @param {boolean} [options[].noCache=false] - Whether composed theme should not be cached for specified params.\r\n *\r\n * @returns {Object}\r\n */\n\n\nvar composeTheme = function composeTheme(options) {\n  var first = options[0];\n  var checkCache = first.noCache !== true;\n  var composeMethod = typeof first.compose === 'string' ? first.compose : Compose.Merge;\n  var resultTheme;\n  var dependencies;\n\n  if (typeof first.prefix === 'string' && first.prefix.length > 0) {\n    resultTheme = getCachedPrefixedTheme(first.theme, first.prefix);\n  } else {\n    resultTheme = first.theme;\n  }\n\n  var _loop = function _loop(i) {\n    var _options$i = options[i],\n        theme = _options$i.theme,\n        prefix = _options$i.prefix,\n        compose = _options$i.compose,\n        noParseComposes = _options$i.noParseComposes,\n        _options$i$noCache = _options$i.noCache,\n        noCache = _options$i$noCache === void 0 ? false : _options$i$noCache;\n    var parseComposes = typeof noParseComposes === 'boolean' ? noParseComposes === false : first.noParseComposes !== true;\n\n    if (typeof compose === 'string') {\n      composeMethod = compose;\n    }\n\n    if (noCache && checkCache) {\n      checkCache = false;\n    }\n\n    var composedCachedItem = void 0;\n\n    if (checkCache && composeMethod !== Compose.Replace) {\n      var composedThemesCache = composedThemesCacheMap.get(theme);\n\n      if (composedThemesCache === undefined) {\n        composedThemesCache = [];\n        composedThemesCacheMap.set(theme, composedThemesCache);\n      } else {\n        composedCachedItem = composedThemesCache.find(function (item) {\n          return item.againstTheme === resultTheme && item.prefix === prefix && item.composeMethod === composeMethod && item.parseComposes === parseComposes;\n        });\n\n        if (composedCachedItem !== undefined) {\n          resultTheme = composedCachedItem.composedTheme;\n          return \"continue\";\n        }\n      }\n\n      composedCachedItem = {\n        againstTheme: resultTheme,\n        prefix: prefix,\n        composeMethod: composeMethod,\n        parseComposes: parseComposes\n      };\n      composedThemesCache.push(composedCachedItem);\n    }\n\n    var composedTheme = void 0;\n\n    if (typeof prefix === 'string' && prefix.length > 0) {\n      composedTheme = (noCache ? filterThemeWithPrefix : getCachedPrefixedTheme)(theme, prefix);\n    } else {\n      composedTheme = theme;\n    }\n\n    if (composeMethod === Compose.Replace) {\n      resultTheme = composedTheme;\n\n      if (parseComposes && i < options.length - 1) {\n        dependencies = checkCache ? getCachedThemeCompositionDependencies(resultTheme) : getThemeCompositionDependencies(resultTheme);\n      }\n\n      return \"continue\";\n    } // Get composition dependensies ('composes') of the first theme only when it's needed by the second one\n\n\n    if (i === 1 && noParseComposes !== true) {\n      dependencies = checkCache ? getCachedThemeCompositionDependencies(first.theme) : getThemeCompositionDependencies(first.theme);\n    }\n\n    if (composeMethod === Compose.Merge) {\n      var composedThemeOriginal = composedTheme;\n      composedTheme = _extends({}, resultTheme);\n\n      for (var key in composedThemeOriginal) {\n        if (composedThemeOriginal.hasOwnProperty(key)) {\n          var targetClasses = composedTheme[key];\n          var composingClasses = composedThemeOriginal[key];\n\n          if (targetClasses !== undefined) {\n            composingClasses = targetClasses + \" \" + composingClasses; // Check if other classes depend on this one, and update them as well\n\n            if (parseComposes === true && dependencies !== undefined && dependencies[key] !== undefined) {\n              var targetClassRegex = new RegExp(\"\\\\b\" + targetClasses + \"\\\\b\");\n\n              for (var _iterator = dependencies[key], _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n                var _ref;\n\n                if (_isArray) {\n                  if (_i >= _iterator.length) break;\n                  _ref = _iterator[_i++];\n                } else {\n                  _i = _iterator.next();\n                  if (_i.done) break;\n                  _ref = _i.value;\n                }\n\n                var otherKey = _ref;\n                // Don't need to check for hasOwnProperty since we create dependencies with Object.create(null)\n                composedTheme[otherKey] = composedTheme[otherKey].replace(targetClassRegex, composingClasses);\n              }\n            }\n          }\n\n          composedTheme[key] = composingClasses;\n        }\n      }\n    } else if (composeMethod === Compose.Assign) {\n      if (dependencies === undefined || parseComposes === false) {\n        composedTheme = _extends({}, resultTheme, {}, composedTheme);\n      } else {\n        var _composedThemeOriginal = composedTheme;\n        composedTheme = _extends({}, resultTheme);\n\n        for (var _key in _composedThemeOriginal) {\n          if (_composedThemeOriginal.hasOwnProperty(_key)) {\n            var _targetClasses = composedTheme[_key];\n            var _composingClasses = _composedThemeOriginal[_key]; // Check if other classes depend on this one, and update them as well\n\n            if (dependencies[_key] !== undefined) {\n              var _targetClassRegex = new RegExp(\"\\\\b\" + _targetClasses + \"\\\\b\");\n\n              for (var _iterator2 = dependencies[_key], _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n                var _ref2;\n\n                if (_isArray2) {\n                  if (_i2 >= _iterator2.length) break;\n                  _ref2 = _iterator2[_i2++];\n                } else {\n                  _i2 = _iterator2.next();\n                  if (_i2.done) break;\n                  _ref2 = _i2.value;\n                }\n\n                var _otherKey = _ref2;\n                // Don't need to check for hasOwnProperty since we create dependencies with Object.create(null)\n                composedTheme[_otherKey] = composedTheme[_otherKey].replace(_targetClassRegex, _composingClasses);\n              }\n            }\n\n            composedTheme[_key] = _composingClasses;\n          }\n        }\n      }\n    }\n\n    if (composedCachedItem !== undefined) {\n      composedCachedItem.composedTheme = composedTheme;\n    }\n\n    resultTheme = composedTheme;\n  };\n\n  for (var i = 1; i < options.length; i++) {\n    var _ret = _loop(i);\n\n    if (_ret === \"continue\") continue;\n  }\n\n  return resultTheme;\n};\n\nexport { Compose, composeTheme, filterThemeWithPrefix, getCachedPrefixedTheme, getCachedThemeCompositionDependencies, getThemeCompositionDependencies };\n"],
  "mappings": "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",
  "names": ["Compose", "getCachedPrefixedTheme", "getCachedThemeCompositionDependencies", "composeTheme", "_loop", "i"]
}
